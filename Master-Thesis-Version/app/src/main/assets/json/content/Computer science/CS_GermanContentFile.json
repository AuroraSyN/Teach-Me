{
  "items": [
    {
      "title": "Objektorientiertes Programmieren in Java",
      "qType": "BIG_de_1",
      "content": [
        {
          "tag_line": "Objekte",
          "qType": "SMALL_de_1",
          "details": [
            "<h2>Objekte</h2>\n\n<p>Java ist eine objektorientierte Sprache. Das verlangt vom Entwickler neben dem Erlernen neuer Sprachelemente auch eine neue &laquo;objektorientierte&raquo; Denkweise. In Form eines Tutorials soll hier mit dieser Denkweise vertraut gemacht werden.</p>\n\n<p>Herk&ouml;mmliche Softwareentwicklung bestand oftmals darin, zur L&ouml;sung eines vorgegebenen Problems Algorithmen zu entwerfen und diese in Prozeduren zu gie&szlig;en, die in einer Programmiersprache - wie zum Beispiel C - formuliert sind. Man spricht daher auch von prozeduraler Programmierung.</p>\n\n<p>Betrachtet man jedoch die reale Welt, so stellt man fest, dass die Dinge sich hier nicht in einer abstrakten prozeduralen Weise bewegen. Diesen Bruch zwischen realer Welt und Softwareentwicklung versucht der objektorientierte Ansatz zu &uuml;berwinden. Analysiert man seine materielle Umgebung, so stellt man fest, dass diese im wesentlichen aus Objekten besteht, die in verschiedener Art und Weise miteinander agieren. So k&ouml;nnte es hier zum Beispiel gerade ein Objekt Fahrrad geben.</p>\n\n<p><img align=\"left\" alt=\"Objekt\" height=\"160\" src=\"https://www.kompf.de/java/images/java-tutor-1.gif\" width=\"165\" /> Nimmt man das Fahrrad noch weiter unter die Lupe, erkennt man, dass dieses Fahrrad bestimmte <em>Eigenschaften</em> bzw. <em>Attribute</em> (wie Farbe, Gr&ouml;&szlig;e, momentane Geschwindigkeit) besitzt und dass es <em>Methoden</em> gibt, diese Eigenschaften zu ver&auml;ndern (z.B. die Methode &quot;Tritt schneller&quot;, die zu einer Erh&ouml;hung der Geschwindigkeit f&uuml;hren wird oder die Methode &quot;Bremse&quot;, die das Gegenteil bewirken sollte).</p>\n\n<p>Transformiert man diese Erkenntnis aus der realen in die Software Welt, so kann man formulieren:</p>\n\n<p class=\"definition\">Ein Software Objekt ist ein B&uuml;ndel aus Attributen und darauf bezogenen Methoden.</p>\n"
          ]
        },
        {
          "tag_line": "Klassen",
          "qType": "SMALL_de_2",
          "details": [
            "<h2>Klassen</h2>\n\n<h3 id=\"klassen_als_bauplan\">Klassen als Bauplan</h3>\n\n<p>Wenn man verschiedene Fahrr&auml;der der realen Welt genauer betrachtet, so ist festzustellen, dass alle diese Fahrrad Objekte &auml;hnlich sind: Alle besitzen Bremsen, alle haben irgendeine Farbe usw. Es muss also einen <em>Bauplan</em> geben, der beschreibt, wie ein Fahrrad grunds&auml;tzlich auszusehen hat. Alle Fahrrad Objekte sind nach diesem Bauplan erstellt worden - deswegen ist es auch m&ouml;glich, ein beliebiges Fahrrad zu fahren, wenn man einmal das Fahrradfahren gelernt hat!</p>\n\n<p class=\"definition\">Eine Klasse ist ein Bauplan, welcher die Attribute und Methoden definiert, die alle Objekte einer bestimmten Art besitzen.</p>\n\n<p><img align=\"left\" alt=\"class StockItem\" height=\"134\" src=\"https://www.kompf.de/java/images/java-tutor-2.png\" style=\"margin-right:15px;\" width=\"158\" /> Die Abbildung zeigt eine Klasse <tt>StockItem</tt> in der sogenannten UML (unified modelling language) Notation. Diese Klasse k&ouml;nnte in einem Programm zur Aktienanalyse verwendet werden. Ein solches Programm muss viele verschiedene Aktien Objekte verwalten k&ouml;nnen. Damit dies effektiv geschehen kann, sollten alle diese verschiedenen Objekte jedoch nach einem einheitlichen Bauplan - der Klassendefinition - erstellt werden.</p>\n\n<p>Der Name der Klasse steht in der UML-Notation im oberen Drittel des Rechtecks. Im mittleren Drittel stehen die Attribute. Die Beispielklasse <tt>StockItem</tt> definiert die zwei Attribute m_name und m_value, d.h. den Namen der Aktie und den momentanen Kurswert. Das Minuszeichen vor den Attributen bedeutet, das diese <tt class=\"keyword\">private</tt> Mitglieder der Klasse sind, d.h. von au&szlig;en kann nicht direkt auf sie zugegriffen werden.</p>\n\n<p>Im unteren Drittel stehen die Methoden der Klasse <tt>StockItem</tt>. Das Pluszeichen vor ihnen zeigt, dass sie <tt class=\"keyword\">public</tt> sind, d.h. die Methoden d&uuml;rfen von anderen Objekten aufgerufen werden. Damit zeigt sich das Prinzip der Kapselung: Anstatt auf das Attribut m_value direkt zuzugreifen, <em>m&uuml;ssen</em> andere Objekte die Zugriffsmethoden setValue() und getValue() benutzen! So hat der Entwickler der Klasse die M&ouml;glichkeit, in setValue() noch zus&auml;tzliche Abfragen, z.B. bez&uuml;glich der G&uuml;ltigkeit des Parameters, einzubauen.</p>\n\n<p>Aufmerksamen Lesern wird bei Betrachtung der Abbildung nicht entgangen sein, dass Methoden in Java - wie auch in C++ - nicht nur durch den Namen, sondern durch Namen <em>und</em> Parameteranzahl und -typ unterschieden werden! So kann es die Methode setValue() zweimal geben: Einmal mit einem Parameter vom Typ <tt class=\"keyword\">double</tt> und mit einem vom Typ <tt>String</tt>. Der Compiler erkennt beim Aufruf dieser Methode anhand des Parametertyps selbstt&auml;tig, welche Variante er verwenden muss.</p>\n\n<h3 id=\"klassendefinition_und_implementierung\">Klassendefinition und Implementierung</h3>\n\n<p>In Java gibt es keine Trennung zwischen Definition und Implementierung einer Klasse. Beides erfolgt in einer Textdatei mit der Extension <b>.java</b>, die den Namen der Klasse tr&auml;gt. Eine Unterteilung in Header- und Implementierungsdatei wie bei C++ gibt es nicht.</p>\n\n<p>Die Definition und Implementierung der Java Klasse f&uuml;r StockItem wird also in der Datei mit dem Namen <b>StockItem.java</b> vorgenommen:</p>\n\n<pre class=\"java\">\n<span class=\"keyword\">package</span> de.kompf.tutor;\n\n<span class=\"doccomment\">/**\n * Class representing a StockItem.\n */</span>\n<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> StockItem {\n  <span class=\"keyword\">private</span> String m_name;\n  <span class=\"keyword\">private</span> <span class=\"keyword\">double</span> m_value;\n\n  <span class=\"doccomment\">/**\n   * Construct a new StockItem with empty name and no value.\n   */</span>\n  <span class=\"keyword\">public</span> StockItem() {\n    <span class=\"keyword\">this</span>(<span class=\"quotedstring\">&quot;&quot;</span>, 0.0);\n  }\n\n  <span class=\"doccomment\">/**\n   * Construct a new StockItem with no value.\n   * \n   * @param name The name of the StockItem.\n   */</span>\n  <span class=\"keyword\">public</span> StockItem(String name) {\n    <span class=\"keyword\">this</span>(name, 0.0);\n  }\n\n  <span class=\"doccomment\">/**\n   * Construct a new StockItem.\n   * \n   * @param name The name.\n   * @param value The value.\n   */</span>\n  <span class=\"keyword\">public</span> StockItem(String name, <span class=\"keyword\">double</span> value) {\n    m_name = name;\n    m_value = value;\n  }\n\n  <span class=\"doccomment\">/**\n   * @return The name.\n   */</span>\n  <span class=\"keyword\">public</span> String getName() {\n    <span class=\"keyword\">return</span> m_name;\n  }\n\n  <span class=\"doccomment\">/**\n   * @param val The value to set.\n   */</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setValue(<span class=\"keyword\">double</span> val) {\n    m_value = val;\n  }\n\n  <span class=\"doccomment\">/**\n   * @param val The value to set.\n   */</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setValue(String val) {\n    m_value = Double.parseDouble(val);\n  }\n\n  <span class=\"doccomment\">/**\n   * @return The value.\n   */</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">double</span> getValue() {\n    <span class=\"keyword\">return</span> m_value;\n  }\n\n  <span class=\"doccomment\">/**\n   * @see java.lang.Object#toString()\n   */</span>\n  @Override\n  <span class=\"keyword\">public</span> String toString() {\n    <span class=\"keyword\">return</span> m_name + <span class=\"quotedstring\">&quot;: &quot;</span> + m_value;\n  }\n}\n</pre>\n\n<p>Die Datei beginnt mit einer Package Deklaration. Dadurch lassen sich auch gro&szlig;e Projekte gut strukturieren. Zum einen dient der Packagename <tt>de.kompf.tutor</tt> als eine Art Namensraum: Klassennamen m&uuml;ssen nur innerhalb einer Package eindeutig sein. Zum anderen werden die Dateien entsprechend ihres Packagenamens auf der Platte abgelegt: Alle zur Package <tt>de.kompf.tutor</tt> geh&ouml;renden Java Dateien befindet sich im Verzeichnis <b>de/kompf/tutor</b> relativ zum Projektverzeichnis.</p>\n\n<p>Die eigentliche Klassendefinition beginnt mit den Schl&uuml;sselw&ouml;rtern <tt class=\"keyword\">public class</tt> gefolgt vom Namen der Klasse. Der Klassenrumpf wird von geschweiften Klammern { } umschlossen. Er enth&auml;lt s&auml;mtliche Methoden und Attribute (&laquo;Member&raquo;) der Klasse. Dabei kennzeichnen die Schl&uuml;sselw&ouml;rter <tt class=\"keyword\">public</tt> und <tt class=\"keyword\">private</tt> vor <em>jeder</em> Deklaration die im letzten Abschnitt besprochene &ouml;ffentliche oder private Sichtbarkeit des Members. Es gibt au&szlig;erdem noch die M&ouml;glichkeit, mittels <tt class=\"keyword\">protected</tt> Variablen und Methoden zu deklarieren, die ausschlie&szlig;lich abgeleiteten Klassen zur Verf&uuml;gung stehen sollen. Dazu mehr sp&auml;ter mehr beim Thema <em>Vererbung</em>. Es ist auch m&ouml;glich, die Sichtbarkeit nicht explizit anzugeben. Dann ist der entsprechende Member in der zugeh&ouml;rigen Package sichtbar.</p>\n\n<p>Jede Klasse ben&ouml;tigt mindestens einen Konstruktor (kurz <em>ctor</em>) zur Erzeugung von Objekten der Klasse. Ein Konstruktor hat den gleichen Namen wie die Klasse und keinen R&uuml;ckgabewert. Eine Angabe der Sichtbarkeit per <tt class=\"keyword\">public</tt>, <tt class=\"keyword\">private</tt> und so weiter ist auch f&uuml;r Konstruktoren m&ouml;glich. Man kann auch auf die explizite Angabe eines Konstruktors verzichten, in diesem Fall hat die Klasse automatisch einen impliziten <tt class=\"keyword\">public</tt> Konstruktor ohne Parameter, den <em>Default Konstruktor</em>.</p>\n\n<p>Die Klasse besitzt drei Konstruktoren, um eine Initialisierung mit verschiedenen Kombinationen von Parametern zu erlauben. Eine Angabe von Defaultwerten direkt in der Parameterliste analog zu C++ ist in Java nicht m&ouml;glich. Die restliche Implementierung besteht aus den Methoden zum Setzen und Auslesen der Membervariablen. Eine Methode zum Setzen des Namens fehlt mit Absicht, es soll nicht m&ouml;glich sein, den Namen eines StockItems im Nachhinein zu &auml;ndern.</p>\n\n<p>Im Gegensatz zur gleichnamigen C++ Klasse aus dem <a href=\"https://www.kompf.de/cplus/tutor.html\">C++ Tutorial</a> ist es in Java nicht notwendig, sich mit Dingen wie Copy-Constructor, Destructor und Assignment Operator herumzuschlagen. Warum dies so ist, wird bei der Betrachtung des <em>Objektlebenszyklus</em> verst&auml;ndlich.</p>\n"
          ]
        },
        {
          "tag_line": "Objektlebenszyklus",
          "qType": "SMALL_de_3",
          "details": [
            "<h2>Objektlebenszyklus</h2>\n\n<p>Der Lebenszyklus eines Java Objektes besteht aus den Abschnitten</p>\n\n<ol>\n\t<li>Erzeugung</li>\n\t<li>Benutzung</li>\n\t<li>Zerst&ouml;rung</li>\n</ol>\n\n<h3 id=\"erzeugen_eines_objektes\">Erzeugen eines Objektes</h3>\n\n<p>Das Erzeugen eines Objektes erfolgt immer dynamisch mittels des <tt class=\"keyword\">new</tt> Operators in Verbindung mit einem <em>Konstruktor</em>. Das Ergebnis kann einer Variablen mit passendem Typ zugewiesen werden:</p>\n\n<pre class=\"java\">\nStockItem bas = <span class=\"keyword\">new</span> StockItem(<span class=\"quotedstring\">&quot;BAS&quot;</span>, 120.34);\n</pre>\n\n<p>Eine statische Erzeugung ohne <tt class=\"keyword\">new</tt> analog zu C++ ist in Java nicht m&ouml;glich. Eine Objektvariable enth&auml;lt demnach <em>immer</em> eine <em>Referenz</em> auf das Objekt und nicht das Objekt selbst.</p>\n\n<h3 id=\"benutzen_eines_objektes\">Benutzen eines Objektes</h3>\n\n<p>Ein Objekt wird benutzt, indem eine seiner Methoden aufgerufen wird:</p>\n\n<pre class=\"java\">\nbas.setValue(52.80);\n<span class=\"keyword\">double</span> v = bas.getValue();\n<span class=\"slashslashcomment\">// v sollte jetzt den Wert 52.8 haben</span>\n</pre>\n\n<p>Au&szlig;erdem kann ein Objekt als Parameter an eine Methode &uuml;bergeben oder von dieser per <tt class=\"keyword\">return</tt> zur&uuml;ckgeliefert werden. Die Parameter&uuml;bergabe an Methoden erfolgt in Java immer <em>per Value</em>. Da die Objektvariable in Java aber nur die Referenz auf das Objekt und nicht das Objekt selbst enth&auml;lt, erfolgt hierbei kein Kopieren des Objektes. Als Konsequenz sind &Auml;nderungen am Objekt, die eine Methode vornimmt, auch im aufrufenden Kode sichtbar:</p>\n\n<pre class=\"java\">\n<span class=\"keyword\">class</span> Converter {\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> split(StockItem item, <span class=\"keyword\">double</span> count) {\n    item.setValue(item.getValue() / count);\n  }\n}\n\nbas.setValue(52.80);\nConverter.split(bas, 2);\nSystem.out.println(bas);\n<span class=\"slashslashcomment\">// gibt &#39;BAS: 26.4&#39; aus</span>\n</pre>\n\n<p>Die Zuweisung eines Objektes an eine Variable betrifft dann ebenso nur die Objektreferenz. Es gibt in Java kein Pendant zum Assignment Operator aus C++.</p>\n\n<pre class=\"java\">\nStockItem x = <span class=\"keyword\">new</span> StockItem(<span class=\"quotedstring\">&quot;XYZ&quot;</span>, 42);\nStockItem y = <span class=\"keyword\">new</span> StockItem(<span class=\"quotedstring\">&quot;ABC&quot;</span>, 22);\n\nx = y;\n<span class=\"slashslashcomment\">// Die Variable x enth&auml;lt eine Referenz auf das Objekt mit dem Namen &quot;ABC&quot;.</span>\n<span class=\"slashslashcomment\">// Das Objekt namens &quot;XYZ&quot; wird nicht mehr referenziert und irgendwann vom</span>\n<span class=\"slashslashcomment\">// Garbage Collector entsorgt.</span>\n</pre>\n\n<p>Zuweisungen und Parameter&uuml;bergaben betreffen in Java also immer nur die Objektreferenz. Als Konsequenz wird niemals eine automatische Kopie von Objekten erzeugt. Ben&ouml;tigt man aber doch einmal eine Kopie eines Objektes, kann man daf&uuml;r seine <tt>clone()</tt> Methode verwenden. Diese Methode muss vom Entwickler kodiert werden, es gibt hierf&uuml;r keinen Automatismus. Der Fall, das man eine Kopie eines Objektes ben&ouml;tigt, tritt allerdings &auml;u&szlig;erst selten auf. Dieses Einsteigertutorial verzichtet daher auf eine n&auml;here Betrachtung von <tt>clone()</tt>.</p>\n\n<h3 id=\"statische_methoden\">Statische Methoden</h3>\n\n<p>Bei der im vorigen Abschnitt eingef&uuml;hrten Methode <tt>split</tt> handelt es sich um eine <b>statische</b> Methode. Im Programmcode werden statische Methoden durch das Keyword <tt class=\"keyword\">static</tt> bei der Methodendeklaration gekennzeichnet.</p>\n\n<p>Statische Methoden geh&ouml;ren zu einer bestimmtem Klasse und nicht zu einem Objekt. Daher steht beim Aufruf einer solchen Methode vor dem Punkt auch ein Klassenname und keine Variable. Statische Methoden haben logischerweise keinen Zugriff auf die nicht-statischen Variablen und Methoden der Klasse. Oft werden <tt class=\"keyword\">static</tt> Methoden als Utility- und Hilfsfunktionen verwendet, die nicht im Kontext eines bestimmten Objektes ausgef&uuml;hrt werden m&uuml;ssen. Prominentes Beispiel daf&uuml;r sind die mathematischen Funktionen aus <tt>java.lang.Math</tt>.</p>\n\n<h3 id=\"zerst_ren_eines_objektes\">Zerst&ouml;ren eines Objektes</h3>\n\n<p>Der Java Programmierer braucht sich nicht um das Aufr&auml;umen nicht mehr ben&ouml;tigter Objekte zu k&uuml;mmern. Das erledigt der Garbage Collector (GC) f&uuml;r ihn.</p>\n\n<p>Der GC f&uuml;hrt Buch &uuml;ber alle per <tt class=\"keyword\">new</tt> angelegten Objekte. Er pr&uuml;ft in regelm&auml;&szlig;igen Abst&auml;nden, ob es Objekte gibt, die von keiner Variablem mehr referenziert werden. Der von diesen Objekten belegte Speicherplatz wird dann freigegeben.</p>\n\n<p>Es gibt in Java im Unterschied zu C++ daher auch keinen delete Operator und keinen Destruktor. Falls man doch eine M&ouml;glichkeit ben&ouml;tigt, kurz vor dem Entfernen des Objektes noch eigenen Programmcode auszuf&uuml;hren, kann daf&uuml;r die Methode <tt>finalize()</tt> genutzt werden.</p>\n"
          ]
        },
        {
          "tag_line": "Vererbung",
          "qType": "SMALL_de_4",
          "details": [
            "<h2>Vererbung</h2>\n\n<h3 id=\"konzept\">Konzept</h3>\n\n<p>Vererbung erlaubt die Definition neuer Klassen auf der Basis von bestehenden Klassen. Dies ist ein grundlegendes Konzept objektorientierten Designs. <img align=\"left\" alt=\"Vererbung\" height=\"107\" src=\"https://www.kompf.de/java/images/java-tutor-3.gif\" width=\"173\" /> Weiter oben wurde der Begriff der <em>Klasse</em> als eine Art Bauplan f&uuml;r Objekte erkl&auml;rt. Anhand des dort verwendeten Beispiels &quot;Fahrrad&quot; lassen sich weitere Parallelen zur realen Welt ziehen: Es f&auml;llt auf, dass es hier <em>verschiedene Arten</em> von Fahrr&auml;dern gibt: Rennr&auml;der, Montainbikes, Trekkingr&auml;der und das gute alte Hollandrad. Warum sind alle diese verschiedenen R&auml;der als F&auml;hrr&auml;der erkennbar? Weil sie gewisse gemeinsame Eigenschaften haben: Alle haben zwei R&auml;der, einen Lenker und lassen sich durch Tritt auf die Pedale fortbewegen. Zus&auml;tzlich zu diesen Gemeinsamkeiten bringen sie aber auch neue Eigenschaften ein: Montainbikes und Rennr&auml;der haben jeweils eine Gangschaltung, unterscheiden sich aber durch die Art der Bereifung.</p>\n\n<p>In objektorientierter Sprache k&ouml;nnte man also sagen: Die Klassen Montainbikes, Rennr&auml;der und Hollandr&auml;der <em>erben</em> von der Klasse Fahrr&auml;der gemeinsame Eigenschaften und f&uuml;gen zus&auml;tzliche hinzu. Allgemein gilt:</p>\n\n<ul>\n\t<li>Klassen k&ouml;nnen definiert werden in Abh&auml;ngigkeit von anderen Klassen: &quot;A ist eine Art von B&quot;. In diesem Fall ist B die <em>Basisklasse</em> von A.</li>\n\t<li>Eine Klasse kann auch von mehreren Klassen erben: A ist eine Art von B und C (Mehrfachvererbung). Allerdings ist Mehrfachvererbung in Java nicht f&uuml;r Klassen, sondern nur f&uuml;r <a href=\"https://www.kompf.de/java/tutor.html#h2_interfaces\">Interfaces</a> erlaubt.</li>\n\t<li>Jede Klasse erbt die (&ouml;ffentlichen) Attribute und Methoden ihrer Basisklasse(n).</li>\n\t<li>Jedoch kann jede Klasse eigene Variablen und Methoden hinzuf&uuml;gen.</li>\n</ul>\n\n<p>Es ist wichtig zu verstehen, dass Vererbung nur in eine Richtung l&auml;uft: Ein Rennrad ist zwar immer auch ein Fahrrad, aber nicht jedes Fahrrad ist automatisch ein Rennrad.</p>\n\n<h3 id=\"vererbung_in_java\">Vererbung in Java</h3>\n\n<p>Die bereits definierte und benutzte Klasse <em>StockItem</em> erlaubt die Speicherung eines Namens und eines dazugeh&ouml;renden Wertes und ist zur Darstellung von Aktienkursen gedacht. Wer sich mit dieser Materie schon besch&auml;ftigt hat, der wei&szlig;, dass zu einer Aktie noch viele Informationen mehr gespeichert werden k&ouml;nnen. So gibt es neben dem (Tages- oder Wochen-)Schlusskurs (<em>Close</em>) noch Er&ouml;ffnungs- (<em>Open</em>), H&ouml;chst- (<em>High</em>) und Tiefstkurs (<em>Low</em>). StockItem soll daher um die M&ouml;glichkeit erweitert werden, statt nur einem Wert die Er&ouml;ffnungs- und Schlusskurse abfragen und setzen zu k&ouml;nnen.</p>\n\n<p>Diese Erweiterung soll jedoch nicht durch Ver&auml;ndern der existierenden Klasse StockItem erfolgen - diese Klasse wird bereits in vielen Softwareprojekten benutzt und eine &Auml;nderung ihrer Funktionalit&auml;t k&ouml;nnte unter Umst&auml;nden b&ouml;se Auswirkungen haben. Auch will man das Rad nicht v&ouml;llig neu erfinden - vorhandener Code soll so weit wie m&ouml;glich wiederverwendet werden. Das alles l&auml;sst sich dadurch erreichen, indem eine neue Klasse <em>StockItemOC</em> definiert wird, die von der vorhandenen Klasse StockItem <em>abgeleitet</em> ist:</p>\n\n<pre class=\"java\">\n<span class=\"keyword\">package</span> de.kompf.tutor;\n\n<span class=\"doccomment\">/**\n * Class representing a StockItem with open and close value.\n */</span>\n<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> StockItemOC <span class=\"keyword\">extends</span> StockItem {\n\n  <span class=\"keyword\">private</span> <span class=\"keyword\">double</span> m_open;\n  <span class=\"keyword\">private</span> <span class=\"keyword\">double</span> m_close;\n  \n  <span class=\"doccomment\">/**\n   * Construct a new StockItemOC with empty name and no values.\n   */</span>\n  <span class=\"keyword\">public</span> StockItemOC() {\n  }\n\n  <span class=\"doccomment\">/**\n   * Construct a new StockItemOC with no values.\n   * \n   * @param name The name.\n   */</span>\n  <span class=\"keyword\">public</span> StockItemOC(String name) {\n    <span class=\"keyword\">super</span>(name);\n  }\n\n  <span class=\"doccomment\">/**\n   * Construct a new StockItemOC.\n   * \n   * @param name The name.\n   * @param open The open value.\n   * @param close The close value.\n   */</span>\n  <span class=\"keyword\">public</span> StockItemOC(String name, <span class=\"keyword\">double</span> open, <span class=\"keyword\">double</span> close) {\n    <span class=\"keyword\">super</span>(name);\n    m_open = open;\n    m_close = close;\n  }\n\n  <span class=\"doccomment\">/**\n   * @return The value of this item which is identical to the close value.\n   */</span>\n  @Override\n  <span class=\"keyword\">public</span> <span class=\"keyword\">double</span> getValue() {\n    <span class=\"keyword\">return</span> m_close;\n  }\n\n  <span class=\"doccomment\">/**\n   * @param val The value of this item to set.\n   */</span>\n  @Override\n  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setValue(<span class=\"keyword\">double</span> val) {\n    m_close = val;\n  }\n\n  <span class=\"doccomment\">/**\n   * @return The open value.\n   */</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">double</span> getOpen() {\n    <span class=\"keyword\">return</span> m_open;\n  }\n\n  <span class=\"doccomment\">/**\n   * @param open The open value to set.\n   */</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setOpen(<span class=\"keyword\">double</span> open) {\n    m_open = open;\n  }\n\n  <span class=\"doccomment\">/**\n   * @return The close value.\n   */</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">double</span> getClose() {\n    <span class=\"keyword\">return</span> m_close;\n  }\n\n  <span class=\"doccomment\">/**\n   * @param close The close value to set.\n   */</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setClose(<span class=\"keyword\">double</span> close) {\n    m_close = close;\n  }\n\n  <span class=\"doccomment\">/**\n   * @see Object#toString()\n   */</span>\n  @Override\n  <span class=\"keyword\">public</span> String toString() {\n    <span class=\"keyword\">return</span> getName() + <span class=\"quotedstring\">&quot;: &quot;</span> + m_open + <span class=\"quotedstring\">&quot;/&quot;</span> + m_close;\n  }\n}\n</pre>\n\n<p>Die einzige syntaktische Erweiterung gegen&uuml;ber der bekannten Klassendefinition ist, dass zu Beginn der Definition nach dem Klassennamen <tt>StockItemOC</tt> das Schl&uuml;sselwort <tt class=\"keyword\">extends</tt> gefolgt vom Namen der Basisklasse angegeben wird.</p>\n\n<p>Welche Auswirkung hat diese Vererbungsbeziehung nun auf das Verhalten der abgeleiteten Klasse StockItemOC? <img align=\"left\" alt=\"class StockItemOC\" height=\"386\" src=\"https://www.kompf.de/java/images/java-tutor-4.png\" style=\"margin:5px 35px 5px 0px;\" width=\"159\" /></p>\n\n<ul>\n\t<li>StockItemOC <em>erbt</em> die Methode getName() von StockItem. Diese Methode braucht also nicht noch einmal implementiert zu werden.</li>\n\t<li>StockItemOC <em>&uuml;berschreibt</em> die Methoden setValue() und getValue() von StockItem. Diese Methoden m&uuml;ssen anders implementiert sein, da StockItemOC ja zwei Kurswerte statt einem zur Auswahl hat.</li>\n\t<li>StockItemOC hat die <em>zus&auml;tzlichen</em> Methoden getOpen(), setOpen(), getClose() und setClose(), um die zus&auml;tzliche gew&uuml;nschte Funktionalit&auml;t abbilden zu k&ouml;nnen.</li>\n\t<li>StockItemOC <em>erbt</em> die Variablen m_name und m_value von StockItem. Da diese Variablen dort aber als <em>private</em> deklariert sind, haben die Methoden von StockItemOC keinen Zugriff auf diese Variable - au&szlig;er nat&uuml;rlich getName(), denn diese ist ja auch von StockItem geerbt.</li>\n\t<li>StockItemOC deklariert die <em>zus&auml;tzlichen</em> privaten Variablen m_open und m_close.</li>\n</ul>\n\n<p>Interessant sind auch die Konstruktoren der Klasse: Da ja kein Zugriff auf die <tt class=\"keyword\">private</tt> Membervariablen der Basisklasse erlaubt ist, erfolgt das Setzen von <tt>m_name</tt> &uuml;ber den Aufruf des Konstruktors der Basisklasse per <tt class=\"keyword\">super</tt><tt>(<i>Parameterliste</i>)</tt>. Der Aufruf von <tt class=\"keyword\">super</tt> muss immer das erste Statement im Konstruktor sein. L&auml;sst man ihn - wie im parameterlosen Defaultkonstruktor des Beispiels - weg, dann f&uuml;gt der Compiler implizit <tt class=\"keyword\">super()</tt> ein.</p>\n\n<h3 id=\"verwendung_abgeleiteter_klassen\">Verwendung abgeleiteter Klassen</h3>\n\n<p>Die Verwendung von abgeleiteten Klassen soll nun anhand der Klasse StockItemOC in einem kleinen Testprogramm demonstriert werden.</p>\n\n<p>Als Eintrittspunkt in ein Java-(Konsolen-)Programm dient die spezielle statische Methode <tt>main</tt> mit genau der im folgenden Beispiel angegebenen Signatur:</p>\n\n<pre class=\"java\">\n<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> main(String[] args) {\n  StockItem a = <span class=\"keyword\">new</span> StockItem(<span class=\"quotedstring\">&quot;BAY&quot;</span>, 34.9);\n  StockItem b = <span class=\"keyword\">new</span> StockItem(<span class=\"quotedstring\">&quot;BAS&quot;</span>, 24.2);\n  StockItemOC c = <span class=\"keyword\">new</span> StockItemOC(<span class=\"quotedstring\">&quot;DTE&quot;</span>, 57.0, 59.4);\n\n  System.out.println(a.getName() + <span class=\"quotedstring\">&quot;: &quot;</span> + a.getValue());\n  System.out.println(b.getName() + <span class=\"quotedstring\">&quot;: &quot;</span> + b.getValue());\n  System.out.println(c.getName() + <span class=\"quotedstring\">&quot;: &quot;</span> + c.getValue() \n      + <span class=\"quotedstring\">&quot; (&quot;</span> + c.getOpen() + <span class=\"quotedstring\">&quot;/&quot;</span> + c.getClose() + <span class=\"quotedstring\">&quot;)&quot;</span>);\n</pre>\n\n<p>Dies bietet auf den ersten Blick nichts neues. Beim zweiten Hinsehen erkennen wir, dass in der letzten Anweisung die Methode getName() des Objektes c, welches vom Typ StockItemOC ist, aufgerufen wird. Die Klasse StockItemOC hat aber gar keine Methode getName() definiert! Mit dem neu erworbenen Wissen &uuml;ber Vererbung ist jedoch klar, was passiert: Es wird einfach die von der Klasse StockItem <em>geerbte</em> Methode verwendet!</p>\n\n<p>Interessant ist auch die Verwendung der Methode getValue(). Diese gibt es sowohl in StockItem als auch in StockItemOC. In diesem Beispiel ist jedoch relativ einfach zu verstehen, was passiert: In der letzten Anweisung ruft der Java Compiler StockItemOC.getValue() auf, in den Anweisungen davor jedoch StockItem.getValue(). Das ist eindeutig, weil der Typ der Objekte a, b und c bereits zur &Uuml;bersetzungszeit bekannt ist.</p>\n\n<p>Was passiert jedoch, wenn der Compiler beim &Uuml;bersetzen den genauen Typ des Objektes noch nicht kennt? Hier ist die Fortsetzung des Programms:</p>\n\n<pre class=\"java\">\n  <span class=\"slashslashcomment\">// array with element type StockItem</span>\n  StockItem[] astocks = <span class=\"keyword\">new</span> StockItem[3];\n  astocks[0] = a;\n  astocks[1] = b;\n  astocks[2] = c;\n  \n  <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = 0; i &lt; astocks.length; ++i) {\n      System.out.println(astocks[i].getName() + <span class=\"quotedstring\">&quot;: &quot;</span> + astocks[i].getValue());\n  }\n</pre>\n\n<p>Beim Aufruf astocks[i].getValue() muss je nachdem, ob die in astocks stehende Variable ein Objekt vom Typ StockItem (bei Index 0 und 1) oder vom Typ StockItemOC (Index 2) referenziert, eine andere Methode aufgerufen werden. Dies kann erst zur Laufzeit entschieden werden, man spricht daher von <em>dynamischer</em> oder <em>sp&auml;ter Bindung</em>.</p>\n\n<p>Der Java Compiler arbeitet immer mit dynamischer Bindung. C++ dagegen erlaubt hier die Steuerung der Bindungsart (statisch oder dynamisch) per Schl&uuml;sselwort <tt>virtual</tt> - diese Falle gibt es in Java zum Gl&uuml;ck nicht.</p>\n\n<p>Zum Schluss noch eine fortgeschrittene Anwendung. Statt in ein Array werden die Objekte in eine Liste gepackt. Anschlie&szlig;end werden sie nach ihrem Wert (getValue()) sortiert und ausgegeben. Das alles funktioniert auch dann, wenn die Liste sowohl Objekte vom Typ StockItem als auch StockItemOC enth&auml;lt:</p>\n\n<pre class=\"cplus\">\n  <span class=\"slashslashcomment\">// get the stock items ordered by price</span>\n  List&lt;StockItem&gt; stocks = <span class=\"keyword\">new</span> LinkedList&lt;StockItem&gt;();\n    \n  stocks.add(a);\n  stocks.add(b);\n  stocks.add(c);\n  \n  Collections.sort(stocks, <span class=\"keyword\">new</span> Comparator&lt;StockItem&gt;() {\n\n    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> compare(StockItem s1, StockItem s2) {\n      <span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>) Math.signum(s1.getValue() - s2.getValue());\n    }\n  });\n\n  System.out.println(<span class=\"quotedstring\">&quot;stock items ordered by price&quot;</span>);\n  System.out.println(stocks);\n} \n</pre>\n\n<p>F&uuml;r die Sortierung ist ein Comparator notwendig. Dessen Methode <tt>compare</tt> vergleicht die Werte zweier StockItems. Wie man sieht, reicht es v&ouml;llig aus, <tt>compare</tt> f&uuml;r Parameter des Typs StockItem zu implementieren. Es ist beim Aufruf der Methode dann egal, ob der aktuelle Parameter auf ein Objekt vom Typ StockItem oder StockItemOC zeigt. Dies ist ein Resultat (und Vorteil) der verwendeten Vererbungshierarchie.</p>\n\n<p>Die Ausgabe aller Items erfolgt ganz einfach per &Uuml;bergabe der kompletten Liste an <tt>System.out.println</tt>, was im Beispiel den Text</p>\n\n<pre class=\"code\">\n[BAS: 24.2, BAY: 34.9, DTE: 57.0/59.4]\n</pre>\n\n<p>in die Standardausgabe schreibt.</p>\n\n<p><tt>System.out.println</tt> verlangt als Parameter eine Variable vom Typ <tt>Object</tt>. Im Beispiel wird jedoch eine <tt>List</tt> &uuml;bergeben. Bei der Erkl&auml;rung, warum das funktioniert, kommt man zu einer wichtigen Eigenschaft aller Klassen in Java:</p>\n\n<p class=\"definition\">Alle Java Klassen sind implizit von der Klasse <tt>java.lang.Object</tt> abgeleitet.</p>\n\n<p>Also auch die Klassen StockItem und StockItemOC! <tt>System.out.println</tt> ruft nun die Methode <tt>toString()</tt> des &uuml;bergebenen Objekts auf und schreibt den R&uuml;ckgabewert in die Standardausgabe. Die Klasse LinkedList (die ja auch von Object erbt) implementiert <tt>toString()</tt> in der Form, dass f&uuml;r jedes Element der Liste ebenfalls <tt>toString()</tt> aufgerufen wird. Damit wird jetzt klar, warum in den Klassendefinitionen f&uuml;r StockItem und StockItemOC (siehe oben) jeweils die Methode <tt>toString()</tt> implementiert ist! H&auml;tte man dies nicht getan, dann s&auml;he die Ausgabe etwa so aus:</p>\n\n<pre class=\"code\">\n[de.kompf.tutor.StockItem@11b86e7, de.kompf.tutor.StockItem@35ce36, de.kompf.tutor.StockItemOC@757aef]\n</pre>\n\n<p>Es k&auml;me dann die von <tt>Object</tt> geerbte <tt>toString()</tt> Methode zur Anwendung, die den Klassennamen und eine Adresse ausgibt.</p>\n\n<h3 id=\"abstrakte_klassen\">Abstrakte Klassen</h3>\n\n<p>Bei einigen Vererbungshierarchien kommt man vielleicht zu der Erkenntnis, dass f&uuml;r bestimmte Basisklassen nie Objekte instanziert werden. Im oben eingef&uuml;hrten Fahrradbeispiel w&uuml;rde das dann hei&szlig;en, dass es keine Fahrr&auml;der vom Typ &laquo;Fahrrad&raquo; gibt, sondern jedes Fahrad sich einem speziellen, abgeleiteten Typ, wie Rennrad, Hollandrad und so weiter zuordnen l&auml;sst. Die Basisklasse Fahrrad wird dann als <b>abstrakt</b> bezeichnet.</p>\n"
          ]
        },
        {
          "tag_line": "Interfaces",
          "qType": "SMALL_de_5",
          "details": [
            "<h2>Interfaces</h2>\n\n<p>Wenn eine abstrakte Klasse nur noch Methodensignaturen, aber keine Implementierung mehr enth&auml;lt, wird sie zum <b>interface</b>. Java verwendet daf&uuml;r das reservierte Sch&uuml;sselwort <tt class=\"keyword\">interface</tt>.</p>\n\n<p>Ein <tt class=\"keyword\">interface</tt> verwendet man, um das Verhalten von Objekten festzulegen, bei denen man sich (noch) nicht auf eine bestimmte Implementierung festlegen will. Zum Beispiel k&ouml;nnte man so einen <tt>QuoteService</tt> definieren, der die Abfrage von Aktienkursen erlaubt:</p>\n\n<pre class=\"java\">\n<span class=\"keyword\">package</span> de.kompf.tutor;\n\n<span class=\"doccomment\">/**\n * Interface to define a service to get quotes.\n */</span>\n<span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> QuoteService {\n\n  <span class=\"doccomment\">/**\n   * Get the last known price for a stock item.\n   * \n   * @param name The name of the item.\n   * @return The price.\n   */</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">double</span> lastPrice(String name);\n\n  <span class=\"doccomment\">/**\n   * Get a stock item with the open and close at a given date.\n   * \n   * @param name The name of the item.\n   * @param date The date.\n   * @return The StockItemOC.\n   */</span>\n  <span class=\"keyword\">public</span> StockItemOC openClose(String name, java.util.Date date);\n}\n</pre>\n\n<p>Zu diesem Zeitpunkt gibt es noch keine Implementierung des Interface. Man kann beim Programmieren aber schon so tun, als g&auml;be es eine, indem einfach gegen das Interface programmiert wird:</p>\n\n<pre class=\"java\">\nList&lt;StockItem&gt; myStocks;\nQuoteService quoteService;\n<span class=\"slashslashcomment\">//  ...</span>\n<span class=\"slashslashcomment\">// get actual quotes for my stock</span>\n<span class=\"keyword\">for</span> (StockItem stockItem : myStocks) {\n  <span class=\"keyword\">double</span> lastPrice = quoteService.lastPrice(stockItem.getName());\n  stockItem.setValue(lastPrice);\n}\n</pre>\n\n<p>Um das Programm jetzt schon zu testen, kann man sich einen &laquo;Mock&raquo; Service schreiben, der das Interface QuoteService implementiert und irgendwelche Werte zur&uuml;ckliefert:</p>\n\n<pre class=\"java\">\n<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> MockQuoteService <span class=\"keyword\">implements</span> QuoteService {\n\n  <span class=\"keyword\">public</span> <span class=\"keyword\">double</span> lastPrice(String name) {\n    <span class=\"keyword\">return</span> 10.0;\n  }\n\n  <span class=\"keyword\">public</span> StockItemOC openClose(String name, Date date) {\n    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> StockItemOC(name, 10.0, 11.0);\n  }\n}\n</pre>\n\n<p>Im Code erg&auml;nzt man dann</p>\n\n<pre class=\"java\">\nquoteService = <span class=\"keyword\">new</span> MockQuoteService();\n</pre>\n\n<p>Sp&auml;ter, wenn die richtige Implementierung, zum Beispiel als Klasse <tt>YahooQuoteService</tt> zur Verf&uuml;gung steht, &auml;ndert man diese Zeile einfach in</p>\n\n<pre class=\"java\">\nquoteService = <span class=\"keyword\">new</span> YahooQuoteService();\n</pre>\n\n<p>und benutzt von diesem Zeitpunkt an eine andere Implementierung. Am restlichen Programm d&uuml;rfte sich nichts mehr &auml;ndern, wenn man konsequent gegen das Interface programmiert hat.</p>\n\n<p>Diese M&ouml;glichkeit zur Trennung von Interface und Implementierung ist ein gro&szlig;er Vorteil von Java. Insbesondere unter den Aspekten der Teamarbeit und der Wiederverwendbarkeit von Programmcode sollte man sich die Regel &laquo;Programmiere gegen Interfaces statt gegen Implementierungen&raquo; verinnerlichen.</p>\n"
          ]
        }
      ]
    },
    {
      "title": "Objektorientiertes Programmieren mit C++",
      "qType": "BIG_de_2",
      "content": [
        {
          "tag_line": "Objekte",
          "qType": "SMALL_de_6",
          "details": [
            "<h2>Objekte C++</h2>\n\n<p>C++ ist nicht nur das bessere C, sondern bietet dem Entwickler die M&ouml;glichkeit, objektorientiert zu programmieren. Dies verlangt neben dem Erlernen neuer Sprachelemente auch eine neue &quot;objektorientierte&quot; Denkweise. In Form eines Tutorials soll hier mit dieser Denkweise vertraut gemacht werden.</p>\n\n<p>Herk&ouml;mmliche Softwareentwicklung bestand oftmals darin, zur L&ouml;sung eines vorgegebenen Problems Algorithmen zu entwerfen und diese in Prozeduren zu gie&szlig;en, die in einer Programmiersprache - wie zum Beispiel C - formuliert sind. Man spricht daher auch von prozeduraler Programmierung.</p>\n\n<p>Betrachtet man jedoch die reale Welt, so stellt man fest, da&szlig; die Dinge sich hier nicht in einer abstrakten prozeduralen Weise bewegen. Diesen Bruch zwischen realer Welt und Softwareentwicklung versucht der objektorientierte Ansatz zu &uuml;berwinden. Analysiert man seine materielle Umgebung, so stellt man fest, da&szlig; diese im wesentlichen aus Objekten besteht, die in verschiedener Art und Weise miteinander agieren. So k&ouml;nnte es in unserer unmittelbaren Umgebung gerade ein Objekt Fahrrad geben.</p>\n\n<p><img align=\"left\" alt=\"Objekt\" height=\"160\" src=\"https://www.kompf.de/cplus/images/art2s.gif\" width=\"165\" /> Nimmt man das Fahrrad noch weiter unter die Lupe, erkennt man, da&szlig; dieses Fahrrad bestimmte <em>Eigenschaften</em> bzw. <em>Attribute</em> (wie Farbe, Gr&ouml;&szlig;e, momentane Geschwindigkeit) besitzt und da&szlig; es <em>Methoden</em> gibt, diese Eigenschaften zu ver&auml;ndern (z.B. die Methode &quot;Tritt schneller&quot;, die zu einer Erh&ouml;hung der Geschwindigkeit f&uuml;hren wird oder die Methode &quot;Bremse&quot;, die das Gegenteil bewirken sollte).</p>\n\n<p>Transformiert man diese Erkenntnis aus der realen in die Software-Welt, so kann man formulieren:</p>\n\n<p class=\"definition\">Ein Software-Objekt ist ein B&uuml;ndel aus Attributen und darauf bezogenen Methoden.</p>\n"
          ]
        },
        {
          "tag_line": "Klassen",
          "qType": "SMALL_de_7",
          "details": [
            "<h2>Klassen C++</h2>\n\n<h3 id=\"klassen_als_bauplan\">Klassen als Bauplan</h3>\n\n<p>Wenn wir verschiedene Fahrrad-Objekte der realen Welt genauer betrachten, so stellen wir fest, da&szlig; alle diese Fahrrad-Objekte &auml;hnlich sind: Alle besitzen Bremsen, alle haben irgendeine Farbe usw. Es mu&szlig; also einen <em>Bauplan</em> geben, der beschreibt, wie ein Fahrrad grunds&auml;tzlich auszusehen hat. Alle Fahrrad-Objekte sind nach diesem Bauplan erstellt worden - deswegen ist es uns auch m&ouml;glich, ein beliebiges Fahrrad zu fahren, wenn wir einmal das Fahrradfahren gelernt haben! Wieder &uuml;bertragen wir diese Erkenntnis in die Softwarewelt:</p>\n\n<p class=\"definition\">Eine Klasse ist ein Bauplan, welcher die Attribute und Methoden definiert, die alle Objekte einer bestimmten Art besitzen.</p>\n\n<p><img align=\"left\" alt=\"class StockItem\" height=\"127\" src=\"https://www.kompf.de/cplus/images/art4.gif\" width=\"173\" /> Die Abbildung zeigt eine Klasse <tt>StockItem</tt> in der sogenannten UML (unified modelling language) Notation. Diese Klasse k&ouml;nnte in einem Programm zur Aktienanalyse verwendet werden. Ein solches Programm mu&szlig; viele verschiedene Aktien-Objekte verwalten k&ouml;nnen. Damit dies effektiv geschehen kann, sollten alle diese verschiedenen Objekte jedoch nach einem einheitlichen Bauplan - der Klassendefinition - erstellt werden.</p>\n\n<p>Der Name der Klasse steht in der UML-Notation im oberen Drittel des Rechtecks. Im mittleren Drittel stehen die Attribute. Unsere Beispielklasse <tt>StockItem</tt> definiert die zwei Attribute m_name und m_value, d.h. den Namen der Aktie und den momentanen Kurswert. Das Minuszeichen vor den Attributen bedeutet, das diese <tt class=\"keyword\">private</tt> Mitglieder der Klasse sind, d.h. von au&szlig;en kann nicht direkt auf sie zugegriffen werden.</p>\n\n<p>Im unteren Drittel stehen die Methoden der Klasse <tt>StockItem</tt>. Das Pluszeichen vor ihnen zeigt, da&szlig; sie <tt class=\"keyword\">public</tt> sind, d.h. die Methoden d&uuml;rfen von anderen Objekten aufgerufen werden. Damit zeigt sich das Prinzip der Kapselung: Anstatt auf das Attribut m_value direkt zuzugreifen, <em>m&uuml;ssen</em> andere Objekte die Zugriffsmethoden setValue() und getValue() benutzen! So hat der Entwickler der Klasse die M&ouml;glichkeit, in setValue() noch zus&auml;tzliche Abfragen, z.B. bez&uuml;glich der G&uuml;ltigkeit des Parameters, einzubauen.</p>\n\n<p>Aufmerksamen Lesern wird bei Betrachtung der Abbildung eine Erweiterung von C++ gegen&uuml;ber C nicht entgangen sein: Funktionen werden in C++ nicht nur - wie in C - durch den Namen, sondern durch Namen <em>und</em> Parameteranzahl und -typ unterschieden! So kann es die Methode setValue() zweimal geben: Einmal mit einem Parameter vom Typ <tt class=\"keyword\">double</tt> und mit einem vom Typ <tt><span class=\"keyword\">const char</span>*</tt>. Der Compiler erkennt beim Aufruf dieser Methode anhand des Parametertyps selbstt&auml;tig, welche Variante er verwenden mu&szlig;.</p>\n\n<h3 id=\"klassendefinition\">Klassendefinition</h3>\n\n<p>Es ist angebracht, C++-Klassendefinitionen generell in Headerdateien (das sind die mit der Extension .h) vorzunehmen. Guter Programmierstil ist dabei, jeweils eine Headerdatei je Klasse vorzusehen und diese auch wie die Klasse zu benennen.</p>\n\n<p>Die Klassendefinition f&uuml;r StockItem wird also in der Headerdatei mit dem Namen <b>StockItem.h</b> vorgenommen:</p>\n\n<pre class=\"cplus\">\n<span class=\"comment\">/*  1 */</span>  <span class=\"preprocessor\">#ifndef StockItem_h</span>\n<span class=\"comment\">/*  2 */</span>  <span class=\"preprocessor\">#define StockItem_h 1</span>\n<span class=\"comment\">/*  3 */</span>\n<span class=\"comment\">/*  4 */</span>  <span class=\"keyword\">class</span> StockItem {\n<span class=\"comment\">/*  5 */</span>\n<span class=\"comment\">/*  6 */</span>  <span class=\"keyword\">public</span>:\n<span class=\"comment\">/*  7 */</span>      <span class=\"slashslashcomment\">// ctor</span>\n<span class=\"comment\">/*  8 */</span>      StockItem( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* name = <span class=\"quotedstring\">&quot;&quot;</span>, <span class=\"keyword\">double</span> val = 0.0);\n<span class=\"comment\">/*  9 */</span>\n<span class=\"comment\">/* 10 */</span>      <span class=\"slashslashcomment\">// copy ctor</span>\n<span class=\"comment\">/* 11 */</span>      StockItem( <span class=\"keyword\">const</span> StockItem &amp;right);\n<span class=\"comment\">/* 12 */</span>      <span class=\"slashslashcomment\">// dtor</span>\n<span class=\"comment\">/* 13 */</span>      <span class=\"keyword\">virtual</span> ~StockItem();\n<span class=\"comment\">/* 14 */</span>      <span class=\"slashslashcomment\">// assignment operator</span>\n<span class=\"comment\">/* 15 */</span>      <span class=\"keyword\">const</span> StockItem&amp; <span class=\"keyword\">operator</span>=(<span class=\"keyword\">const</span> StockItem &amp;right);\n<span class=\"comment\">/* 16 */</span>\n<span class=\"comment\">/* 17 */</span>      <span class=\"slashslashcomment\">// public member functions</span>\n<span class=\"comment\">/* 18 */</span>      <span class=\"keyword\">virtual</span> <span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* getName() <span class=\"keyword\">const</span>;\n<span class=\"comment\">/* 19 */</span>      <span class=\"keyword\">virtual</span> <span class=\"keyword\">void</span> setValue( <span class=\"keyword\">double</span> val);\n<span class=\"comment\">/* 20 */</span>      <span class=\"keyword\">virtual</span> <span class=\"keyword\">void</span> setValue( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* val);\n<span class=\"comment\">/* 21 */</span>      <span class=\"keyword\">virtual</span> <span class=\"keyword\">double</span> getValue() <span class=\"keyword\">const</span>;\n<span class=\"comment\">/* 22 */</span>\n<span class=\"comment\">/* 23 */</span>  <span class=\"keyword\">private</span>:\n<span class=\"comment\">/* 24 */</span>      <span class=\"slashslashcomment\">// private member variables</span>\n<span class=\"comment\">/* 25 */</span>      <span class=\"keyword\">char</span> *m_name;\n<span class=\"comment\">/* 26 */</span>      <span class=\"keyword\">double</span> m_value;\n<span class=\"comment\">/* 27 */</span>  };\n<span class=\"comment\">/* 28 */</span>\n<span class=\"comment\">/* 29 */</span>  <span class=\"preprocessor\">#endif </span>\n</pre>\n\n<p>Die Klassendefinition beginnt mit dem Schl&uuml;sselwort <tt class=\"keyword\">class</tt> gefolgt vom Namen der Klasse (Zeile 4). Die eigentliche Definition wird von geschweiften Klammern { } umschlossen. Die Schl&uuml;sselw&ouml;rter <tt class=\"keyword\">public</tt> und <tt class=\"keyword\">private</tt> trennen die im letzten Abschnitt besprochenen &ouml;ffentlichen (Zeilen 7 bis 21) und privaten (Zeilen 24 bis 26) Bereiche der Definition ab. Es gibt au&szlig;erdem noch die M&ouml;glichkeit, mittels <tt class=\"keyword\">protected</tt> Variablen und Methoden zu deklarieren, die ausschlie&szlig;lich abgeleiteten Klassen zur Verf&uuml;gung stehen sollen. Dazu mehr sp&auml;ter mehr beim Thema <em>Vererbung</em>.</p>\n\n<p>Die Deklaration der &ouml;ffentlichen Methoden (Zeilen 18 bis 19) und der privaten Variablen (Zeilen 25 und 26) erfolgt genauso wie eine normale Deklaration von Funktionen bzw. Variablen in C. Bei den Funktionen f&auml;llt die Verwendung der Spezifikation <tt class=\"keyword\">virtual</tt> auf. Dies ist wiederum f&uuml;r das Thema <em>Vererbung</em> wichtig und wird sp&auml;ter besprochen. Man macht jedoch nicht viel verkehrt, wenn man direkt jeder Funktion von vorneherein diese Spezifikation verpa&szlig;t.</p>\n\n<p>Auf den Zeilen 7 bis 15 werden <em>Constructor</em>, <em>Copy-Constructor</em>, <em>Destructor</em> und <em>Assignment Operator</em> deklariert. Um den Sinn dieser Elemente verstehen zu k&ouml;nnen, m&uuml;ssen wir zun&auml;chst auf den <em>Objektlebenszyklus</em> eingehen</p>\n\n<p><em>PS: Noch ein kleiner Tip: Der Compiler produziert die wunderlichsten Fehlermeldungen, wenn der Programmierer das Semikolon am Ende der Klassendefinition (Zeile 27) vergi&szlig;t...</em></p>\n"
          ]
        },
        {
          "tag_line": "Objektlebenszyklus",
          "details": [
            "<h2>Objektlebenszyklus C++</h2>\n\n<p>Der Lebenszyklus eines C++-Objektes besteht aus den Abschnitten</p>\n\n<ol>\n\t<li>Erzeugung</li>\n\t<li>Benutzung</li>\n\t<li>Zerst&ouml;rung</li>\n</ol>\n\n<h3 id=\"erzeugen_eines_objektes\">Erzeugen eines Objektes</h3>\n\n<p>Das Erzeugen eines Objektes erfogt durch Aufruf des <em>Konstruktors</em> (kurz <em>ctor</em>) des Objektes. Dies kann sowohl statisch durch Variablendeklaration als auch dynamisch mittels des <tt class=\"keyword\">new</tt> Operators geschehen:</p>\n\n<pre class=\"cplus\">\nStockItem bay;\n<span class=\"slashslashcomment\">// default constructor, statisch</span>\n\nStockItem dte( <span class=\"quotedstring\">&quot;Deutsche Telekom AG&quot;</span>, 50.34);\n<span class=\"slashslashcomment\">// spezieller ctor, statisch</span>\n\nStockItem *bas = <span class=\"keyword\">new</span> StockItem( <span class=\"quotedstring\">&quot;BASF&quot;</span>, 120.34);\n<span class=\"slashslashcomment\">// spezieller ctor, dynamisch </span>\n<span class=\"slashslashcomment\">// der f&uuml;r bas n&ouml;tige Speicherplatz wird auf dem Heap alloziert</span>\n</pre>\n\n<h3 id=\"benutzen_eines_objektes\">Benutzen eines Objektes</h3>\n\n<p>Ein Objekt wird benutzt, indem eine seiner Methoden aufgerufen wird:</p>\n\n<pre class=\"cplus\">\ndte.setValue( 52.80);\n<span class=\"slashslashcomment\">// ruft Methode StockItem::setValue() des Objektes dte auf</span>\n\na = bas-&gt;getValue();\n<span class=\"slashslashcomment\">// ruft Methode StockItem::getValue() des Objektes bas auf </span>\n</pre>\n\n<p>Au&szlig;erdem kann das komplette Objekt als Parameter an eine Funktion &uuml;bergeben oder von dieser per <tt class=\"keyword\">return</tt> zur&uuml;ckgegeben werden. Erfolgt die Wert&uuml;bergabe dabei <em>per Value</em>, so wird implizit der <em>Copy Konstruktor</em> des Objektes aufgerufen:</p>\n\n<pre class=\"cplus\">\nStockItem cnv( StockItem x) {\n    <span class=\"slashslashcomment\">// ...</span>\n\n    <span class=\"keyword\">return</span> x2;\n    <span class=\"slashslashcomment\">// return per value: ruft den Copy Constructor von x2 auf</span>\n}\n\nStockItem bas( <span class=\"quotedstring\">&quot;BASF&quot;</span>, 120.34);\ncnv( bas);\n<span class=\"slashslashcomment\">// parameter per value: ruft den Copy Constructor von bas auf</span>\n\nStockItem bas2 = bas;\n<span class=\"slashslashcomment\">// explizite Kopie: ruft den Copy Constructor von bas2 auf </span>\n</pre>\n\n<p>Ebenso kann ein Objekt komplett einem anderen bereits existierenden Objekt zugewiesen werden, wenn dieses den gleichen Typ oder den Typ einer Basisklasse hat. Dann wird der <em>Assignment Operator</em> des Objektes aufgerufen:</p>\n\n<pre class=\"cplus\">\nStockItem x;\nStockItem y( <span class=\"quotedstring\">&quot;ABC&quot;</span>, 22);\n\nx = y;\n<span class=\"slashslashcomment\">// ruft den Assignment Operator von x auf</span>\n</pre>\n\n<h3 id=\"zerst\">Zerst&ouml;ren eines Objektes</h3>\n\n<p>Wird ein Objekt nicht mehr ben&ouml;tigt, so sollte es zerst&ouml;rt werden, damit es keinen Speicherplatz mehr verbraucht. Bei der Zerst&ouml;rung eines Objektes wird automatisch sein <em>Destruktor</em> (kurz <em>dtor</em>) aufgerufen. Im Falle eines dynamisch per <tt class=\"keyword\">new</tt> erzeugten Objektes wird dies mit dem Operator <tt class=\"keyword\">delete</tt> bewerkstelligt. Ein statisch erzeugtes Objekt wird automatisch zerst&ouml;rt, wenn bei der Programmausf&uuml;hrung der G&uuml;ltigkeitsbereich der statischen Deklaration verlassen wird:</p>\n\n<pre class=\"cplus\">\n<span class=\"keyword\">delete</span> bas;\n<span class=\"slashslashcomment\">// der Destructor des Objektes bas wird aufgerufen und anschlie&szlig;end</span>\n<span class=\"slashslashcomment\">// der durch bas belegte Speicherplatz freigegeben</span>\n<span class=\"keyword\">if</span> (x) {\n    StockItem bmw;\n    <span class=\"slashslashcomment\">// ...</span>\n} <span class=\"slashslashcomment\">// der dtor des statisch angelegten Objektes bmw wird hier am Blockende</span>\n<span class=\"slashslashcomment\">// wegen des Verlassens des G&uuml;ltigkeitsbereiches der Deklaration aufgerufen</span>\n</pre>\n\n<p><strong>Beachte:</strong>Der Destruktor eines Objektes wird in der Regel niemals direkt aufgerufen, sondern sein Aufruf erfolgt wie oben dargestellt implizit durch Verwendung von <tt class=\"Keyword\">delete</tt> oder beim Verlassen des G&uuml;ltigkeitsbereiches!</p>\n\n<h2 id=\"objektimplementierung\">Objektimplementierung</h2>\n\n<p>Was uns nun noch zum ersten vollst&auml;ndigen C++-Programm fehlt, ist die Implementierung der einzelnen Methoden des Objektes StockItem.</p>\n\n<p>Die Implementierung wird vorzugsweise in einer Datei mit Namen <b>StockItem.cpp</b> vorgenommen. Zu Beginn wird die Headerdatei <b>StockItem.h</b> inkludiert:</p>\n\n<pre class=\"cplus\">\n<span class=\"comment\">/*  1 */</span>  <span class=\"preprocessor\">#include &quot;StockItem.h&quot;</span>\n<span class=\"comment\">/*  2 */</span>  <span class=\"preprocessor\">#include &lt;cstdlib&gt;</span>\n<span class=\"comment\">/*  3 */</span>  <span class=\"preprocessor\">#include &lt;cstring&gt;</span>\n<span class=\"comment\">/*  4 */</span> \n<span class=\"comment\">/*  5 */</span>  StockItem::StockItem( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* name <span class=\"comment\">/* = &quot;&quot; */</span>, <span class=\"keyword\">double</span> val <span class=\"comment\">/* = 0.0 */</span>)\n<span class=\"comment\">/*  6 */</span>  {\n<span class=\"comment\">/*  7 */</span>      m_name = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[strlen(name)+1];\n<span class=\"comment\">/*  8 */</span>      strcpy( m_name, name);\n<span class=\"comment\">/*  9 */</span>      m_value = val;\n<span class=\"comment\">/* 10 */</span>  }\n<span class=\"comment\">/* 11 */</span>\n<span class=\"comment\">/* 12 */</span>  StockItem::StockItem( <span class=\"keyword\">const</span> StockItem &amp;right)\n<span class=\"comment\">/* 13 */</span>\n<span class=\"comment\">/* 14 */</span>  {\n<span class=\"comment\">/* 15 */</span>\n<span class=\"comment\">/* 16 */</span>      m_name = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[strlen( right.m_name)+1];\n<span class=\"comment\">/* 17 */</span>      strcpy( m_name, right.m_name);\n<span class=\"comment\">/* 18 */</span>      m_value = right.m_value;\n<span class=\"comment\">/* 19 */</span>  }\n<span class=\"comment\">/* 20 */</span>\n<span class=\"comment\">/* 21 */</span>  StockItem::~StockItem()\n<span class=\"comment\">/* 22 */</span>  {\n<span class=\"comment\">/* 23 */</span>      <span class=\"keyword\">delete</span>[] m_name;\n<span class=\"comment\">/* 24 */</span>  }\n<span class=\"comment\">/* 25 */</span>\n<span class=\"comment\">/* 26 */</span>  <span class=\"keyword\">const</span> StockItem&amp; StockItem::<span class=\"keyword\">operator</span>=(<span class=\"keyword\">const</span> StockItem &amp;right)\n<span class=\"comment\">/* 27 */</span>  {\n<span class=\"comment\">/* 28 */</span>      <span class=\"slashslashcomment\">// handle self assignment</span>\n<span class=\"comment\">/* 29 */</span>      <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span> != &amp;right) {\n<span class=\"comment\">/* 30 */</span>          <span class=\"keyword\">delete</span>[] m_name;\n<span class=\"comment\">/* 31 */</span>          m_name = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[strlen( right.m_name)+1];\n<span class=\"comment\">/* 32 */</span>          strcpy( m_name, right.m_name);\n<span class=\"comment\">/* 33 */</span>          m_value = right.m_value;\n<span class=\"comment\">/* 34 */</span>      }\n<span class=\"comment\">/* 35 */</span>\n<span class=\"comment\">/* 36 */</span>      <span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;\n<span class=\"comment\">/* 37 */</span>  }\n<span class=\"comment\">/* 38 */</span>\n<span class=\"comment\">/* 39 */</span>  <span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* StockItem::getName() <span class=\"keyword\">const</span>\n<span class=\"comment\">/* 40 */</span>  {\n<span class=\"comment\">/* 41 */</span>      <span class=\"keyword\">return</span> m_name;\n<span class=\"comment\">/* 42 */</span>  }\n<span class=\"comment\">/* 43 */</span>\n<span class=\"comment\">/* 44 */</span>  <span class=\"keyword\">void</span> StockItem::setValue( <span class=\"keyword\">double</span> val)\n<span class=\"comment\">/* 45 */</span>  {\n<span class=\"comment\">/* 46 */</span>      m_value = val;\n<span class=\"comment\">/* 47 */</span>  }\n<span class=\"comment\">/* 48 */</span>\n<span class=\"comment\">/* 49 */</span>  <span class=\"keyword\">void</span> StockItem::setValue( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* val)\n<span class=\"comment\">/* 50 */</span>  {\n<span class=\"comment\">/* 51 */</span>      m_value = atof( val);\n<span class=\"comment\">/* 52 */</span>  }\n<span class=\"comment\">/* 53 */</span>\n<span class=\"comment\">/* 54 */</span>  <span class=\"keyword\">double</span> StockItem::getValue() <span class=\"keyword\">const</span>\n<span class=\"comment\">/* 55 */</span>  {\n<span class=\"comment\">/* 56 */</span>      <span class=\"keyword\">return</span> m_value;\n<span class=\"comment\">/* 57 */</span>  } \n</pre>\n\n<p>Die Implementierung der &ouml;ffentlichen Methoden f&uuml;r das Setzen und Auslesen der Werte der Attribute in den Zeilen 39 bis 57 enth&auml;lt nichts besonderes, der Code d&uuml;rfte f&uuml;r sich sprechen.</p>\n\n<p>Interessanter ist der Konstruktor (Zeilen 5 bis 10): Da wir den Namen des <tt>StockItem</tt> in einer C-Zeichenkette vom Typ <tt><span class=\"keyword\">char</span>*</tt> speichern wollen, mu&szlig; zuerst der hierf&uuml;r notwendige Speicherplatz allokiert werden (Zeile 7). Da wir in C++ programmieren, verwenden wir nicht das aus der C-Welt vertraute <tt>malloc</tt>, sondern den C++-Operator <tt><span class=\"keyword\">new</span>[]</tt>.</p>\n\n<p>&Auml;hnlich verh&auml;lt sich die Sache beim Copy Konstruktor (Zeilen 12 bis 19): Hier ist das einzige Argument immer eine Referenz auf ein Objekt des gleichen Typs. Dessen Membervariablen m&uuml;ssen in die eigenen Variablen <em>kopiert</em> werden, damit eine 1:1 Kopie des Objektes entsteht. Wir erinnern uns: Der Copy Konstruktor wird bei &Uuml;bergabe von Objekten per Value an oder aus Funktionen oder beim expliziten Kopieren verwendet.</p>\n\n<p>Noch interessanter gestaltet sich die Sache beim Assignment Operator (Zeilen 26 bis 37): Hier existiert ja schon ein Objekt x, in das ein zweites Objekt y hineinkopiert wird! Also mu&szlig; <em>zuerst</em> der von x belegte Speicherplatz freigegeben werden (Zeile 30), bevor die Variablen kopiert werden k&ouml;nnen. In der C++-Sprache bezeichnet man &uuml;brigens unser Objekt x als <tt class=\"keyword\">this</tt>. Der Bezug auf das eigene Objekt <tt class=\"keyword\">this</tt> ist so wichtig, da&szlig; <tt class=\"keyword\">this</tt> sogar ein reserviertes Wort in C++ ist und immer innerhalb von Objektfunktionen zur Verf&uuml;gung steht. Der Assignment Operator gibt einen Zeiger auf das Objekt selbst (also auf <tt class=\"keyword\">this</tt>) zur&uuml;ck, schlie&szlig;lich wird er ja in Zuweisungen wie</p>\n\n<pre class=\"cplus\">\nStockItem x;\nStockItem y( <span class=\"quotedstring\">&quot;ABC&quot;</span>, 22);\n\nx = y;\n</pre>\n\n<p>verwendet.</p>\n\n<p>&Uuml;brigens hindert niemand den Programmierer, statt x = y die Zuweisung x = x hinzuschreiben! Dann haben wir den Fall des <em>Self Assignments</em> vorliegen: Ein Objekt wird sich selbst zugewiesen. Dann darf der Assignment Operator auch nichts weiter tun. Die Abfrage, ob Self Assignment vorliegt, findet in Zeile 29 statt.</p>\n\n<p>Der mittels <tt><span class=\"keyword\">new</span>[]</tt> vom Betriebssystem w&auml;hrend der Objektkonstruktion explizit angeforderte Speicherplatz mu&szlig; beim Zerst&ouml;ren des Objektes auch wieder ausdr&uuml;cklich freigegeben werden. Wir erinnern uns: Beim Zerst&ouml;ren des Objektes wird automatisch sein Destruktor ausgef&uuml;hrt. Deswegen wird im Destruktor (Zeilen 21 bis 24) der f&uuml;r m_name angeforderte Speicherbereich mittels <tt><span class=\"keyword\">delete</span>[]</tt> freigegeben.</p>\n"
          ]
        },
        {
          "tag_line": "Vererbung",
          "details": [
            "<h2>Vererbung C++</h2>\n\n<h3 id=\"konzept\">Konzept</h3>\n\n<p>Vererbung erlaubt die Definition neuer Klassen auf der Basis von bestehenden Klassen. Dies ist ein grundlegendes Konzept objektorientierten Designs. <img align=\"left\" alt=\"Vererbung\" height=\"107\" src=\"https://www.kompf.de/cplus/images/c++-part6.gif\" width=\"173\" /> Weiter oben wurde der Begriff der <em>Klasse</em> als eine Art Bauplan f&uuml;r Objekte erkl&auml;rt. Anhand des dort verwendeten Beispiels &quot;Fahrrad&quot; lassen sich weitere Parallelen zur realen Welt ziehen: Es f&auml;llt auf, da&szlig; es hier <em>verschiedene Arten</em> von Fahrr&auml;dern gibt: Rennr&auml;der, Montainbikes, Treckingr&auml;der und das gute alte Hollandrad. Warum sind alle diese verschiedenen R&auml;der f&uuml;r uns als F&auml;hrr&auml;der erkennbar? Weil sie gewisse gemeinsame Eigenschaften haben: Alle haben zwei R&auml;der, einen Lenker und lassen sich durch Tritt auf die Pedale fortbewegen. Zus&auml;tzlich zu diesen Gemeinsamkeiten bringen sie aber auch neue Eigenschaften ein: Montainbikes und Rennr&auml;der haben jeweils eine Gangschaltung, unterscheiden sich aber durch die Art der Bereifung.</p>\n\n<p>In objektorientierter Sprache k&ouml;nnte man also sagen: Die Klassen Montainbikes, Rennr&auml;der und Hollandr&auml;der <em>erben</em> von der Klasse Fahrr&auml;der gemeinsame Eigenschaften und f&uuml;gen zus&auml;tzliche hinzu. Allgemein gilt:</p>\n\n<ul>\n\t<li>Klassen k&ouml;nnen definiert werden in Abh&auml;ngigkeit von anderen Klassen: &quot;A ist eine Art von B&quot;. In diesem Fall ist B die <em>Basisklasse</em> von A.</li>\n\t<li>Eine Klasse kann auch von mehreren Klassen erben: A ist eine Art von B und C (Mehrfachvererbung).</li>\n\t<li>Jede Klasse erbt die (&ouml;ffentlichen) Attribute und Methoden ihrer Basisklasse(n).</li>\n\t<li>Jedoch kann jede Klasse eigene Variablen und Methoden hinzuf&uuml;gen.</li>\n</ul>\n\n<p>Es ist wichtig zu verstehen, da&szlig; Vererbung nur in eine Richtung l&auml;uft: Ein Rennrad ist zwar immer auch ein Fahrrad, aber nicht jedes Fahrrad ist automatisch ein Rennrad. Wenn in C++ ein Objekt a der Klasse A definiert wird und die Klasse A von B abgeleitet ist, dann kann a jederzeit per Cast in ein Objekt vom Typ B umgewandelt werden. Die Umkehrung gilt nicht: Ein Objekt b der Klasse B kann in diesem Fall nicht in den Typ A umgewandelt werden!</p>\n\n<h3 id=\"vererbung_in_c__\">Vererbung in C++</h3>\n\n<p>Die von uns bereits definierte und benutzte Klasse <em>StockItem</em> erlaubt die Speicherung eines Namens und eines dazugeh&ouml;renden Wertes und ist zur Darstellung von Aktienkursen gedacht. Wer sich mit dieser Materie schon besch&auml;ftigt hat, der wei&szlig;, da&szlig; zu einer Aktie noch viele Informationen mehr gespeichert werden k&ouml;nnen. So gibt es neben dem (Tages- oder Wochen-)Schlusskurs (<em>Close</em>) noch Er&ouml;ffnungs- (<em>Open</em>), H&ouml;chst- (<em>High</em>) und Tiefstkurs (<em>Low</em>). Wir wollen daher nun StockItem um die M&ouml;glichkeit erweitern, zus&auml;tzlich auch den Er&ouml;ffnungskurs abfragen und setzen zu k&ouml;nnen.</p>\n\n<p>Diese Erweiterung soll jedoch nicht durch Ver&auml;ndern der existierenden Klasse StockItem erfolgen - diese Klasse wird bereits in vielen Softwareprojekten benutzt und eine &Auml;nderung ihrer Funktionalit&auml;t k&ouml;nnte unter Umst&auml;nden b&ouml;se Auswirkungen haben. Auch wollen wir das Rad nicht v&ouml;llig neu erfinden - vorhandener Code soll so weit wie m&ouml;glich wiederverwendet werden. Dies alles erreichen wir dadurch, da&szlig; wir eine neue Klasse <em>StockItemOC</em> definieren, die von der vorhandenen Klasse StockItem <em>abgeleitet</em> ist:</p>\n\n<pre class=\"cplus\">\n<span class=\"comment\">/*  1 */</span>  <span class=\"preprocessor\">#ifndef StockItemOC_h</span>\n<span class=\"comment\">/*  2 */</span>  <span class=\"preprocessor\">#define StockItemOC_h 1</span>\n<span class=\"comment\">/*  3 */</span>\n<span class=\"comment\">/*  4 */</span>  <span class=\"keyword\">class</span> StockItemOC : <span class=\"keyword\">public</span> StockItem {\n<span class=\"comment\">/*  5 */</span>\n<span class=\"comment\">/*  6 */</span>  <span class=\"keyword\">public</span>:\n<span class=\"comment\">/*  7 */</span>      <span class=\"slashslashcomment\">// ctor</span>\n<span class=\"comment\">/*  8 */</span>      StockItemOC( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* name = <span class=\"quotedstring\">&quot;&quot;</span>, <span class=\"keyword\">double</span> open = 0.0, <span class=\"keyword\">double</span> close = 0.0);\n<span class=\"comment\">/*  9 */</span>\n<span class=\"comment\">/* 10 */</span>      <span class=\"slashslashcomment\">// copy ctor</span>\n<span class=\"comment\">/* 11 */</span>      StockItemOC( <span class=\"keyword\">const</span> StockItemOC &amp;right);\n<span class=\"comment\">/* 12 */</span>      <span class=\"slashslashcomment\">// dtor</span>\n<span class=\"comment\">/* 13 */</span>      <span class=\"keyword\">virtual</span> ~StockItemOC();\n<span class=\"comment\">/* 14 */</span>      <span class=\"slashslashcomment\">// assignment operator</span>\n<span class=\"comment\">/* 15 */</span>      <span class=\"keyword\">const</span> StockItemOC&amp; <span class=\"keyword\">operator</span>=(<span class=\"keyword\">const</span> StockItemOC &amp;right);\n<span class=\"comment\">/* 16 */</span>\n<span class=\"comment\">/* 17 */</span>      <span class=\"slashslashcomment\">// public member functions</span>\n<span class=\"comment\">/* 18 */</span>      <span class=\"keyword\">virtual</span> <span class=\"keyword\">void</span> setValue( <span class=\"keyword\">double</span> val);\n<span class=\"comment\">/* 19 */</span>      <span class=\"keyword\">virtual</span> <span class=\"keyword\">double</span> getValue() <span class=\"keyword\">const</span>;\n<span class=\"comment\">/* 20 */</span>      <span class=\"keyword\">virtual</span> <span class=\"keyword\">void</span> setOpen( <span class=\"keyword\">double</span> val);\n<span class=\"comment\">/* 21 */</span>      <span class=\"keyword\">virtual</span> <span class=\"keyword\">double</span> getOpen() <span class=\"keyword\">const</span>;\n<span class=\"comment\">/* 22 */</span>      <span class=\"keyword\">virtual</span> <span class=\"keyword\">void</span> setClose( <span class=\"keyword\">double</span> val);\n<span class=\"comment\">/* 23 */</span>      <span class=\"keyword\">virtual</span> <span class=\"keyword\">double</span> getClose() <span class=\"keyword\">const</span>;\n<span class=\"comment\">/* 24 */</span>\n<span class=\"comment\">/* 25 */</span>  <span class=\"keyword\">private</span>:\n<span class=\"comment\">/* 26 */</span>      <span class=\"slashslashcomment\">// private member variables</span>\n<span class=\"comment\">/* 27 */</span>      <span class=\"keyword\">double</span> m_open;\n<span class=\"comment\">/* 28 */</span>      <span class=\"keyword\">double</span> m_close;\n<span class=\"comment\">/* 29 */</span>  };\n<span class=\"comment\">/* 30 */</span>\n<span class=\"comment\">/* 31 */</span>  <span class=\"preprocessor\">#endif</span>\n</pre>\n\n<p>Die einzige Erweiterung gegen&uuml;ber der uns bekannten Klassendefinition ist, da&szlig; zu Beginn in Zeile 4 die Basisklasse nach dem Doppelpunkt und dem Schl&uuml;sselwort <tt class=\"keyword\">public</tt> angegeben wird.</p>\n\n<p>Welche Auswirkung hat diese Vererbungsbeziehung nun auf das Verhalten unserer neuen Klasse StockItemOC? Schauen wir uns dazu das UML-Diagramm an: <img align=\"left\" alt=\"class StockItemOC\" height=\"291\" src=\"https://www.kompf.de/cplus/images/c++-part7.gif\" width=\"173\" /></p>\n\n<ul>\n\t<li>StockItemOC <em>erbt</em> die Methode getName() von StockItem. Diese Methode braucht also nicht noch einmal implementiert zu werden.</li>\n\t<li>StockItemOC <em>&uuml;berschreibt</em> die Methoden setValue() und getValue() von StockItem. Diese Methoden m&uuml;ssen anders implementiert sein, da StockItemOC ja zwei Kurswerte statt einem zur Auswahl hat.</li>\n\t<li>StockItemOC hat die <em>zus&auml;tzlichen</em> Methoden getOpen(), setOpen(), getClose() und setClose(), um die zus&auml;tzliche gew&uuml;nschte Funktionalit&auml;t abbilden zu k&ouml;nnen.</li>\n\t<li>StockItemOC <em>erbt</em> die Variablen m_name und m_value von StockItem. Da diese Variablen dort aber als <em>private</em> deklariert sind, haben die Methoden von StockItemOC keinen Zugriff auf diese Variable - au&szlig;er nat&uuml;rlich getName(), denn diese ist ja auch von StockItem geerbt.</li>\n\t<li>StockItemOC deklariert die <em>zus&auml;tzlichen</em> privaten Variablen m_open und m_close.</li>\n</ul>\n\n<h3 id=\"implementierung_der_abgeleiteten_klasse\">Implementierung der abgeleiteten Klasse</h3>\n\n<p>Zun&auml;chst wollen wir einen Blick auf die Implementierung der abgeleiteten Klasse in <b>StockItemOC.cpp</b> werfen:</p>\n\n<pre class=\"cplus\">\n<span class=\"comment\">/*  1 */</span>  <span class=\"preprocessor\">#include &lt;cstdlib&gt;</span>\n<span class=\"comment\">/*  2 */</span>  <span class=\"preprocessor\">#include &quot;StockItem.h&quot;</span>\n<span class=\"comment\">/*  3 */</span>  <span class=\"preprocessor\">#include &quot;StockItemOC.h&quot;</span>\n<span class=\"comment\">/*  4 */</span>\n<span class=\"comment\">/*  5 */</span>  StockItemOC::StockItemOC( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* name, <span class=\"keyword\">double</span> open, <span class=\"keyword\">double</span> close)\n<span class=\"comment\">/*  6 */</span>   : StockItem(name), m_open(open), m_close(close)\n<span class=\"comment\">/*  7 */</span>  { }\n<span class=\"comment\">/*  8 */</span>\n<span class=\"comment\">/*  9 */</span>  StockItemOC::StockItemOC( <span class=\"keyword\">const</span> StockItemOC &amp;right)\n<span class=\"comment\">/* 10 */</span>   : StockItem(right), m_open(right.m_open), m_close(right.m_close)\n<span class=\"comment\">/* 11 */</span>  { }\n<span class=\"comment\">/* 12 */</span>\n<span class=\"comment\">/* 13 */</span>  StockItemOC::~StockItemOC()\n<span class=\"comment\">/* 14 */</span>  { }\n<span class=\"comment\">/* 15 */</span>\n<span class=\"comment\">/* 16 */</span>  <span class=\"keyword\">const</span> StockItemOC&amp; StockItemOC::<span class=\"keyword\">operator</span>=(<span class=\"keyword\">const</span> StockItemOC &amp;right)\n<span class=\"comment\">/* 17 */</span>  {\n<span class=\"comment\">/* 18 */</span>      <span class=\"slashslashcomment\">// handle self assignment</span>\n<span class=\"comment\">/* 19 */</span>      <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span> != &amp;right) {\n<span class=\"comment\">/* 20 */</span>          StockItem::<span class=\"keyword\">operator</span>=(right);\n<span class=\"comment\">/* 21 */</span>          m_open = right.m_open;\n<span class=\"comment\">/* 22 */</span>          m_close = right.m_close;\n<span class=\"comment\">/* 23 */</span>      }\n<span class=\"comment\">/* 24 */</span>\n<span class=\"comment\">/* 25 */</span>      <span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;\n<span class=\"comment\">/* 26 */</span>  }\n<span class=\"comment\">/* 27 */</span>\n<span class=\"comment\">/* 28 */</span>  <span class=\"keyword\">void</span> StockItemOC::setValue( <span class=\"keyword\">double</span> val)\n<span class=\"comment\">/* 29 */</span>  {\n<span class=\"comment\">/* 30 */</span>      m_close = val;\n<span class=\"comment\">/* 31 */</span>  }\n<span class=\"comment\">/* 32 */</span>\n<span class=\"comment\">/* 33 */</span>  <span class=\"keyword\">double</span> StockItemOC::getValue() <span class=\"keyword\">const</span>\n<span class=\"comment\">/* 34 */</span>  {\n<span class=\"comment\">/* 35 */</span>      <span class=\"keyword\">return</span> m_close;\n<span class=\"comment\">/* 36 */</span>  }\n<span class=\"comment\">/* 37 */</span>\n<span class=\"comment\">/* 38 */</span>  <span class=\"keyword\">void</span> StockItemOC::setOpen( <span class=\"keyword\">double</span> val)\n<span class=\"comment\">/* 39 */</span>  {\n<span class=\"comment\">/* 40 */</span>      m_open = val;\n<span class=\"comment\">/* 41 */</span>  }\n<span class=\"comment\">/* 42 */</span>\n<span class=\"comment\">/* 43 */</span>  <span class=\"keyword\">double</span> StockItemOC::getOpen() <span class=\"keyword\">const</span>\n<span class=\"comment\">/* 44 */</span>  {\n<span class=\"comment\">/* 45 */</span>      <span class=\"keyword\">return</span> m_open;\n<span class=\"comment\">/* 46 */</span>  }\n<span class=\"comment\">/* 47 */</span>\n<span class=\"comment\">/* 48 */</span>  <span class=\"keyword\">void</span> StockItemOC::setClose( <span class=\"keyword\">double</span> val)\n<span class=\"comment\">/* 49 */</span>  {\n<span class=\"comment\">/* 50 */</span>      m_close = val;\n<span class=\"comment\">/* 51 */</span>  }\n<span class=\"comment\">/* 52 */</span>\n<span class=\"comment\">/* 53 */</span>  <span class=\"keyword\">double</span> StockItemOC::getClose() <span class=\"keyword\">const</span>\n<span class=\"comment\">/* 54 */</span>  {\n<span class=\"comment\">/* 55 */</span>      <span class=\"keyword\">return</span> m_close;\n<span class=\"comment\">/* 56 */</span>  }\n</pre>\n\n<p>Interessant ist hier zun&auml;chst wieder der Konstruktor (Zeilen 5 bis 7): Im Gegensatz zum Konstruktor von StockItem weiter oben erfolgt die Initialisierung der Variablen (m_open und m_close) hier nicht im Funktionsrumpf, sondern in einer <em>Initialisierungsliste</em>. Dies schafft vor allem Performancevorteile bei der Konstruktion der Objekte. Ferner m&uuml;ssen wir bedenken, da&szlig; die in der Basisklasse als privat deklarierten Variablen (wie m_name) hier nicht direkt angesprochen werden k&ouml;nnen. Um diese trotzdem korrekt zu initialisieren, wird der Konstruktor der Basisklasse in der Initialisierungsliste aufgerufen (Zeile 6).</p>\n\n<p>Gleiches gilt f&uuml;r den Copy Konstruktor (Zeilen 9 bis 11), der den Copy Konstruktor der Basisklasse in seiner Initialisierungsliste auff&uuml;hrt. Und auch der Assignment Operator muss den der Basisklasse explizit aufrufen (Zeile 20). Lediglich beim Destruktor (Zeilen 13 und 14) ist das Verhalten anders. Hier stellt die C++ Laufzeitumgebung sicher, da&szlig; alle Destruktoren voneinander abgeleiteter Klassen in der richtigen Reihenfolge aufgerufen werden. Da in StockItemOC kein dynamisch allozierter Speicher verwendet wird, braucht der Destruktor auch nichts weiter zu tun.</p>\n\n<p>Die restlichen Methoden von StockItemOC dienen dem Setzen und Auslesen der privaten Variablen und bieten nichts Neues.</p>\n\n<h3 id=\"verwendung_abgeleiteter_klassen\">Verwendung abgeleiteter Klassen</h3>\n\n<p>Die Verwendung von abgeleiteten Klassen soll nun anhand der Klasse StockItemOC in einem kleinen Testprogramm demonstriert werden.</p>\n\n<p>Am Anfang der Programmdatei m&uuml;ssen die ben&ouml;tigten Headerfiles inkludiert werden:</p>\n\n<pre class=\"cplus\">\n<span class=\"preprocessor\">#include &lt;iostream&gt;</span>\n<span class=\"preprocessor\">#include &lt;vector&gt;</span>\n<span class=\"preprocessor\">#include &lt;algorithm&gt;</span>\n<span class=\"preprocessor\">#include &lt;iterator&gt;</span>\n<span class=\"preprocessor\">#include &quot;StockItem.h&quot;</span>\n<span class=\"preprocessor\">#include &quot;StockItemOC.h&quot;</span>\n\n<span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;\n\n<span class=\"keyword\">int</span> main( <span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span>** argv)\n{\n</pre>\n\n<p>Als erste &Uuml;bung werden wir zwei StockItem Objekte und ein StockItemOC Objekt statisch anlegen und diese dann zur Ausgabe einiger Werte benutzen:</p>\n\n<pre class=\"cplus\">\n    StockItem a( <span class=\"quotedstring\">&quot;BAY&quot;</span>, 34.9);\n    StockItem b( <span class=\"quotedstring\">&quot;BAS&quot;</span>);\n    StockItemOC c( <span class=\"quotedstring\">&quot;DTE&quot;</span>, 57.0, 59.4);\n\n    b.setValue( 24.2);\n\n    cout &lt;&lt; a.getName() &lt;&lt; <span class=\"quotedstring\">&quot;: &quot;</span> &lt;&lt; a.getValue() &lt;&lt; endl;\n    cout &lt;&lt; b.getName() &lt;&lt; <span class=\"quotedstring\">&quot;: &quot;</span> &lt;&lt; b.getValue() &lt;&lt; endl;\n    cout &lt;&lt; c.getName() &lt;&lt; <span class=\"quotedstring\">&quot;: &quot;</span> &lt;&lt; c.getValue() &lt;&lt; <span class=\"quotedstring\">&quot; (&quot;</span>\n         &lt;&lt; c.getOpen() &lt;&lt; <span class=\"quotedstring\">&quot; -&gt; &quot;</span> &lt;&lt; c.getClose() &lt;&lt; <span class=\"quotedstring\">&quot;)\\n&quot;</span>;\n</pre>\n\n<p>Dies bietet auf den ersten Blick nichts neues. Beim zweiten Hinsehen erkennen wir, da&szlig; in der letzten Zeile die Methode getName() des Objektes c, welches vom Typ StockItemOC ist, aufgerufen wird. Die Klasse StockItemOC hat aber gar keine Methode getName() definiert! Mit dem neu erworbenen Wissen &uuml;ber Vererbung ist jedoch klar, was passiert: Es wird einfach die von der Klasse StockItem <em>geerbte</em> Methode verwendet!</p>\n\n<p>Interessant ist auch die Verwendung der Methode getValue(). Diese gibt es sowohl in StockItem als auch in StockItemOC. In diesem Beispiel ist jedoch relativ einfach zu verstehen, was passiert - sowohl f&uuml;r uns als auch f&uuml;r den C++-Compiler: In der letzten Zeile wird StockItemOC::getValue() aufgerufen, in den beiden Zeilen davor StockItem::getValue(). Das ist deshalb klar, weil der Typ der Objekte a, b und c bereits zur &Uuml;bersetzungszeit bekannt ist und der Compiler entscheiden kann, welchen Methodenaufruf er verwenden mu&szlig;. Dies wird auch als <em>statische</em> oder <em>fr&uuml;he Bindung</em> bezeichnet.</p>\n\n<p>Was passiert jedoch, wenn der Compiler beim &Uuml;bersetzen den genauen Typ des Objektes noch nicht kennt? Sehen wir uns die Fortsetzung des Programmes an:</p>\n\n<pre class=\"cplus\">\n    StockItem *astocks[3];\n    astocks[0] = &amp;a;\n    astocks[1] = &amp;b;\n    astocks[2] = &amp;c;      <span class=\"slashslashcomment\">// cast from StockItemOC* to StockItem*</span>\n    \n    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = 0; i &lt; 3; ++i) {\n        cout &lt;&lt; astocks[i]-&gt;getName() &lt;&lt; <span class=\"quotedstring\">&quot;: &quot;</span> &lt;&lt; astocks[i]-&gt;getValue() &lt;&lt; endl;\n    }\n</pre>\n\n<p>Beim Aufruf astocks[i]-&gt;getValue() mu&szlig; je nachdem, ob der in astocks stehende Pointer auf ein Objekt vom Typ StockItem (bei Index 0 und 1) oder vom Typ StockItemOC (Index 2) zeigt, eine andere Methode aufgerufen werden. Dies kann erst zur Laufzeit entschieden werden, man spricht dann von <em>dynamischer</em> oder <em>sp&auml;ter Bindung</em>. Wie kann nun aber das Laufzeitsystem entscheiden, welchen Typ das Objekt hat? Der Schl&uuml;ssel hierzu ist die sogenannte vtable, in der die spezifischen Funktionssignaturen f&uuml;r jedes Objekt abgelegt sind. Eine Funktionssignatur wird jedoch nur dann richtig in die vtable eingetragen, wenn die Funktionen in der Klassendefinitionen als <tt class=\"keyword\">virtual</tt> deklariert sind. Dies haben wir zum Gl&uuml;ck in unseren Definitionen schon getan, so da&szlig; das Programm wie erwartet arbeitet. Folgende Regel sollte man sich beim Umgang mit C++ jedoch verinnerlichen:</p>\n\n<p class=\"definition\">Deklariere alle Memberfunktionen - inklusive des Destruktors - als virtual, wenn Du die Absicht hast, Vererbungsmechanismen zu verwenden!</p>\n\n<p>Zum Schlu&szlig; noch eine fortgeschrittene Anwendung unserer Objekte. Statt in ein Array werden sie in einen STL-Vektor gepackt. Anschlie&szlig;end werden die Objekte nach ihrem Wert (getValue()) sortiert und ausgegeben. Das alles funktioniert auch dann, wenn der Vektor sowohl Objekte vom Typ StockItem* als auch StockItemOC* enth&auml;lt, weil wieder dynamische Bindung zum Einsatz kommt:</p>\n\n<pre class=\"cplus\">\n    <span class=\"slashslashcomment\">// get the stock items odered by price</span>\n    vector&lt;StockItem*&gt; stocks;\n\n    stocks.push_back(&amp;a);\n    stocks.push_back(&amp;b);\n    stocks.push_back(&amp;c); <span class=\"slashslashcomment\">// cast from StockItemOC* to StockItem*</span>\n\n    sort(stocks.begin(), stocks.end(), CompareStockPrice());\n\n    cout &lt;&lt; endl &lt;&lt; <span class=\"quotedstring\">&quot;stock items odered by price\\n&quot;</span>;\n    reverse_copy( stocks.begin(), stocks.end(), ostream_iterator&lt;StockItem*&gt;(cout));\n}\n</pre>\n\n<p>F&uuml;r die richtige Sortierung und die Ausgabe sind noch zwei Hilfsfunktionen notwendig, die vor main() in die Programmdatei eingef&uuml;gt werden k&ouml;nnen: CompareStockPrice ist ein sogenannter <em>functor</em>. Er wird als Parameter an den Sortieralgorithmus <em>sort</em> &uuml;bergeben und dient zum Vergleich zweier Objekte vom Typ StockItem. Die zweite Funktion ist der Ausgabeoperator f&uuml;r ein StockItem Objekt. Dieser wird im Alorithmus <em>reverse_copy</em> &uuml;ber den <em>ostream_iterator</em> verwendet.</p>\n\n<pre class=\"cplus\">\n<span class=\"slashslashcomment\">// compare two stock prices</span>\n<span class=\"keyword\">class</span> CompareStockPrice {\n<span class=\"keyword\">public</span>:\n    <span class=\"keyword\">int</span> <span class=\"keyword\">operator</span>()( <span class=\"keyword\">const</span> StockItem* s1, <span class=\"keyword\">const</span> StockItem* s2)\n    { <span class=\"keyword\">return</span> s1-&gt;getValue() &lt; s2-&gt;getValue(); }\n};\n\n<span class=\"slashslashcomment\">// operator&lt;&lt; for class StockItem</span>\n<span class=\"slashslashcomment\">// write name and value to output stream ost</span>\nostream&amp; <span class=\"keyword\">operator</span>&lt;&lt;( ostream&amp; ost, <span class=\"keyword\">const</span> StockItem* item) {\n    ost &lt;&lt; item-&gt;getName() &lt;&lt; <span class=\"quotedstring\">&quot;: &quot;</span> &lt;&lt; item-&gt;getValue() &lt;&lt; endl;\n    <span class=\"keyword\">return</span> ost;\n}\n</pre>\n\n<p>Wie man sieht, reicht es v&ouml;llig aus, die Hilfsfunktionen f&uuml;r die Klasse StockItem zu implementieren. Es ist beim Aufruf der Funktion dann egal, ob der aktuelle Parameter auf ein Objekt vom Typ StockItem oder StockItemOC zeigt. Dies ist ein Resultat (und Vorteil) der von uns implementierten Vererbungshierarchie.</p>\n"
          ]
        }
      ]
    },
    {
      "title": "Grundlagen der Betriebsysteme",
      "content": [
        {
          "tag_line": "Kapitel 1 - Einleitung Betriebsysteme",
          "details": [
            "<h1 id=\"anchor0\">Kapitel 1 - Einleitung Betriebsysteme</h1>\n\n<h2>Einleitung - BS Definition</h2>\n\n<p>Ein Betriebsystem stellt <strong>Dienste</strong> und <strong>Infrastrukturen</strong> (Metasteuerungen) bereit. Daten oder Virtuelle Maschinen sind kein Teil des Betriebssystems sondern des Dienstleistungssystems. Die Metasteuerungen sind entscheidend beim Entwurf. (z.B. in Bezug auf Uni- oder Mehrbenutzersystem)</p>\n\n<p>Grob gesagt ist ein Betriebssystem eine erweiterte Maschine (Top-Down-Sicht), um durch Abstraktionen eine f&uuml;r den Menschen (Programmierer) &uuml;berschaubare Form als Programmiergrundlage zu bieten.</p>\n\n<p><img alt=\"Organisation eines Betriebssystem\" src=\"http://www.kreissl.info/pics/images/bs_08.gif\" /></p>\n\n<h3>Eine Definition f&uuml;r Betriebsysteme</h3>\n\n<p>Das Betriebssystem ist die <strong>Gesamtheit der Programme</strong> eines Rechensystems, welche die Betriebssteuerung erledigen und die Benutzerauftr&auml;gen eine zug&auml;ngliche Umgebung bereitstellen. Betriebsmittel sind Komponenten sowohl der Hardware als auch der Software (System und Anwendersoftware), wie z.B. Prozessor, Speicher, Ein-Ausgabe-Ger&auml;te, Dateien, Programme etc.</p>\n\n<p>Das Betriebssystem erm&ouml;glicht es z.B. dem Anwender, Programme auf unterschiedlicher Hardware laufen zu lassen. D.h. das Betriebssystem bietet dem Anwender eine <strong>virtuelle Maschine</strong>, welche die reale Hardware &quot;unsichtbar&quot; f&uuml;r den Programmierer macht.</p>\n\n<div class=\"well\">\n<h1 id=\"anchor1\">Definition Betriebssysteme</h1>\nAbstrahiert den Rechner auf eine f&uuml;r Menschen leichter durchschaubare virtuelle Maschine, steuert und koordiniert Prozessabl&auml;ufe und verwaltet die Ressourcen</div>\n\n<h2>Wie sieht das Ebenen- oder Schichtenmodell eines Rechners aus?</h2>\n\n<ol>\n\t<li>Gatter Ebene</li>\n\t<li>Mikroprogrammebene</li>\n\t<li>konventionelle Maschinenebene</li>\n\t<li>Betriebssystemebene API</li>\n\t<li>Assemblerebene</li>\n\t<li>Anwendungsebene</li>\n</ol>\n\n<h3>Worin Unterscheiden sich Betriebssysteme?</h3>\n\n<ul>\n\t<li>universal oder dezidiert (Multi-Task / Single-Task)</li>\n\t<li>eine oder mehrere Sitzungen (Windows &lt; XP, Linux)</li>\n\t<li>Kommunikation mit der Umwelt (Batch, interaktiv oder in Echtzeit)</li>\n</ul>\n\n<h3>Die dreei Welten des Betriebsystems</h3>\n\n<ul>\n\t<li>Betriebssystem selbst</li>\n\t<li>Komplexe Werkzeuge, wie aufgesetzte Dienste oder Virtuelle Maschinen</li>\n\t<li>Programmiersysteme zur Entwicklung von Erweiterungen</li>\n</ul>\n\n<h3>Aufgaben eines Betriebsystems</h3>\n\n<ol>\n\t<li>Abstraktion der Hardware, d.h. Schlie&szlig;en der so genannten &#39;Semantischen L&uuml;cke&#39; zwischen Mikroprogrammebene und der Anwendungsebene</li>\n\t<li>Betriebsmittelverwaltung</li>\n\t<li>Steuerung von Peripherieger&auml;ten (I/O, Festplatten...)</li>\n\t<li>Steuerung des Betriebsablaufs durch Prozessverwaltung und -Kommunikation und Organisation des Mehrprogrammbetriebes</li>\n\t<li>Protokollierung, Schutz und Sicherheit</li>\n\t<li>Behandlung von Ausnahmesituationen, wie Page Faults, Division by Zero u.s.w.</li>\n\t<li>Bereitstellung einer Kommandosprache</li>\n\t<li>Unterst&uuml;tzung von Administrationsaufgaben (Datensicherung, Systemkonfigurierung, Benutzerrechte)</li>\n</ol>\n\n<h2>Was ist ein Modell?</h2>\n\n<p>Ein Modell eines Rechnersystems ist eine <strong>Abbildung eines realen Systems</strong> unter Abstrahierung bestimmter Kriterien, in dem eine formale Beschreibung durch eine Theorie in Gesetzen formuliert werden kann.</p>\n\n<h3>Welche drei Punkte sind bei der Realisierung eines BS grundlegend?</h3>\n\n<h4>Prozessor-Modes (Betriebszust&auml;nde)</h4>\n\n<table class=\"table\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>Supervisor Mode<br />\n\t\t\t(Kernel Mode)</td>\n\t\t\t<td>Ist ein privilegierter Modus f&uuml;r Betriebssystemfunktionen im Kern des Systems, welches Sicherheit des Systems erh&ouml;ht, da diese gesch&uuml;tzt von Andwenderprogrammen laufen.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>User Mode<br />\n\t\t\t(Anwendungsmodus)</td>\n\t\t\t<td>Die Betriebsart wird &uuml;ber ein &quot;Mode&quot;-Bit angezeigt. Privilegierte Funktionen (wie I/O Funktionen) sind aber nur im Kernelmode ausf&uuml;hrbar. Diese k&ouml;nnen &uuml;ber bestimmte Methoden gerufen werden.</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<h4>Kernel</h4>\n\n<p>Im Kern laufen die Systemkritischen Funktionen, wie z.B. I/O-Aktionen ab. Der Kern muss korrekt, sicher und gesch&uuml;tzt vor Anwendungen sein.</p>\n\n<h4>Methoden des Aufrufs von Betriebssystemsdiensten</h4>\n\n<table class=\"table\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>System Calls</td>\n\t\t\t<td>Durch <strong>System Calls</strong> k&ouml;nnen BS-Funktionen gerufen werden. Die Schnittstelle zwischen Usermode und Kernel sind sogenannte Traps (Einstiegspunkte). Ger&auml;te k&ouml;nnen Traps nicht nutzen, sondern k&ouml;nnen die BS-Dienste durch spezielle Interruptsmechanismen erreichen.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Nachrichtenversand</td>\n\t\t\t<td>&Uuml;ber eine <strong>Send/Receive-Schnittstelle</strong> k&ouml;nnen sich User-Mode und Kernel-Mode Nachrichten zuschicken.</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>Sinn und zweck ist eine Entkopplung von System und Anwendung! Windows NT bietet eine API mit mehr als 10.000 Systemaufrufen, Unix dagegen ca. 300.</p>\n\n<p><img alt=\"System-Call am Beispiel Windows NT\" src=\"http://www.kreissl.info/pics/images/bs_09.gif\" /></p>\n"
          ]
        },
        {
          "tag_line": "Kapitel 2 - Modelle",
          "details": [
            "<h1 id=\"anchor2\">Kapitel 2 - Modelle</h1>\n\n<h2>Vor- und Nachteile von Schalen- und Modulmodellen</h2>\n\n<h3>Das Schalenmodell</h3>\n\n<ul>\n\t<li>Relationen der einzelnen Schalen sind zur Umwelt nicht sichtbar</li>\n\t<li>System ist aber gut strukturiert</li>\n\t<li>Innere Schalen sind sehr gut abgeschirmt von den &Auml;u&szlig;eren</li>\n</ul>\n\n<h3>Das Modulmodell:</h3>\n\n<ul>\n\t<li>Das Modell wird in Modulen durch Programmcode beschrieben</li>\n\t<li>die Relationen werden daher extrem komplex (quatradisch)</li>\n\t<li>Daher ist es nur bei kleinen Modellen umsetzbar</li>\n</ul>\n\n<h2>Aufbau des hierarchischen Schichtenmodells</h2>\n\n<p>Jede Schicht stellt Betriebsmittel und Dienste f&uuml;r den Zugriff auf die jeweilige &uuml;bergeordnete Schicht bereit. Somit kann jede Schicht auch die Betriebsmittel und Dienste darunterliegender Schichten nutzen. Eine Schicht steuert die unmittelbare Schicht &uuml;ber ihr. (<strong>Steuerungshierarchie</strong>)</p>\n\n<h3>Bestandteile</h3>\n\n<ul>\n\t<li>Schichten</li>\n\t<li>Iterative Ordnungsrelation der Schichten (Dienste, Steuerungen bzw. Instanzen)</li>\n\t<li>Betriebsmittel</li>\n\t<li>Funktionen zum Erzeugen von Betriebsmitteln und Steuerungen</li>\n</ul>\n\n<h3>Welche Vorteile hat das hierarchisch Schichtenmodell?</h3>\n\n<ul>\n\t<li>obwohl modularisiert, ist die Zahl der Relationen gering</li>\n\t<li>Kommunikation mit der Umwelt ist m&ouml;glich</li>\n\t<li>Es bietet eine Infrastruktur f&uuml;r Instanzen (Steuerung, BM-Transformationen)</li>\n</ul>\n\n<h2>Was ist ein Betriebsmittel?</h2>\n\n<p>Ein Betriebsmittel ist eine abstrakte Ressource, welche &uuml;ber eine Adresse und einen Wert verf&uuml;gt. Sie wird definiert &uuml;ber</p>\n\n<ul>\n\t<li>ID (eindeutiger Identifikator)</li>\n\t<li>Adressbereich (f&uuml;r alle m&ouml;glichen Adressen des Betriebsmittels)</li>\n\t<li>Wertebereicht (aller m&ouml;glichen Werte f&uuml;r einen Wert des BM)</li>\n\t<li>Funktion (verkn&uuml;pft die abstrakten Elemente miteinander)</li>\n</ul>\n\n<p><em>Der Zustand eines Betriebsmittels ergibt sich aus Wert x Adresse.</em></p>\n\n<h3>Welche Klassen von Betriebsmitteln gibt es?</h3>\n\n<ul>\n\t<li>Entziehbarkeit (entziehbar wie Prozessor oder nicht wie Dateideskriptor)</li>\n\t<li>Zuteilbarkeit (gleichzeitig wie Speicher oder exklusiv wie Prozessor oder Drucker)</li>\n\t<li>Wiederverwendbarkeit (einmalig Nutzbar wie Interrupt oder mehrfach wie Prozessor oder Speicher)</li>\n\t<li>Hardware / Software (logisches oder physikalisches Betriebsmittel)</li>\n</ul>\n\n<h3>Vorgehensweise beim Erstellen eines Betriebsmittels</h3>\n\n<ol>\n\t<li>ID bestimmen</li>\n\t<li>abstrakte Elemente bestimmen, welche einen Wert und eine Adresse besitzen</li>\n\t<li>Wert und Adresse festlegen</li>\n\t<li>Funktionen definieren, welche Zugriff auf alle Elemente erm&ouml;glichen</li>\n</ol>\n\n<h3>Die Betriebsmittelerstellung am Beispiel des Hauptspeichers</h3>\n\n<ol>\n\t<li>Eine ID ist hier nicht sinnvoll, da ein von-Neumann Rechner nur einen Hauptspeicher hat.</li>\n\t<li>die abstrakten Elemente sind die ansprechbaren Speicherzellen mit Adresse und Wert.</li>\n\t<li>Der Wertebereich betr&auml;gt 0 bist 255 bei einem Byte-Orientierten Speicher</li>\n\t<li>Funktionen sind Read und Write eines Elementes zum Speicher</li>\n</ol>\n\n<h2>Definition Instanz</h2>\n\n<p>Eine Instanz ist ein Tupel aus id (Betriebsmittel) und einem Aktivit&auml;tstoken, welches die einzelnen Dienste ruft. Zwischen Betriebsmitteln untereinander und zwischen Instanzen untereinander bestehen Relationen.</p>\n\n<h3>Klassen von Instanzen</h3>\n\n<ul>\n\t<li>Applikationen</li>\n\t<li>Betriebsmittel-Transformatoren</li>\n\t<li>Metasteuerungen wie PUM</li>\n</ul>\n\n<h3>Wie k&ouml;nnen Relationen zwischen Instanzen technisch hergestellt werden?</h3>\n\n<p>Protokolle und Schnittstellen verbinden sich Instanzen. Dabei treten beide immer zusammen auf. Eine Schnittstelle kennzeichnet das statische Verhalten einer Relation und ein Protokoll das dynamische, d.h. die Semantik der Relation.</p>\n\n<p>Als Beispiel nehmen wir einen Spooler. Hier ist die Schnittstelle ein Betriebsmittel (Speicherbuffer) und das Protokoll (Verhalten) ist als Dienst implementiert.</p>\n\n<p><em>Spool = Simultanously Periphal Output On Line</em></p>\n\n<p>Es gibt datenorientierte und steuerungsorientierte Schnittstellen. Datenorientierte Schnittstellen arbeiten ohne Synchronisation und verbrauchen viel Ressourcen (Busy Waiting). Steurerungsorientierte Schnittstellen sind z.B. Systemcalls und Interrupts.</p>\n"
          ]
        },
        {
          "tag_line": "Kapitel 3 - Aktivitäten ",
          "details": [
            "<h1 id=\"anchor3\">Kapitel 3 - Aktivit&auml;ten</h1>\n\n<h2>Was ist ein Aktivit&auml;tstoken?</h2>\n\n<ul>\n\t<li>Ist sehr abstrakt zu sehen</li>\n\t<li>Ein Aktivit&auml;tstoken haucht dem Programm erst &quot;Leben&quot; ein</li>\n\t<li>Beschreibt ein aktiven oder wartenden Prozess</li>\n\t<li>Es muss eine Art virtuellen Programmcounter im eigenen virtuellen Steuerwerk des Prozesses geben</li>\n</ul>\n\n<h2>Definition Multitasking</h2>\n\n<p>Ist die F&auml;higkeit Prozesse parallel laufen zu lassen. Bei Einprozessormaschinen (kooperativ oder preemtiv) wird die Leistungsf&auml;higkeit damit optimal ausgenutzt. Die verschiedenen Betriebsmittel k&ouml;nnen von mehreren Prozessen mehrfach bzw. parallel genutzt werden.</p>\n\n<h2>Arten von Aktivit&auml;ten</h2>\n\n<table class=\"table table-striped\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>&nbsp;</th>\n\t\t\t<th>Token</th>\n\t\t\t<th>Verteilung</th>\n\t\t\t<th>Protokoll</th>\n\t\t\t<th>BM-Zuteilung</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>Prozedur</td>\n\t\t\t<td>Eins f&uuml;r alle</td>\n\t\t\t<td>-</td>\n\t\t\t<td>Call Return</td>\n\t\t\t<td>Exclusiv</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Coroutine</td>\n\t\t\t<td>Eins f&uuml;r alle</td>\n\t\t\t<td>-</td>\n\t\t\t<td>Resume, aber dynamischer Eintrittspunkt (kooperatives Multitasking)</td>\n\t\t\t<td>Exclusiv</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Prozess</td>\n\t\t\t<td>Pro Prozess</td>\n\t\t\t<td>Pro Prozess</td>\n\t\t\t<td>Keine &Uuml;bergabe, da Prozess Token beh&auml;lt</td>\n\t\t\t<td>Exclusiv</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Thread</td>\n\t\t\t<td>Pro Prozess</td>\n\t\t\t<td>Pro Thread Eins</td>\n\t\t\t<td>Keine &Uuml;bergabe, da Prozess Token beh&auml;lt</td>\n\t\t\t<td>Threads sind in Prozessen gruppiert und teilen sich dort die Betriebsmittel</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<h2>Welche Betriebsmittel ben&ouml;tigt eine Aktivit&auml;t mindestens?</h2>\n\n<ul>\n\t<li>Programmcode</li>\n\t<li>Hauptspeicher</li>\n\t<li>Steuerwerk</li>\n</ul>\n\n<h3>Wodurch wird ein Prozess beschrieben?</h3>\n\n<ul>\n\t<li>ein im System eindeutiger Identifikator (PID)</li>\n\t<li>Liste mit Betriebsmittel-Forderungen</li>\n\t<li>Liste mit zugeteilten Betriebsmitteln</li>\n\t<li>Ein Folge der bisherigen Anweisungen</li>\n\t<li>Die Anfangswertbelegungen der zugeteilten Betriebsmittel</li>\n</ul>\n\n<h3>Welche Probleme treten mit Prozessen auf?</h3>\n\n<ul>\n\t<li>Determiniertheit (Durch Mehrfachverwendung von Betriebsmitteln ist diese so nicht mehr gegeben und Synchronisation wird notwendig)</li>\n\t<li>Mutual Exclusion</li>\n\t<li>Synchronisation (Abstimmung zwischen Threads)</li>\n\t<li>Kommunikation (Synchronisation und Austausch von Daten zwischen Prozessen)</li>\n\t<li>Lebendigkeit</li>\n</ul>\n\n<h3>Welche Zust&auml;nde kann ein Prozess einnehmen?</h3>\n\n<ul>\n\t<li>nicht existent (Prozess noch nicht definiert)</li>\n\t<li>bereit (besitzt alle angeforderten Betriebsmittel au&szlig;er den Prozessor)</li>\n\t<li>aktiv (besitzt mindestens die angeforderten Betriebsmittel)</li>\n\t<li>wartend (wartet noch auf noch nicht zugeteilte Betriebsmittel)</li>\n</ul>\n\n<p><img alt=\"Prozess\" src=\"http://www.kreissl.info/pics/images/bs_01.gif\" /></p>\n\n<h2>Wie wird ein Prozess im Unix erstellt?</h2>\n\n<ul>\n\t<li>mit Systemaufruf fork() wird ein komplettes Speicherabbild eines schon bestehenden Prozesses erzeugt (bei NT wird Prozess mit einem Initialzustand erstellt)</li>\n\t<li>Deshalb erben neue Prozesse eventuelle Variablen des Vaterprozesses</li>\n</ul>\n\n<p>Deshalb terminiert folgende Schleife nicht unter NT aber unter Unix:</p>\n\n<div>\n<div class=\"syntaxhighlighter  csharp\" id=\"highlighter_503739\">\n<div class=\"toolbar\"><span><a class=\"toolbar_item command_help help\" href=\"http://www.kreissl.info/bs#\">?</a></span></div>\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td class=\"gutter\">\n\t\t\t<div class=\"line number1 index0 alt2\">1</div>\n\t\t\t</td>\n\t\t\t<td class=\"code\">\n\t\t\t<div class=\"container\">\n\t\t\t<div class=\"line number1 index0 alt2\"><code class=\"csharp plain\">For ( i=1; i&lt;3; i++) fork();</code></div>\n\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t</tbody>\n</table>\n</div>\n</div>\n\n<h3>Einige Unix-Systembefehle zur Prozesserzeugung:</h3>\n\n<ul>\n\t<li>fork(), vfork() zum Prozesserstellen mit Speicherabbild des Vaters</li>\n\t<li>clone() erstellt einen Prozess der der den Speicher und Deskriptoren mit Vater teilt</li>\n\t<li>execl(), execv(), execle(), execlp(), execvp() zum Kopieren eines Programms in den Speicher</li>\n\t<li>wait(), waitpid() zum Warten auf Ende des Sohnprozesses</li>\n\t<li>exit() zum Beenden eines Prozesses</li>\n</ul>\n\n<p>http://unixhelp.ed.ac.uk/CGI/man-cgi</p>\n\n<h3>Ein Beispielcode f&uuml;r eine Einfache Unix-Shell</h3>\n\n<div>\n<div class=\"syntaxhighlighter  csharp\" id=\"highlighter_735766\">\n<div class=\"toolbar\"><span><a class=\"toolbar_item command_help help\" href=\"http://www.kreissl.info/bs#\">?</a></span></div>\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td class=\"gutter\">\n\t\t\t<div class=\"line number1 index0 alt2\">1</div>\n\n\t\t\t<div class=\"line number2 index1 alt1\">2</div>\n\n\t\t\t<div class=\"line number3 index2 alt2\">3</div>\n\n\t\t\t<div class=\"line number4 index3 alt1\">4</div>\n\n\t\t\t<div class=\"line number5 index4 alt2\">5</div>\n\n\t\t\t<div class=\"line number6 index5 alt1\">6</div>\n\n\t\t\t<div class=\"line number7 index6 alt2\">7</div>\n\n\t\t\t<div class=\"line number8 index7 alt1\">8</div>\n\n\t\t\t<div class=\"line number9 index8 alt2\">9</div>\n\n\t\t\t<div class=\"line number10 index9 alt1\">10</div>\n\n\t\t\t<div class=\"line number11 index10 alt2\">11</div>\n\n\t\t\t<div class=\"line number12 index11 alt1\">12</div>\n\n\t\t\t<div class=\"line number13 index12 alt2\">13</div>\n\n\t\t\t<div class=\"line number14 index13 alt1\">14</div>\n\n\t\t\t<div class=\"line number15 index14 alt2\">15</div>\n\n\t\t\t<div class=\"line number16 index15 alt1\">16</div>\n\n\t\t\t<div class=\"line number17 index16 alt2\">17</div>\n\n\t\t\t<div class=\"line number18 index17 alt1\">18</div>\n\n\t\t\t<div class=\"line number19 index18 alt2\">19</div>\n\n\t\t\t<div class=\"line number20 index19 alt1\">20</div>\n\n\t\t\t<div class=\"line number21 index20 alt2\">21</div>\n\n\t\t\t<div class=\"line number22 index21 alt1\">22</div>\n\n\t\t\t<div class=\"line number23 index22 alt2\">23</div>\n\n\t\t\t<div class=\"line number24 index23 alt1\">24</div>\n\n\t\t\t<div class=\"line number25 index24 alt2\">25</div>\n\n\t\t\t<div class=\"line number26 index25 alt1\">26</div>\n\n\t\t\t<div class=\"line number27 index26 alt2\">27</div>\n\n\t\t\t<div class=\"line number28 index27 alt1\">28</div>\n\n\t\t\t<div class=\"line number29 index28 alt2\">29</div>\n\n\t\t\t<div class=\"line number30 index29 alt1\">30</div>\n\n\t\t\t<div class=\"line number31 index30 alt2\">31</div>\n\n\t\t\t<div class=\"line number32 index31 alt1\">32</div>\n\n\t\t\t<div class=\"line number33 index32 alt2\">33</div>\n\n\t\t\t<div class=\"line number34 index33 alt1\">34</div>\n\n\t\t\t<div class=\"line number35 index34 alt2\">35</div>\n\n\t\t\t<div class=\"line number36 index35 alt1\">36</div>\n\n\t\t\t<div class=\"line number37 index36 alt2\">37</div>\n\n\t\t\t<div class=\"line number38 index37 alt1\">38</div>\n\n\t\t\t<div class=\"line number39 index38 alt2\">39</div>\n\n\t\t\t<div class=\"line number40 index39 alt1\">40</div>\n\n\t\t\t<div class=\"line number41 index40 alt2\">41</div>\n\n\t\t\t<div class=\"line number42 index41 alt1\">42</div>\n\t\t\t</td>\n\t\t\t<td class=\"code\">\n\t\t\t<div class=\"container\">\n\t\t\t<div class=\"line number1 index0 alt2\"><code class=\"csharp preprocessor\">#include sys/types.h</code></div>\n\n\t\t\t<div class=\"line number2 index1 alt1\"><code class=\"csharp preprocessor\">#include sys/wait.h</code></div>\n\n\t\t\t<div class=\"line number3 index2 alt2\"><code class=\"csharp preprocessor\">#include unistd.h</code></div>\n\n\t\t\t<div class=\"line number4 index3 alt1\"><code class=\"csharp preprocessor\">#include stdlib.h</code></div>\n\n\t\t\t<div class=\"line number5 index4 alt2\"><code class=\"csharp preprocessor\">#include stdio.h</code></div>\n\n\t\t\t<div class=\"line number6 index5 alt1\"><code class=\"csharp preprocessor\">#include string.h</code></div>\n\n\t\t\t<div class=\"line number7 index6 alt2\">&nbsp;</div>\n\n\t\t\t<div class=\"line number8 index7 alt1\"><code class=\"csharp keyword\">using</code> <code class=\"csharp keyword\">namespace</code> <code class=\"csharp plain\">std;</code></div>\n\n\t\t\t<div class=\"line number9 index8 alt2\">&nbsp;</div>\n\n\t\t\t<div class=\"line number10 index9 alt1\"><code class=\"csharp keyword\">int</code> <code class=\"csharp plain\">main(</code><code class=\"csharp keyword\">void</code><code class=\"csharp plain\">){</code></div>\n\n\t\t\t<div class=\"line number11 index10 alt2\">&nbsp;</div>\n\n\t\t\t<div class=\"line number12 index11 alt1\"><code class=\"csharp plain\">pid_t pid; </code><code class=\"csharp comments\">//f&uuml;r PID des Sohnes </code></div>\n\n\t\t\t<div class=\"line number13 index12 alt2\"><code class=\"csharp keyword\">char</code> <code class=\"csharp plain\">str1[1000]; </code><code class=\"csharp comments\">//Befehlsbuffer</code></div>\n\n\t\t\t<div class=\"line number14 index13 alt1\">&nbsp;</div>\n\n\t\t\t<div class=\"line number15 index14 alt2\"><code class=\"csharp keyword\">while</code><code class=\"csharp plain\">(1){</code></div>\n\n\t\t\t<div class=\"line number16 index15 alt1\">&nbsp;</div>\n\n\t\t\t<div class=\"line number17 index16 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">printf(</code><code class=\"csharp string\">&quot;\\nDiggs mini bash. (PID=%d)\\n\\n&quot;</code><code class=\"csharp plain\">,getpid());</code></div>\n\n\t\t\t<div class=\"line number18 index17 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">printf(</code><code class=\"csharp string\">&quot;&gt; &quot;</code><code class=\"csharp plain\">);</code></div>\n\n\t\t\t<div class=\"line number19 index18 alt2\">&nbsp;</div>\n\n\t\t\t<div class=\"line number20 index19 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">scanf(</code><code class=\"csharp string\">&quot;%s&quot;</code><code class=\"csharp plain\">,str1); </code><code class=\"csharp comments\">//Befehl lesen</code></div>\n\n\t\t\t<div class=\"line number21 index20 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp keyword\">if</code> <code class=\"csharp plain\">(strcmp(str1,</code><code class=\"csharp string\">&quot;exit&quot;</code><code class=\"csharp plain\">)==0) </code><code class=\"csharp keyword\">break</code><code class=\"csharp plain\">; </code><code class=\"csharp comments\">//exit beendet</code></div>\n\n\t\t\t<div class=\"line number22 index21 alt1\">&nbsp;</div>\n\n\t\t\t<div class=\"line number23 index22 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp keyword\">if</code> <code class=\"csharp plain\">((pid=fork())&lt;0) </code><code class=\"csharp comments\">//Prozess kopieren</code></div>\n\n\t\t\t<div class=\"line number24 index23 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">{</code></div>\n\n\t\t\t<div class=\"line number25 index24 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">printf(</code><code class=\"csharp string\">&quot;EXEC Operation failed!\\n\\n&quot;</code><code class=\"csharp plain\">);</code></div>\n\n\t\t\t<div class=\"line number26 index25 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">exit(0);</code></div>\n\n\t\t\t<div class=\"line number27 index26 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">}</code></div>\n\n\t\t\t<div class=\"line number28 index27 alt1\">&nbsp;</div>\n\n\t\t\t<div class=\"line number29 index28 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp keyword\">if</code> <code class=\"csharp plain\">(pid==0) </code><code class=\"csharp comments\">//im Sohnprozess exec</code></div>\n\n\t\t\t<div class=\"line number30 index29 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></div>\n\n\t\t\t<div class=\"line number31 index30 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp keyword\">char</code> <code class=\"csharp plain\">*cmd=strtok(str1,</code><code class=\"csharp string\">&quot; &quot;</code><code class=\"csharp plain\">);</code></div>\n\n\t\t\t<div class=\"line number32 index31 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">execlp (cmd,cmd,0); </code><code class=\"csharp comments\">//Speicher &uuml;berschreiben</code></div>\n\n\t\t\t<div class=\"line number33 index32 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\n\n\t\t\t<div class=\"line number34 index33 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">printf(</code><code class=\"csharp string\">&quot;command not found!\\n&quot;</code><code class=\"csharp plain\">);</code></div>\n\n\t\t\t<div class=\"line number35 index34 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">exit(0); </code><code class=\"csharp comments\">//manuell terminieren</code></div>\n\n\t\t\t<div class=\"line number36 index35 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">} </code><code class=\"csharp comments\">//Vaterprozess muss warten</code></div>\n\n\t\t\t<div class=\"line number37 index36 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp keyword\">else</code></div>\n\n\t\t\t<div class=\"line number38 index37 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">waitpid(pid,0,0); </code></div>\n\n\t\t\t<div class=\"line number39 index38 alt2\"><code class=\"csharp plain\">}</code></div>\n\n\t\t\t<div class=\"line number40 index39 alt1\">&nbsp;</div>\n\n\t\t\t<div class=\"line number41 index40 alt2\"><code class=\"csharp keyword\">return</code> <code class=\"csharp plain\">0; </code></div>\n\n\t\t\t<div class=\"line number42 index41 alt1\"><code class=\"csharp plain\">}</code></div>\n\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t</tbody>\n</table>\n</div>\n</div>\n\n<p>Der Vaterprozess liest einen Befehl (hier nur ohne Parameter) und startet danach einen Sohnprozess mit fork() in welchem mit dem Befehl exec das aufzurufende Programm in den Speicher kopiert wird. Schl&auml;gt exec fehl muss mit exit der Sohnprozess manuell beendet werden, da dieser sonst nicht terminieren w&uuml;rde.</p>\n\n<p>Am Besten einfach ausprobieren. Den Quellcode eingeben oder kopieren und mit dem gcc compilieren:</p>\n\n<div>\n<div class=\"syntaxhighlighter  csharp\" id=\"highlighter_160524\">\n<div class=\"toolbar\"><span><a class=\"toolbar_item command_help help\" href=\"http://www.kreissl.info/bs#\">?</a></span></div>\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td class=\"gutter\">\n\t\t\t<div class=\"line number1 index0 alt2\">1</div>\n\t\t\t</td>\n\t\t\t<td class=\"code\">\n\t\t\t<div class=\"container\">\n\t\t\t<div class=\"line number1 index0 alt2\"><code class=\"csharp plain\">gcc minishell.cc -o minishell </code></div>\n\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t</tbody>\n</table>\n</div>\n</div>\n\n<p><em>Aufruf in einer bash via ./minishell</em></p>\n\n<h2>Wie werden Prozesse verwaltet?</h2>\n\n<p>Das Betriebssystem verwaltet alle Prozesse. Die Prozesse besitzen einen PCB (<strong>Process Controll Block</strong>, in welchem alle zum Prozess geh&ouml;rigen Informationen gespeichert werden. Das Betriebssystem hat nun die Aufgabe alle n Prozesse auf einen oder mehr Prozessoren abzubilden.</p>\n\n<h2>Timesharing</h2>\n\n<p>Timesharing ist die <strong>gemeinsame Benutzung des Betriebsmittels Prozessor</strong> von mehreren Prozessen. Dabei ermittelt ein Scheduler den n&auml;chst auszuf&uuml;hrenden Prozess. Ein Task-Switch bzw. Context-Switch bezeichnet eine solche Umschaltung zwischen den Prozessen.</p>\n\n<h2>Virtuelle Ger&auml;te bzw. Betriebsmittel?</h2>\n\n<p>Virtuelle Ger&auml;te stellen durch das Betriebssystem <strong>simulierte Ger&auml;te</strong> mit idealisierten Eigenschaften dar. Bewerkstelligt wird damit die Abstraktion von den Eigenschaften realer Ger&auml;te mit dem Ziel der Ger&auml;teunabh&auml;ngigkeit. In der Regel stellen virtuelle Ger&auml;te jedem Proze&szlig; eine synchrone Operation zur Verf&uuml;gung. Dabei kann es erheblich mehr virtuelle als reale Ger&auml;te geben. Beispiele f&uuml;r virtuelle Betriebsmittel sind Druckerspooler oder Dateien.</p>\n"
          ]
        },
        {
          "tag_line": "Kapitel 4 - Kritischer Abschnitt",
          "details": [
            "<h1 id=\"anchor4\">Kapitel 4 - Kritischer Abschnitt</h1>\n\n<h2>Definition</h2>\n\n<p>Ein Kritischer Abschnitt ist ein zeitlicher Bereich, in welchem mindestens zwei Prozesse auf das gleiche Betriebsmittel zugreifen und mindestens eines davon schreibt. (Zeitkritischer Ablauf)</p>\n\n<h3>Der Druckerspooler als Beispiel einer Critical Section</h3>\n\n<ol>\n\t<li>in Spooler ist der Platz 4 frei</li>\n\t<li>Prozess A will drucken und liest die Platznummer</li>\n\t<li>PUM aktiviert Prozess B, welcher ebenfalls diese Platznummer liest</li>\n\t<li>Prozess B schreibt den Auftrag nach Platz 4</li>\n\t<li>PUM schaltet zu A zur&uuml;ck und A &uuml;berschreibt nun den Druckauftrag von B!</li>\n</ol>\n\n<p><em><strong>Deshalb notwendig:</strong> Wechselseitiger Ausschluss!</em></p>\n\n<h2>Warum werden keine Interrupt Unterbrechungen zur Synchronisation verwendet?</h2>\n\n<p>Ein Proze&szlig; der auf gemeinsame Daten und Ressourcen zugreift, kann nicht einfach alle Interrupts abschalten. Dies w&uuml;rde zu keinem optimalen Scheduling f&uuml;hren, weil dann jeder Proze&szlig; solange die Kontrolle behalten darf wie er will. D.h. die wartenden Prozesse sind auf die Kooperation des gerade laufenden Prozesses angewiesen (kooperatives Multitasking wie Win 3.11)</p>\n\n<h2>Was ist wechselseitiger Ausschluss?</h2>\n\n<p>Es muss gew&auml;hrleistet werden, da&szlig; niemals sich mehr als ein Prozess in einem kritischen Abschnitt befinden darf. Die Anwendung einer einfachen Sperrvariable ist hier nicht m&ouml;glich, da der Zugriff und das Setzen dieser, selbst einen kritischen Abschnitt darstellt. Es m&uuml;ssen Algorithmen gefunden werden, welche die Funktionalit&auml;t gefahrlos implementieren.</p>\n\n<h3>Welche Anforderungen muss eine Steuerung f&uuml;r kritische Abschnitte erf&uuml;llen?</h3>\n\n<ol>\n\t<li>exklusive Nutzung durch verschiedene Teilprozesse &uuml;ber mutual exclusion</li>\n\t<li>Ein Prozess darf einen anderen nur behindern, wenn beide im kritischen Abschnitt</li>\n\t<li>Der Eintritt in einen kritischen Abschnitt darf nicht lang dauern</li>\n\t<li>Alle Prozesse m&uuml;ssen in endlicher Zeit ihre Betriebsmittel zugewiesen bekommen</li>\n\t<li>globale Unabh&auml;ngigkeit von allgemeinen Fortschreiten der Prozesse</li>\n</ol>\n\n<h2>Arten dezentraler Steuerungen (aktives Warten)</h2>\n\n<ul>\n\t<li>Test and Set Lock</li>\n\t<li>Ping-Pong (Striktes Alternieren)</li>\n\t<li>Decker Algorithmus</li>\n\t<li>Peterson Algorithmus</li>\n</ul>\n\n<h3>Striktes Alternieren (Ping Pong)</h3>\n\n<table class=\"table\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>Prozess A</td>\n\t\t\t<td>Prozess B</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t<div>\n\t\t\t<div class=\"syntaxhighlighter  csharp\" id=\"highlighter_496985\">\n\t\t\t<div class=\"toolbar\"><span><a class=\"toolbar_item command_help help\" href=\"http://www.kreissl.info/bs#\">?</a></span></div>\n\n\t\t\t<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td class=\"gutter\">\n\t\t\t\t\t\t<div class=\"line number1 index0 alt2\">1</div>\n\n\t\t\t\t\t\t<div class=\"line number2 index1 alt1\">2</div>\n\n\t\t\t\t\t\t<div class=\"line number3 index2 alt2\">3</div>\n\n\t\t\t\t\t\t<div class=\"line number4 index3 alt1\">4</div>\n\n\t\t\t\t\t\t<div class=\"line number5 index4 alt2\">5</div>\n\n\t\t\t\t\t\t<div class=\"line number6 index5 alt1\">6</div>\n\n\t\t\t\t\t\t<div class=\"line number7 index6 alt2\">7</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"code\">\n\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t<div class=\"line number1 index0 alt2\"><code class=\"csharp plain\">While (1)</code></div>\n\n\t\t\t\t\t\t<div class=\"line number2 index1 alt1\"><code class=\"csharp plain\">{</code></div>\n\n\t\t\t\t\t\t<div class=\"line number3 index2 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp keyword\">while</code> <code class=\"csharp plain\">(turn!=FALSE);</code></div>\n\n\t\t\t\t\t\t<div class=\"line number4 index3 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">criticalsection();</code></div>\n\n\t\t\t\t\t\t<div class=\"line number5 index4 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">turn = TRUE;</code></div>\n\n\t\t\t\t\t\t<div class=\"line number6 index5 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">notcriticalstuff();</code></div>\n\n\t\t\t\t\t\t<div class=\"line number7 index6 alt2\"><code class=\"csharp plain\">}</code></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t<div>\n\t\t\t<div class=\"syntaxhighlighter  csharp\" id=\"highlighter_829810\">\n\t\t\t<div class=\"toolbar\"><span><a class=\"toolbar_item command_help help\" href=\"http://www.kreissl.info/bs#\">?</a></span></div>\n\n\t\t\t<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td class=\"gutter\">\n\t\t\t\t\t\t<div class=\"line number1 index0 alt2\">1</div>\n\n\t\t\t\t\t\t<div class=\"line number2 index1 alt1\">2</div>\n\n\t\t\t\t\t\t<div class=\"line number3 index2 alt2\">3</div>\n\n\t\t\t\t\t\t<div class=\"line number4 index3 alt1\">4</div>\n\n\t\t\t\t\t\t<div class=\"line number5 index4 alt2\">5</div>\n\n\t\t\t\t\t\t<div class=\"line number6 index5 alt1\">6</div>\n\n\t\t\t\t\t\t<div class=\"line number7 index6 alt2\">7</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"code\">\n\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t<div class=\"line number1 index0 alt2\"><code class=\"csharp plain\">While (1)</code></div>\n\n\t\t\t\t\t\t<div class=\"line number2 index1 alt1\"><code class=\"csharp plain\">{</code></div>\n\n\t\t\t\t\t\t<div class=\"line number3 index2 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp keyword\">while</code> <code class=\"csharp plain\">(turn!=TRUE);</code></div>\n\n\t\t\t\t\t\t<div class=\"line number4 index3 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">criticalsection();</code></div>\n\n\t\t\t\t\t\t<div class=\"line number5 index4 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">turn = FALSE;</code></div>\n\n\t\t\t\t\t\t<div class=\"line number6 index5 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">notcriticalstuff();</code></div>\n\n\t\t\t\t\t\t<div class=\"line number7 index6 alt2\"><code class=\"csharp plain\">}</code></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td colspan=\"2\">Hier wird nur mit einer TURN Variable zwischen den Prozessen hin und her geschalten. Nachteil ist das die Abl&auml;ufe nur abwechselnd in die kritischen Abschnitte eintreten k&ouml;nnen und das ein nicht im kritischen Abschnitt arbeitender Prozess trotzdem warten muss, bis der andere diesen wieder verlassen hat.</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<h3>Der Peterson Algorithmus</h3>\n\n<div>\n<div class=\"syntaxhighlighter  csharp\" id=\"highlighter_844012\">\n<div class=\"toolbar\"><span><a class=\"toolbar_item command_help help\" href=\"http://www.kreissl.info/bs#\">?</a></span></div>\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td class=\"gutter\">\n\t\t\t<div class=\"line number1 index0 alt2\">1</div>\n\n\t\t\t<div class=\"line number2 index1 alt1\">2</div>\n\n\t\t\t<div class=\"line number3 index2 alt2\">3</div>\n\n\t\t\t<div class=\"line number4 index3 alt1\">4</div>\n\n\t\t\t<div class=\"line number5 index4 alt2\">5</div>\n\n\t\t\t<div class=\"line number6 index5 alt1\">6</div>\n\n\t\t\t<div class=\"line number7 index6 alt2\">7</div>\n\n\t\t\t<div class=\"line number8 index7 alt1\">8</div>\n\n\t\t\t<div class=\"line number9 index8 alt2\">9</div>\n\n\t\t\t<div class=\"line number10 index9 alt1\">10</div>\n\n\t\t\t<div class=\"line number11 index10 alt2\">11</div>\n\n\t\t\t<div class=\"line number12 index11 alt1\">12</div>\n\n\t\t\t<div class=\"line number13 index12 alt2\">13</div>\n\n\t\t\t<div class=\"line number14 index13 alt1\">14</div>\n\n\t\t\t<div class=\"line number15 index14 alt2\">15</div>\n\t\t\t</td>\n\t\t\t<td class=\"code\">\n\t\t\t<div class=\"container\">\n\t\t\t<div class=\"line number1 index0 alt2\"><code class=\"csharp plain\">CONST&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; N = 2;&nbsp; </code><code class=\"csharp comments\">//konkurrierende Prozesse</code></div>\n\n\t\t\t<div class=\"line number2 index1 alt1\"><code class=\"csharp plain\">INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; turn; </code><code class=\"csharp comments\">//Container f&uuml;r aktiven Prozess</code></div>\n\n\t\t\t<div class=\"line number3 index2 alt2\"><code class=\"csharp plain\">INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; interested[N];</code></div>\n\n\t\t\t<div class=\"line number4 index3 alt1\">&nbsp;</div>\n\n\t\t\t<div class=\"line number5 index4 alt2\"><code class=\"csharp keyword\">void</code> <code class=\"csharp plain\">P(</code><code class=\"csharp keyword\">int</code> <code class=\"csharp plain\">process)&nbsp;&nbsp;&nbsp; </code><code class=\"csharp comments\">//Eintreten</code></div>\n\n\t\t\t<div class=\"line number6 index5 alt1\"><code class=\"csharp plain\">{</code></div>\n\n\t\t\t<div class=\"line number7 index6 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp keyword\">int</code> <code class=\"csharp plain\">other = 1-process; </code><code class=\"csharp comments\">//Gegenteil des Prozesses</code></div>\n\n\t\t\t<div class=\"line number8 index7 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">interested[process] = TRUE;&nbsp;&nbsp;&nbsp; </code><code class=\"csharp comments\">//Interesse bekunden</code></div>\n\n\t\t\t<div class=\"line number9 index8 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">turn = process;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class=\"csharp comments\">//Flag setzen</code></div>\n\n\t\t\t<div class=\"line number10 index9 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp keyword\">while</code><code class=\"csharp plain\">(( turn==process ) AND (interested[other]==TRUE));</code></div>\n\n\t\t\t<div class=\"line number11 index10 alt2\"><code class=\"csharp plain\">}</code></div>\n\n\t\t\t<div class=\"line number12 index11 alt1\"><code class=\"csharp keyword\">void</code> <code class=\"csharp plain\">V(</code><code class=\"csharp keyword\">int</code> <code class=\"csharp plain\">process)&nbsp;&nbsp;&nbsp; </code><code class=\"csharp comments\">//Welcher Prozess verl&auml;&szlig;t K.A.</code></div>\n\n\t\t\t<div class=\"line number13 index12 alt2\"><code class=\"csharp plain\">{</code></div>\n\n\t\t\t<div class=\"line number14 index13 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">interested[process]= FALSE;&nbsp;&nbsp;&nbsp; </code><code class=\"csharp comments\">//Kein Interesse mehr</code></div>\n\n\t\t\t<div class=\"line number15 index14 alt2\"><code class=\"csharp plain\">}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></div>\n\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t</tbody>\n</table>\n</div>\n</div>\n\n<p>Das turn erzwingt ein Warten des interessierten Prozesses, solange ein andere Prozess im K.A. ist. Der Hauptnachteil von dezentralen Steuerungen f&uuml;r kritische Abschnitte ist das Aktive Warten (Spin Locks), was bedeutet, dass die Blockierzeit anderer Prozesse nicht genutzt werden kann.</p>\n\n<h2>Semaphore - zentrale Steuerung</h2>\n\n<p>Ein Semaphor ist ein allgemeiner Mechanismus zur Synchronisation, ohne aktiv warten zu m&uuml;ssen. Das Verfahren wurde von Dijkstra (1965) entwickelt und hat sich durchgesetzt. Ein Semaphor arbeitet auf einer priviligierten Schicht des Betriebssystems und ist somit nicht Teil der Prozesse.</p>\n\n<p>Ein Bin&auml;rer Semaphor kann einen Kritischen Abschnitt f&uuml;r zwei Prozesse verwalten. Falls mehrere Prozesse gleichzeitig auf ein Betriebsmittel zugreifen d&uuml;rfen, reicht der bin&auml;re Semaphor nich aus. Der Semaphor wird dann als Z&auml;hler implementiert. Falls er 0 ist, ist das Betriebsmittel voll ausgelastet. Ist er gr&ouml;&szlig;er als 0, so sind noch Ressourcen vorhanden, d.h. andere Prozesse d&uuml;rfen in den Kritischen Abschnitt eintreten, solange der Semaphor nicht Null ist. Dabei dekrementieren sie diesen und blockieren ihn f&uuml;r andere Prozesse, falls der Semaphor nun Null ist. Verl&auml;&szlig;t ein Prozess den Kritischen Abschnitt, inkrementiert der Prozess den Semaphor wieder und signalisiert damit, dass er seine Arbeit getan hat und nun ein anderer eintreten darf. Daher werden die beiden Operationen vor und nach dem Kritischen Abschnitt oft als Down(sem) und Up(sem) definiert.</p>\n\n<h3>Das Grundprinzip von Semaphoren</h3>\n\n<p>Es wird nicht mehr eine Art Sperrvariable verwendet, sondern ein Z&auml;hler. F&uuml;r dieses Z&auml;hler gibt es die Operationen up(s) bzw. V und down(s) bzw. P zum Erh&ouml;hen bzw. Dekrementieren des Z&auml;hlers. Ist nach einem down(s) der Z&auml;hler null, wird gewartet. Ist er irgendwann wieder gr&ouml;&szlig;er als null werden die Anweisungen ausgef&uuml;hrt. Der Semaphor ist nun nichts weiter als dieser Z&auml;hler, welcher nur durch up und down ansprechbar ist! Die beiden Operationen P und V stellen nat&uuml;rlich auch kleine kritische Abschnitte dar, welche &uuml;ber aktives Warten synchronisiert werden.</p>\n\n<div>\n<div class=\"syntaxhighlighter  csharp\" id=\"highlighter_942869\">\n<div class=\"toolbar\"><span><a class=\"toolbar_item command_help help\" href=\"http://www.kreissl.info/bs#\">?</a></span></div>\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td class=\"gutter\">\n\t\t\t<div class=\"line number1 index0 alt2\">1</div>\n\n\t\t\t<div class=\"line number2 index1 alt1\">2</div>\n\n\t\t\t<div class=\"line number3 index2 alt2\">3</div>\n\n\t\t\t<div class=\"line number4 index3 alt1\">4</div>\n\n\t\t\t<div class=\"line number5 index4 alt2\">5</div>\n\n\t\t\t<div class=\"line number6 index5 alt1\">6</div>\n\n\t\t\t<div class=\"line number7 index6 alt2\">7</div>\n\n\t\t\t<div class=\"line number8 index7 alt1\">8</div>\n\n\t\t\t<div class=\"line number9 index8 alt2\">9</div>\n\n\t\t\t<div class=\"line number10 index9 alt1\">10</div>\n\n\t\t\t<div class=\"line number11 index10 alt2\">11</div>\n\t\t\t</td>\n\t\t\t<td class=\"code\">\n\t\t\t<div class=\"container\">\n\t\t\t<div class=\"line number1 index0 alt2\"><code class=\"csharp plain\">P(sem) </code><code class=\"csharp comments\">//Probiere in kritischen Abschnitt einzutreten</code></div>\n\n\t\t\t<div class=\"line number2 index1 alt1\"><code class=\"csharp plain\">{</code></div>\n\n\t\t\t<div class=\"line number3 index2 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp keyword\">if</code> <code class=\"csharp plain\">(sem == 0)</code></div>\n\n\t\t\t<div class=\"line number4 index3 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">sleep(sem); </code><code class=\"csharp comments\">//Prozess auf wartend setzen</code></div>\n\n\t\t\t<div class=\"line number5 index4 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">sem--;</code></div>\n\n\t\t\t<div class=\"line number6 index5 alt1\"><code class=\"csharp plain\">}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></div>\n\n\t\t\t<div class=\"line number7 index6 alt2\"><code class=\"csharp plain\">V(sem) </code><code class=\"csharp comments\">//Verlasse kritischen Abschnitt</code></div>\n\n\t\t\t<div class=\"line number8 index7 alt1\"><code class=\"csharp plain\">{</code></div>\n\n\t\t\t<div class=\"line number9 index8 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">sem++; </code><code class=\"csharp comments\">//Zugang wieder freigeben</code></div>\n\n\t\t\t<div class=\"line number10 index9 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">wakeup(sem);</code></div>\n\n\t\t\t<div class=\"line number11 index10 alt2\"><code class=\"csharp plain\">}</code></div>\n\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t</tbody>\n</table>\n</div>\n</div>\n\n<p>sleep und wakup sind Systembefehle, welche einen Prozess Schlafenlegen oder Aufwecken.</p>\n\n<table class=\"table\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>Prozess A</td>\n\t\t\t<td>Prozess B</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td colspan=\"2\">\n\t\t\t<div>\n\t\t\t<div class=\"syntaxhighlighter  csharp\" id=\"highlighter_908059\">\n\t\t\t<div class=\"toolbar\"><span><a class=\"toolbar_item command_help help\" href=\"http://www.kreissl.info/bs#\">?</a></span></div>\n\n\t\t\t<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td class=\"gutter\">\n\t\t\t\t\t\t<div class=\"line number1 index0 alt2\">1</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"code\">\n\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t<div class=\"line number1 index0 alt2\"><code class=\"csharp keyword\">int</code> <code class=\"csharp plain\">sem = 1; </code><code class=\"csharp comments\">//zwei Prozesse</code></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t<div>\n\t\t\t<div class=\"syntaxhighlighter  csharp\" id=\"highlighter_726176\">\n\t\t\t<div class=\"toolbar\"><span><a class=\"toolbar_item command_help help\" href=\"http://www.kreissl.info/bs#\">?</a></span></div>\n\n\t\t\t<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td class=\"gutter\">\n\t\t\t\t\t\t<div class=\"line number1 index0 alt2\">1</div>\n\n\t\t\t\t\t\t<div class=\"line number2 index1 alt1\">2</div>\n\n\t\t\t\t\t\t<div class=\"line number3 index2 alt2\">3</div>\n\n\t\t\t\t\t\t<div class=\"line number4 index3 alt1\">4</div>\n\n\t\t\t\t\t\t<div class=\"line number5 index4 alt2\">5</div>\n\n\t\t\t\t\t\t<div class=\"line number6 index5 alt1\">6</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"code\">\n\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t<div class=\"line number1 index0 alt2\"><code class=\"csharp plain\">While (1)</code></div>\n\n\t\t\t\t\t\t<div class=\"line number2 index1 alt1\"><code class=\"csharp plain\">{</code></div>\n\n\t\t\t\t\t\t<div class=\"line number3 index2 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">P(sem);</code></div>\n\n\t\t\t\t\t\t<div class=\"line number4 index3 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp comments\">// kritischer Abschnitt</code></div>\n\n\t\t\t\t\t\t<div class=\"line number5 index4 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">V(sem);</code></div>\n\n\t\t\t\t\t\t<div class=\"line number6 index5 alt1\"><code class=\"csharp plain\">}</code></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t<div>\n\t\t\t<div class=\"syntaxhighlighter  csharp\" id=\"highlighter_952724\">\n\t\t\t<div class=\"toolbar\"><span><a class=\"toolbar_item command_help help\" href=\"http://www.kreissl.info/bs#\">?</a></span></div>\n\n\t\t\t<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td class=\"gutter\">\n\t\t\t\t\t\t<div class=\"line number1 index0 alt2\">1</div>\n\n\t\t\t\t\t\t<div class=\"line number2 index1 alt1\">2</div>\n\n\t\t\t\t\t\t<div class=\"line number3 index2 alt2\">3</div>\n\n\t\t\t\t\t\t<div class=\"line number4 index3 alt1\">4</div>\n\n\t\t\t\t\t\t<div class=\"line number5 index4 alt2\">5</div>\n\n\t\t\t\t\t\t<div class=\"line number6 index5 alt1\">6</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"code\">\n\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t<div class=\"line number1 index0 alt2\"><code class=\"csharp plain\">While (1)&nbsp; </code></div>\n\n\t\t\t\t\t\t<div class=\"line number2 index1 alt1\"><code class=\"csharp plain\">{</code></div>\n\n\t\t\t\t\t\t<div class=\"line number3 index2 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">P(sem);</code></div>\n\n\t\t\t\t\t\t<div class=\"line number4 index3 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp comments\">// kritischer Abschnitt</code></div>\n\n\t\t\t\t\t\t<div class=\"line number5 index4 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">V(sem);&nbsp;&nbsp;&nbsp; </code></div>\n\n\t\t\t\t\t\t<div class=\"line number6 index5 alt1\"><code class=\"csharp plain\">}</code></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td colspan=\"2\">&nbsp;</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<h3>Events</h3>\n\n<p>Betriebssysteme wie z.B. Unix benutzen Events als Abstraktion von Semaphoren zum <strong>Koordinieren</strong> von Prozessabl&auml;ufen (im Gegensatz zu kritischen Abschnitten). Ein Ereignis stellt nichts weiter als eine f&uuml;r Software erkennbare <strong>Bedingung</strong> dar. Ein Prozess kann sich Schlafen legen, bis eine bestimmte Bedingung eintreten.</p>\n\n<ul>\n\t<li>Ein Prozess setzt einen wait()-Aufruf auf ein Ereignis ab. Er wird dann an dem Event-Deskriptor wartend gesetzt.</li>\n\t<li>Wenn an dem Event-Deskriptor das Ereignis signalisiert wird, so wird ein dort wartender Prozess bereit gesetzt.</li>\n\t<li>Der wesentliche Unterschied zu den Semaphor-Operationen ergibt sich daraus, dass die Signale nicht gespeichert werden, bei Semaphoren wird dagegen der Wert bei signal() um 1 erh&ouml;ht.</li>\n</ul>\n\n<h4>Semaphore</h4>\n\n<p>Wert 0. Kommt das signal() vor dem wait(): der wait()-aufrufende Prozess wird nicht blockiert.</p>\n\n<h4>Event</h4>\n\n<p>Ein Wert ist nicht vorhanden, kein Prozess wartet. Das Ereignis wird vor dem wait()-Aufruf signalisiert: der wait()-aufrufende Prozess wird blockiert, bis ein weiteres Ereignis eintrifft. Das erste Ereignis wird nicht gemerkt.</p>\n\n<h3>Monitor</h3>\n\n<p>Ein Monitor besteht aus einigen Prozeduren, Variablen und Datenstrukturen die zu einer besonderen Art Modul zusammengefasst werden. Dieses Monitormodul verkapselt Semaphore und die Operationen auf diesen Semaphoren. N&uuml;tzlichste Eigenschaft eines Monitors ist, da&szlig; jeweils nur ein Proze&szlig; zu einer Zeit einen Monitor benutzen kann. Ein Monitor ist zwar vielen Prozessen zug&auml;nglich, aber nur jeweils ein Proze&szlig; kann den Monitor zu einem gegebenen Zeitpunkt benutzen. Monitore werden h&auml;ufig zur Verwaltung von Puffern und Ger&auml;ten eingesetzt.</p>\n\n<div class=\"well\">\n<h1 id=\"anchor5\">Synchronisationsm&ouml;glichkeiten</h1>\n\n<ul>\n\t<li>Es gibt dezentrale und zentrale Steuerungen f&uuml;r kritische Abschnitte</li>\n\t<li>Dezentrale Steuerungen ist das aktives Warten</li>\n\t<li>Zentrale Steuerungen sind Semaphore (passives Warten)</li>\n\t<li>Beim passiven Warten werden Prozesse schlafengelegt</li>\n\t<li>Ereignisse dienen der Koordination</li>\n</ul>\n</div>\n\n<h2>Was ist das Erzeuger-Verbraucher-Problem?</h2>\n\n<p>Zwei Prozesse nutzen einen Puffer mit N Pl&auml;tzen zum Datenaustausch. W&auml;hrend Prozess A Daten sequentiell in den Puffer schreibt, entnimmt Prozess B ein Datum aus dem Puffer.</p>\n\n<p><br />\nNun stellen sich die Fragen</p>\n\n<ol>\n\t<li>Wie soll man das gleichzeitige Einf&uuml;gen und Entnehmen synchronisieren?</li>\n\t<li>Ein Datum darf nur eingef&uuml;gt werden wenn der Puffer nicht voll ist.</li>\n\t<li>Ein Datum darf nur eingef&uuml;gt werden, wenn noch Platz im Buffer ist.</li>\n</ol>\n\n<p>Gel&ouml;st werden, kann das Problem mit mehreren Semaphoren.</p>\n\n<ul>\n\t<li>Ein Semaphor f&uuml;r die Kontrolle des kritischen Abschnittes</li>\n\t<li>Ein Semaphor, welcher die freien Pl&auml;tze z&auml;hlt</li>\n\t<li>Ein Semaphor, welcher die vergebenen Pl&auml;tze z&auml;hlt</li>\n</ul>\n\n<div>\n<div class=\"syntaxhighlighter  csharp\" id=\"highlighter_764603\">\n<div class=\"toolbar\"><span><a class=\"toolbar_item command_help help\" href=\"http://www.kreissl.info/bs#\">?</a></span></div>\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td class=\"gutter\">\n\t\t\t<div class=\"line number1 index0 alt2\">1</div>\n\n\t\t\t<div class=\"line number2 index1 alt1\">2</div>\n\n\t\t\t<div class=\"line number3 index2 alt2\">3</div>\n\n\t\t\t<div class=\"line number4 index3 alt1\">4</div>\n\n\t\t\t<div class=\"line number5 index4 alt2\">5</div>\n\n\t\t\t<div class=\"line number6 index5 alt1\">6</div>\n\n\t\t\t<div class=\"line number7 index6 alt2\">7</div>\n\n\t\t\t<div class=\"line number8 index7 alt1\">8</div>\n\n\t\t\t<div class=\"line number9 index8 alt2\">9</div>\n\n\t\t\t<div class=\"line number10 index9 alt1\">10</div>\n\n\t\t\t<div class=\"line number11 index10 alt2\">11</div>\n\n\t\t\t<div class=\"line number12 index11 alt1\">12</div>\n\n\t\t\t<div class=\"line number13 index12 alt2\">13</div>\n\n\t\t\t<div class=\"line number14 index13 alt1\">14</div>\n\n\t\t\t<div class=\"line number15 index14 alt2\">15</div>\n\n\t\t\t<div class=\"line number16 index15 alt1\">16</div>\n\n\t\t\t<div class=\"line number17 index16 alt2\">17</div>\n\n\t\t\t<div class=\"line number18 index17 alt1\">18</div>\n\n\t\t\t<div class=\"line number19 index18 alt2\">19</div>\n\n\t\t\t<div class=\"line number20 index19 alt1\">20</div>\n\n\t\t\t<div class=\"line number21 index20 alt2\">21</div>\n\n\t\t\t<div class=\"line number22 index21 alt1\">22</div>\n\n\t\t\t<div class=\"line number23 index22 alt2\">23</div>\n\n\t\t\t<div class=\"line number24 index23 alt1\">24</div>\n\n\t\t\t<div class=\"line number25 index24 alt2\">25</div>\n\n\t\t\t<div class=\"line number26 index25 alt1\">26</div>\n\n\t\t\t<div class=\"line number27 index26 alt2\">27</div>\n\n\t\t\t<div class=\"line number28 index27 alt1\">28</div>\n\n\t\t\t<div class=\"line number29 index28 alt2\">29</div>\n\n\t\t\t<div class=\"line number30 index29 alt1\">30</div>\n\n\t\t\t<div class=\"line number31 index30 alt2\">31</div>\n\t\t\t</td>\n\t\t\t<td class=\"code\">\n\t\t\t<div class=\"container\">\n\t\t\t<div class=\"line number1 index0 alt2\"><code class=\"csharp keyword\">const</code> <code class=\"csharp plain\">N 100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class=\"csharp comments\">//buffer size</code></div>\n\n\t\t\t<div class=\"line number2 index1 alt1\">&nbsp;</div>\n\n\t\t\t<div class=\"line number3 index2 alt2\"><code class=\"csharp keyword\">int</code> <code class=\"csharp plain\">mutex = 1 </code><code class=\"csharp comments\">//F&uuml;r Kritischen Abschnitt</code></div>\n\n\t\t\t<div class=\"line number4 index3 alt1\"><code class=\"csharp keyword\">int</code> <code class=\"csharp plain\">empty = N </code><code class=\"csharp comments\">//Anfangs leerer Buffer</code></div>\n\n\t\t\t<div class=\"line number5 index4 alt2\"><code class=\"csharp keyword\">int</code> <code class=\"csharp plain\">full&nbsp; = 0 </code><code class=\"csharp comments\">//noch keine Daten im Buffer</code></div>\n\n\t\t\t<div class=\"line number6 index5 alt1\"><code class=\"csharp keyword\">void</code> <code class=\"csharp plain\">ErzeugerProzess()</code></div>\n\n\t\t\t<div class=\"line number7 index6 alt2\"><code class=\"csharp plain\">{</code></div>\n\n\t\t\t<div class=\"line number8 index7 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp keyword\">int</code> <code class=\"csharp plain\">item;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></div>\n\n\t\t\t<div class=\"line number9 index8 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp keyword\">while</code><code class=\"csharp plain\">(1)</code></div>\n\n\t\t\t<div class=\"line number10 index9 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">{</code></div>\n\n\t\t\t<div class=\"line number11 index10 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">iNode = CreateItem();</code></div>\n\n\t\t\t<div class=\"line number12 index11 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">P(empty);</code></div>\n\n\t\t\t<div class=\"line number13 index12 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">P(mutex);</code></div>\n\n\t\t\t<div class=\"line number14 index13 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">Insert(item) </code><code class=\"csharp comments\">//Critical Section</code></div>\n\n\t\t\t<div class=\"line number15 index14 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">V(mutex);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class=\"csharp comments\">//Mutex wieder erh&ouml;hen</code></div>\n\n\t\t\t<div class=\"line number16 index15 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">V(full);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class=\"csharp comments\">//full=full+1</code></div>\n\n\t\t\t<div class=\"line number17 index16 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">}</code></div>\n\n\t\t\t<div class=\"line number18 index17 alt1\"><code class=\"csharp plain\">}</code></div>\n\n\t\t\t<div class=\"line number19 index18 alt2\"><code class=\"csharp keyword\">void</code> <code class=\"csharp plain\">VerbraucherProzess()</code></div>\n\n\t\t\t<div class=\"line number20 index19 alt1\"><code class=\"csharp plain\">{</code></div>\n\n\t\t\t<div class=\"line number21 index20 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp keyword\">int</code> <code class=\"csharp plain\">item;</code></div>\n\n\t\t\t<div class=\"line number22 index21 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp keyword\">while</code><code class=\"csharp plain\">(1)</code></div>\n\n\t\t\t<div class=\"line number23 index22 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">{</code></div>\n\n\t\t\t<div class=\"line number24 index23 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">P(full);</code></div>\n\n\t\t\t<div class=\"line number25 index24 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">P(mutex);</code></div>\n\n\t\t\t<div class=\"line number26 index25 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">Item = RemoveItem(); </code><code class=\"csharp comments\">//Critical Section</code></div>\n\n\t\t\t<div class=\"line number27 index26 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">V(mutex);</code></div>\n\n\t\t\t<div class=\"line number28 index27 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">V(empty);</code></div>\n\n\t\t\t<div class=\"line number29 index28 alt2\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">MakeSomething(Item);</code></div>\n\n\t\t\t<div class=\"line number30 index29 alt1\"><code class=\"csharp spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"csharp plain\">}</code></div>\n\n\t\t\t<div class=\"line number31 index30 alt2\"><code class=\"csharp plain\">}</code></div>\n\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t</tbody>\n</table>\n</div>\n</div>\n\n<p>Der Semaphor mutex verhindert, da&szlig; gleichzeitig Verbraucher und Erzeuger im kritischen Abschnitt sind. Denn falls der Erzeuger gerade eingetreten ist, ist der Semaphore mutex null. Versucht nun der Verbraucher in den kritischen Abschnitt einzutreten, muss er bei P(mutex) warten, da der mutex noch null ist. Um nun zu Verhindern das aus einer leeren Liste gelesen oder in eine volle geschrieben wird, werden hier elegant zwei weitere Semaphoren verwendet, welche das Vorhandensein von freien Pl&auml;tzen (empty) und belegten P l&auml;tzen (full) z&auml;hlen.</p>\n\n<h2>Das Philosophenproblem</h2>\n\n<p>Beim Philosophenproblem geht es nicht um Kommunikation sondern um Synchronisation. Abstrakt gesehen, gibt es N Prozesse und N Betriebsmittel. Ein Prozess ben&ouml;tigt mindestens zwei der Betriebsmittel um fortschreiten zu k&ouml;nnen. Ohne Synchronisation, w&uuml;rden im schlimmsten Fall alle 5 Prozesse je ein Betriebsmittel bekommen und dann unendlich darauf warten, da&szlig; ein anderer Prozess eins freigibt.</p>\n\n<p>Es sitzen f&uuml;nf Personen an einem runden Tisch. Sie k&ouml;nnen entweder Denken oder Essen. Es gibt zwar f&uuml;r jeden einen Teller, aber nur f&uuml;nf St&auml;bchen. Um Essen zu k&ouml;nnen braucht man aber bekannterma&szlig;en zwei.</p>\n\n<h3>Wie kann das Philosophenproblem gel&ouml;st werden?</h3>\n\n<p>Nat&uuml;rlich denkt man zuerst an Semaphoren. Nur funktioniert die triviale L&ouml;sung mit einem Semaphor pro St&auml;bchen nicht. Es k&ouml;nnen immer noch alle Philosophen je ein St&auml;bchen gleichzeitig aufnehmen und die Prozesse w&auml;ren allesamt verklemmt. Es muss also irgendwie m&ouml;glich sein, mehr als ein St&auml;bchen gleichzeitig aufzunehmen. Bei den verschiedenen Implementationen ist vor allem darauf zu achten, da&szlig; dieses Aufnehmen der beiden St&auml;be eine Atomare Funktion ist.</p>\n\n<h2>Unix-Signale</h2>\n\n<p>Ein Ereignis wird hier als Signal bezeichnet. Unter Unix gibt es vorgegebene durchnummerierte Signale. Unter Unix kann mit <em>kill(Prozessnummer, Signalnummer)</em> einem Prozess ein Ereignis signalisiert werden.</p>\n\n<p>Die Reaktion eines Prozesses auf ein Signal kann verschieden ausfallen:</p>\n\n<ul>\n\t<li>Aktivierung einer Prozessfunktion, die der Prozess vorher f&uuml;r dieses Signal mit der Funktion <strong>signal( Signalnummer, Funktionsadresse)</strong> angemeldet hat</li>\n\t<li>Er kann das Signal mit <strong>signal(Signalnummer, SIG_IGN);</strong> ignorieren</li>\n\t<li>Der Prozess kann beendet werden.</li>\n\t<li>Hat der Prozess f&uuml;r eine Signalnummer nichts festgelegt, dann gibt es Voreinstellungen:</li>\n</ul>\n\n<table class=\"table\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>&nbsp;&nbsp;&nbsp;</td>\n\t\t\t<td>#define SIGFPE</td>\n\t\t\t<td>8</td>\n\t\t\t<td>/* Floating point trap */</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;&nbsp;&nbsp;</td>\n\t\t\t<td>#define SIGILL</td>\n\t\t\t<td>4</td>\n\t\t\t<td>/* Illegal instruction */</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;&nbsp;&nbsp;</td>\n\t\t\t<td>#define SIGINT</td>\n\t\t\t<td>2</td>\n\t\t\t<td>/* voreingestelle Interrupttaste z.B. Ctl -c*/</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;&nbsp;&nbsp;</td>\n\t\t\t<td>#define SIGSEGV</td>\n\t\t\t<td>11</td>\n\t\t\t<td>/* Memory access violation */</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;&nbsp;&nbsp;</td>\n\t\t\t<td>#define SIGTERM</td>\n\t\t\t<td>15</td>\n\t\t\t<td>/* Kill -Kommando ohne Angabe*/</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;&nbsp;&nbsp;</td>\n\t\t\t<td>#define SIGKILL</td>\n\t\t\t<td>9</td>\n\t\t\t<td>/* unbedingter Prozessabbruch*/</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<h2>Was unterscheidet Pipes und Named Pipes?</h2>\n\n<p>Pipes sind nur innerhalb von Prozessgruppen (UNIX) oder zwischen Threads eines Prozesses verwendbar, da diese nur dort bekannt ist (und eindeutig identifizierbar). Diese Einschr&auml;nkung kann mit der <strong>Named Pipe</strong> umgangen werden. Eine Named Pipe ist ein mit einem <strong>eindeutigen Namen versehenes Objekt</strong> des Betriebssystems. Ein Prozess kann die Pipe erstellen, ein anderer kann eine Verbindung zu der Pipe herstellen. Im UNIX erh&auml;lt eine Named Pipe einen Pfadnamen, wie eine Datei.</p>\n\n<p><img alt=\"Pipe Schema\" src=\"http://www.kreissl.info/pics/images/bs_12.gif\" /></p>\n\n<h2>Sockets</h2>\n\n<p>Sockets sind im Grunde Pipe-Erweiterungen f&uuml;r Internet und andere Netzdienste. Dabei werden ein Socket A und ein Socket B zu einer bidirektionalen Pipe verbunden. Identifiziert wird ein Socket &uuml;ber Rechneradresse und Portnummer. So erm&ouml;glichen Sie eine Client-Server-Kommunikation:</p>\n\n<p>Ein Serverprozess erstellt einen Socket mit <em>create</em> und wartet dann auf Verbindungsw&uuml;nsche (<em>listen</em>).</p>\n\n<h2>M&ouml;glichkeiten zur Kommunikation und Synchronistation</h2>\n\n<h4>Kommunikation</h4>\n\n<ul>\n\t<li>Pipes (FIFO-Puffer - Senden (Schreiben) ist asynchron, Empfangen (Lesen) blockierend)</li>\n\t<li>Named Pipes</li>\n\t<li>Mailboxen (Tool zum Senden und Empfangen von Nachrichten)</li>\n\t<li>Send - Receive (BS Unterst&uuml;tzung f&uuml;r Mailboxen - synchron oder asynchron)</li>\n\t<li>Queues</li>\n\t<li>Sockets</li>\n\t<li>RPC</li>\n\t<li>Shared Memory</li>\n</ul>\n\n<h4>Synchronisation</h4>\n\n<ul>\n\t<li>Monitore</li>\n\t<li>Events</li>\n\t<li>Semaphore</li>\n\t<li>Barierren (oft zur Threadsynchronisation verwendet)</li>\n</ul>\n"
          ]
        },
        {
          "tag_line": "Kapitel 5 - Scheduling",
          "details": [
            "<h1 id=\"anchor6\">Kapitel 5 - Scheduling</h1>\n\n<p>Scheduling wird notwendig, wenn die Anzahl der gleichzeitig laufenden Prozesse die Anzahl der physikalischen Prozessoren &uuml;bersteigt. Die Verwaltung kann dezentral (Prozesse selbst) oder zentral erfolgen. Es gibt zwei grundlegende Modelle f&uuml;r zentrale Scheduling-Verwaltung:</p>\n\n<ul>\n\t<li>Deterministisches Modell - alle Informationen bekannt (Anzahl Prozesse/Betriebsmittel/Zeitdauer)</li>\n\t<li>Probabilistisches Modell - offen (Anzahl Prozesse nicht bekannt) oder geschlossen (Anzahl Prozesse bekannt, aber Bedienzeiten nicht)</li>\n</ul>\n\n<h2>Strategien zur Prozessorzuteilung</h2>\n\n<ul>\n\t<li><strong>Durchsatz</strong> (Anzahl bearbeiteter Prozesse pro Zeiteinheit maximieren)</li>\n\t<li><strong>Verweilzeit</strong> (Prozess soll so schnell wie m&ouml;glich abgearbeitet sein)</li>\n\t<li><strong>Wartezeit</strong> (Dauer im Zustand &quot;wartend&quot; minimieren)</li>\n\t<li><strong>Effizienz</strong> (Prozessorleistung maximal ausnutzen)</li>\n\t<li><strong>Antwortzeit</strong> (m&ouml;glichst kurze Reaktionszeiten f&uuml;r den Benutzer)</li>\n\t<li><strong>Fairness</strong> (gerechte Verteilung der Prozessorzeit)</li>\n</ul>\n\n<p>Es ist nicht m&ouml;glich CPU-Auslastung und Durchsatz zu maximieren und gleichzeitig Warte- und Antwortzeit zu minimieren. Deshalb m&uuml;ssen alle Scheduling Algorithmen Kompromisse eingehen.</p>\n\n<h2>Nach welchen Kriterium richtet sich das Scheduling Verfahren?</h2>\n\n<p>Dies h&auml;ngt in erster Linie vom Einsatzgebiet des Systems ab:</p>\n\n<ul>\n\t<li>Echzeitbetrieb</li>\n\t<li>Dialogbetrieb</li>\n\t<li>Stabel- bzw. Batchbetrieb</li>\n\t<li>Hintergrundbetrieb</li>\n</ul>\n\n<h2>Das deterministische Scheduling-Modell</h2>\n\n<p>Bei diesem Modell werden die Schedules <strong>vor der Ausf&uuml;hrung berechnet</strong>. Dies funktioniert nat&uuml;rlich nicht in interaktiven offenen Systemen, sondern nur in geschlossenen Systemen mit fester Prozessanahl und vordefinierter Betriebsmittelnutzung mit statischen Ablauf. In Dialogsystemen wird deshalb das offene probabilistische System verwendet, da hier Anzahl der Prozesse und Betriebsmittelnutzung dynamisch erfolgen...</p>\n\n<h2>Das probabilistisches Scheduling-Modell?</h2>\n\n<p>Die Entscheidung welcher Prozess den Prozessor bekommt, wird dynamisch w&auml;rend der Prozessabarbeitung gef&auml;llt. Hierbei gibt es einige wichtige Gr&ouml;&szlig;en, welche als stochastische Variablen zur Berechnung herangezogen werden k&ouml;nnen. Die Warteschlangentheorie ist wichtiges Mittel f&uuml;r Untersuchungen. (Alle Prozesse welche den Prozessor fordern werden in eine Warteschlange eingereiht).</p>\n\n<p><img alt=\"Prozess\" src=\"http://www.kreissl.info/pics/images/bs_02.gif\" /></p>\n\n<p>Die Abbildung entspricht einem Scheduling ohne Priorit&auml;ten und ohne Entzug.</p>\n\n<h3>Das Single-Server-Modell</h3>\n\n<p>Eine Warteschlange nimmt Prozesse in einem bestimmten Abstand (A) auf. Der Scheduler entnimmt nach einer gewissen Wartezeit (W) im Pool einen Prozess und f&uuml;hrt diesen in einer bestimmten Zeit (B) aus .</p>\n\n<p><img alt=\"Singe-Server\" src=\"http://www.kreissl.info/pics/images/bs_06.gif\" /></p>\n\n<table class=\"table\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>mittlere Verweildauer in Warteschlange</td>\n\t\t\t<td>W</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Zwischenankunftsabstand</td>\n\t\t\t<td>A</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Prozessorzeit der Teilprozesse</td>\n\t\t\t<td>B</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Anzahl von Prozessen in Warteschlange</td>\n\t\t\t<td>Nq (N=Nq+p)</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Verkehrswert</td>\n\t\t\t<td>p=B/A <em>(Poisson-Prozesse)</em></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Verweildauer im System</td>\n\t\t\t<td>V=A*N (Littles Theroem)</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>Weiter Gr&ouml;&szlig;en wie durchschnittliche Warteschlangell&auml;nge oder die Wahrscheinlichkeit das sich n Prozesse im System befinden, lassen sich mit Poissen-Verteilungen genauso wie die oben erw&auml;hnte mittlere Verweildauer ermitteln.</p>\n\n<h3>Wahrscheinlichkeiten f&uuml;r Prozessgr&ouml;&szlig;en</h3>\n\n<p>Durch Poisson-Prozesse (Markow) k&ouml;nnen Erwartungswerte, Mittelwerte und Varianzen f&uuml;r Zwischenankunftsabst&auml;nde, Bedienw&uuml;nsche und Auslastung berechnet werden. Die Betrachtungen beziehen sich hier auf den station&auml;ren Fall (t-&gt;unendlich, also FiFo).</p>\n\n<h3>First Come First Serve - FCFS</h3>\n\n<p>Ankommende Prozesse werden in eine FIFO Liste eingereiht und sequentiell abgearbeitet. Somit ist dieses Modell nicht f&uuml;r Timesharing geeignet, da es eher eine Batchverarbeitung ist.</p>\n\n<p>Kommt ein langer Prozess zuerst, m&uuml;ssen andere winzige Prozesse alle auf die Beendigung des gro&szlig;en Prozesses warten! Unfair. Bessere Implementationen k&ouml;nnen deshalb das Token entziehen.</p>\n\n<p><strong>Durchschnittliche Wartezeit W</strong> = (Wartezeit(P1) + Wartezeit(P2) + ... + Wartezeit(Pn)) / n</p>\n\n<p>Ist P1 ein vielfach gr&ouml;&szlig;erer Prozess als die restlichen, so m&uuml;ssen alle folgenden Prozesse auf die Beendigung von P1 warten. Dies l&auml;&szlig;t die durchschnittliche Wartezeit extrem steigen.</p>\n\n<p><strong>Bsp.:</strong></p>\n\n<pre>\nt(P1) = 24 t(P2) = 3 t(P3) = 3\n</pre>\n\n<p>Bei einer Abarbeitungsfolge von <strong>P1 -&gt; P2 -&gt; P3</strong> w&auml;re W = <em>17</em>. Bei einer Abarbeitungsfolge von <strong>P2 -&gt; P3 -&gt; P1</strong> nur <em>3</em>!</p>\n\n<h2>Was ist Priorit&auml;ts-Scheduling?</h2>\n\n<p>Hier wird jedem Prozess eine Priorit&auml;t zugewiesen. Ausgew&auml;hlt wird vom Scheduler der ausf&uuml;hrbereite Prozess mit der h&ouml;chsten Priorit&auml;t. Die Priorit&auml;ten k&ouml;nnen statisch definiert und dynamisch zugewiesen werden.</p>\n\n<p>Bsp: FEP (Fixed ExternalPriorities)</p>\n\n<p><img alt=\"Prioritätsscheduling\" src=\"http://www.kreissl.info/pics/images/bs_07.gif\" /></p>\n\n<h3>Das Grundproblem von Schedulern mit Priorit&auml;ten</h3>\n\n<p>Hauptproblem beim Arbeiten mit Priorit&auml;ten ist das <strong>Aushungern</strong> von Prozessen, welche m&ouml;glicherweise nie aktiv werden k&ouml;nnen, da es immer Prozesse h&ouml;herer Priorit&auml;t gibt.</p>\n\n<p>L&ouml;sung hierf&uuml;r ist das <strong>Aging</strong>. (dynamische Anhebung der Priorit&auml;t der &auml;lter werdenden Prozesse)</p>\n\n<p>Ein anderes Problem ist die Priorit&auml;tenumkehr. Ein hochpriorisierter Prozess wartet auf ein Betriebsmittel, welches ein niedrigpriorisierter Prozess reserviert hat.</p>\n\n<h3>Shortest Job First (dynamische Priorit&auml;t ohne Entzug)</h3>\n\n<p>Es wird der k&uuml;rzeste Job zur Verarbeitung ausgew&auml;hlt. Dabei werden die Durchlaufl&auml;ngen der einzelnen Prozesse protokolliert. Nach jedem Prozesswechsel wird die &quot;bereit&quot;-Warteschlange anhand der Wartezeiten absteigend neu sortiert.</p>\n\n<p>Deshalb optimiert Shortest Job First die mittlere Wartezeit. Problem ist hier auch das Aushungern von Prozessen, was auch durch Aging (Altern) verhindert werden kann.</p>\n\n<p><strong>SJF ist ohne Entzug</strong> (nonpreemtiv). Eine Variante mit Enzug ist <strong>SRTF</strong>. Dabei wird der Prozessor entzogen, falls ein Prozess in der Warteschlange ist, der k&uuml;rzer als der verbliebene Rest des aktiven Prozesses.</p>\n\n<h3>Wie arbeiten Shortest Remaining Time First und Shortest Elapsed Time (dynamisch mit Entzug)?</h3>\n\n<p>Diese beiden Verfahren sind mit Priorit&auml;ten und mit Entzug. Sie sind daher relativ aufwendig, da ein st&auml;ndiger Abgleich der Priorit&auml;tsdaten erfolgen muss. Bei SET wird Prozessen, welche schon viel Prozessorzeit zugesprochen bekamen, die die Prozessorzeit entzogen.</p>\n\n<h3>Highest Response Ratio Next - HRN</h3>\n\n<p>Umso l&auml;nger ein Prozess wartet, umso h&ouml;her steigt er in seiner Priorit&auml;t. So wird Aushungern verhindert.</p>\n\n<h2>Round-Robin Scheduling (ohne Priorit&auml;ten)</h2>\n\n<p>Das RR ist die verbreitetste Strategie, da sie fair ist und sich auch einfach implementieren l&auml;sst. Das Prinzip ist einfach. Jeder Prozess erh&auml;lt f&uuml;r eine konstante Zeit t (<strong>Quantum</strong>) die Prozessorzeit. Nach Ablauf des Zeitquantums wird der n&auml;chste Prozess aus der Warteschlange entnommen und bearbeitet. Der zuvor bearbeitete Prozess wird wieder am Anfang der Liste eingef&uuml;gt.</p>\n\n<p>Hauptproblem ist eine sinnvolle Zeitspanne f&uuml;r das Quantum zu finden. Da bei jedem Kontextwechsel Register umgeladen m&uuml;ssen, muss ein gewisser Zeitraum f&uuml;r Verwaltungsarbeiten eingerechnet werden. Dauert das Umladen der Register 5 ms macht ein Quantum von 10 ms wenig sinn, da 50% Prozessorzeit verschwendet werden w&uuml;rde.</p>\n\n<p>W&auml;hlt man das Quantum aber zu gro&szlig; (z.B. 500 ms) so ist im Mehrbenutzerbetrieb nur bedingte Interaktivit&auml;t m&ouml;glich. (RR n&auml;hert sich somit FCFS an) Sinnvoll erwiesen sich Quanten von 100 ms.</p>\n\n<div class=\"well\">\n<h1 id=\"anchor7\">Scheduling Algorithmen</h1>\n\n<ul>\n\t<li>Scheduling mit oder ohne Entzug</li>\n\t<li>Scheduling mit oder ohne Priorit&auml;ten</li>\n</ul>\n</div>\n\n<h2>Zweistufiges Scheduling</h2>\n\n<p>Angenommen der Arbeitsspeicher reicht nicht aus, um alle Prozesse abzubilden, m&uuml;ssen diese auf einen Terti&auml;rspeicher ausgelagert werden. Da das Auslagern bzw. Einlagern eines Prozesses sehr viel Zeit in Anspruch nimmt, werden zwei Stufen benutzt, um das Scheduling zu realisieren. Die erste Stufe arbeitet nur im Hauptspeicher, w&auml;hrend die zweite Stufe f&uuml;r das Ein- oder Auslagern von Prozessen verantwortlich ist. Kriterien sind hier dieselben wie oben schon erw&auml;hnt.</p>\n\n<ol>\n\t<li>Wie lange ist ein Prozess Aus- oder Eingelagert?</li>\n\t<li>Wieviel Prozessorzeit hat ein Prozess in Anspruch genommen?</li>\n\t<li>Wie gro&szlig; ist der Prozess im Speicher?</li>\n\t<li>Welche Priorit&auml;t hat der Prozess?</li>\n</ol>\n\n<h3>Was steht im Widerspruch zu hohem Durchsatz und guter Auslastung?</h3>\n\n<p>Im Widerspruch dazu stehen <strong>gutes Antwortzeitverhalten</strong> im Dialog- und Stapelbetrieb. Denn ein hoher Durchsatz und eine gute Auslastung bedingen viele Prozesse im Rechner, so da&szlig; jeder Proze&szlig; nur relativ selten aktiv werden kann, d.h. das Antwortzeitverhalten schlechter wird. Auch die Zuteilungsfairness wird dadurch zunehmend schlechter bzw. unfairer.</p>\n"
          ]
        },
        {
          "tag_line": "Kapitel 6 - Speichermanagment",
          "details": [
            "<h1 id=\"anchor8\">Kapitel 6 - Speichermanagment</h1>\n\n<h2>&Uuml;bersicht zur Freispeicherverwaltung</h2>\n\n<p>Es gibt drei grundlegende Ans&auml;tze zur Verwaltung des freien Speichers. Diese werden im folgendem Text erl&auml;utert.</p>\n\n<h3>Bitmaps?</h3>\n\n<p>Bitmaps teilen den Hauptspeicher in gleich gro&szlig;e Einheiten und assoziieren zu jedem Eintrag ein Bit in der Bitmap. Ist der Eintrag 0, so ist der Speicherbereich noch frei. Bei Nutzung eines Speicherbereiches wird in dem assoziierenden Bitmapplatz eine eins platziert. Umso kleiner die zusammengefassten Einheiten werden, umso gr&ouml;&szlig;er wird die Bitmap. Der gr&ouml;&szlig;te Nachteil von Bitmaps ist das Suchen von freien Speicherbereichen, was eine aufwendige Operation darstellt.</p>\n\n<h3>Suche in Freispeicherlisten</h3>\n\n<p>Bei dieser Variante werden Listen f&uuml;r L&ouml;cher und belegte Segmente durch Prozesse gef&uuml;hrt.</p>\n\n<table class=\"table\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<th>First Fit</th>\n\t\t\t<td>Der erste freie Block der gro&szlig; genug ist wird ausgew&auml;hlt, egal wieviel Speicher dadurch verschwendet wird (interne Fragmentierung).</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>Next Fit</th>\n\t\t\t<td>Suche beginnt nicht vom Anfang der Liste, sondern vom zuletzt verwendeten Listenelement.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>Best Fit</th>\n\t\t\t<td>Es wird der optimale Platz in Bezug auf Speicherausnutzung gesucht. Dadurch das immer Bl&ouml;cke mit der geringsten Speicherplatzverschwendung gesucht werden, werden die freien Bl&ouml;cke irgendwann zu klein.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>Quick Fit</th>\n\t\t\t<td>Es gibt mehrere Listen f&uuml;r verschiedene Blockgr&ouml;&szlig;en.</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<h3>Wie funktionieren Buddy Listen?</h3>\n\n<p>Listen haben den Nachteil, da&szlig; benachbarte freie oder belegte Speicherbereiche sich nicht zusammenlegen lassen. Abhilfe schafft hier das Buddy-System. Die Idee beruht darauf, dass mehrere Listen gef&uuml;hrt werden, welche aber nur Blockgr&ouml;&szlig;en von 2^n zulassen. Zweierpotenz deshalb, weil ein Rechner Bin&auml;rzahlen zur Adressierung benutzt.</p>\n\n<h4>Beispiel</h4>\n\n<p>Die maximale Blockgr&ouml;&szlig;e betr&auml;gt 64 Mbytes und die minimale Blockgr&ouml;&szlig;e 4 Kbyte. D.h. 226 - 212, also m&uuml;ssen Listen f&uuml;r N=12 bis N=26 verwaltet werden. Somit w&auml;ren f&uuml;r diese Blockgr&ouml;&szlig;enwahl mit dem Buddysystem 15 Listen notwendig.</p>\n\n<p>Anfragen werden nun immer zur n&auml;chsth&ouml;hren Zweierpotenz aufgerundet. D.h. wird eine Anfrage an einen 75 Kbyte Block gestellt, muss ein 128 Kbyte gro&szlig;er Slot verwendet werden. Anfangs gibt es eine Liste f&uuml;r in unserem Beispiel 64 Mbyte Speicher. Der Buddymanager w&uuml;rde die Liste rekursiv so oft teilen, bis ein 128 Kbyte gro&szlig;er Block in eine der anderen Listen frei ist.</p>\n\n<p>Falls die angeforderten Blockgr&ouml;&szlig;en aussschliesslich Zweierpotenzen w&auml;ren, w&uuml;rde es zu keiner Internen Fragmentierung kommen k&ouml;nnen. Da dies aber nie der Fall ist, wird viel Speicher durch interne Fragmentierung verschwendet.</p>\n\n<h3>Zusammenfassung Freispeicherverwaltung</h3>\n\n<p>Bitmaps unterteilen den Speicher in <strong>Allokationseinheiten</strong>. F&uuml;r jede Einheit gibt es ein Bit im Bitmap. Verkn&uuml;pfte Listen bieten Suchm&ouml;glichkeiten mit First Fit, Best Fit oder Quick Fit. Quick Fit setzt mehrere Listen bestimmter Lochg&ouml;&szlig;en voraus. Das Buddy System verwaltet n Listen von 1,2, 4, 8 bis zur Gr&ouml;&szlig;e des Speichers. D.h. ein 1 MByte gro&szlig;er Speicher ben&ouml;tigt 21 Listen und hat Initial nur einen einzigen Eintrag in der letzten Liste, der das 1 MByte gro&szlig;e Loch beschreibt. Alle anderen Listen sind leer. Speicher wird nun immer in Abh&auml;ngigkeit von einer Potenz von 2 vergeben, der gerade noch gro&szlig; genug ist, um die Daten aufzunehmen. Dies wird einfach implementiert, in dem der Gro&szlig;e block einfach solange geteilt wird, bis der Datenblock in den Freispeicherblock passt. Das Buddysystem ist zwar schnell, aber impliziert eine <strong>starke interne Fragmentation</strong>, da ja immer auf Zweierpotenzen gerundet werden muss.</p>\n\n<div class=\"well\">\n<h1 id=\"anchor9\">Methoden zur Freispeicherverwaltung</h1>\n\n<ul>\n\t<li>einfache verkettete Listen mit Best-,Next- oder First-Fit Suche</li>\n\t<li>Bitmap-System welches Speicher in gleichgro&szlig;e Einheiten teilt</li>\n\t<li>Buddy-Listen nach dem bin&auml;ren System</li>\n</ul>\n</div>\n\n<h2>Segmentierung (mehrdimensionale Adressr&auml;ume)</h2>\n\n<p>Eindimensionale Adressierung hat den Nachteil, da&szlig; Programme mit verschieden dynamisch wachsenden Programmteilen nur schlecht realisierbar sind. Code, Stack und Daten w&uuml;rden hintereinander im Speicher liegen. Ben&ouml;tigt ein Programm aber extrem viele Variablen, w&uuml;rde der Compiler mit der Fehlermeldung abbrechen, da&szlig; es nicht genug Speicher g&auml;be. Um nun mehrere Stack, Daten und Codebereiche getrennt voneinander adressieren zu k&ouml;nnen, ohne da&szlig; die verschiedenen Teile in Konflikt geraten, wurden die Segmente eingef&uuml;hrt.</p>\n\n<p>Segmentierte Speicherung wird oft als das Prinzip der <strong>gestreuten Speicherung</strong> benannt. Gestreut deshalb, weil die einzelnen Seiten nicht nacheinander im Speicher liegen m&uuml;ssen, sondern dort eingef&uuml;gt werden, wo Platz ist. Anders als z.B. bei Kontinuierlicher Allokation, wo viel Speicher durch externe Fragmentierung verlorengeht, tritt bei Segmentation dieses Problem nicht auf. Daf&uuml;r aber interne Fragmentierung...</p>\n\n<h3>Wie werden Segmenten adressiert?</h3>\n\n<p>Um mit Segmenten arbeiten zu k&ouml;nnen, sind zweiteilige Adressen notwendig, bestehend aus <strong>Segment</strong> und <strong>Offset</strong>. Die Segmentation muss also dem Programmierer bewusst sein, da ein Segment nur eine logische Einheit darstellt. Besonders einfach gestaltet sich das &uuml;bersetzen von Prozeduren. Angenommen jede Prozedur hat ihr eigenes Codesegment, ben&ouml;tigt man nur die Segmentnummer, um die Funktion aufzurufen, da der Eintrittspunkt bei der logischen Adresse 0 dieses Segmentes ist.</p>\n\n<p>Wird nun eine Prozedur neu kompiliert, m&uuml;ssen die restlichen Prozeduren nicht neu kompiliert werden, da der Eintrittspunkt immer noch der gleiche ist. Und zwar 0. Die Segmentnummern werden eh dynamisch vergeben.</p>\n\n<h3>Gemeinsam genutzte Segmente</h3>\n\n<p>Durch Segmentierung wird es sehr einfach, verschiedene Codesegmente gemeinsam zu nutzen. So genannte <strong>Shared Libraries</strong> sind in jedem modernen Betriebssystem notwendig, denn sie stellen f&uuml;r viele Programme Frameworks oder API&#39;s bereit, deren Funktionalit&auml;t sich jedes Programm bedienen kann, soweit es die daf&uuml;r notwendigen Zugriffsrechte hat. Ob ein Segment ausf&uuml;hrbar ist oder nicht, wird &uuml;ber die Schutzart des Segmentes definiert.</p>\n\n<h2>Das Prinzip des virtuellen Speichers durch Paging</h2>\n\n<p>Um mehr Speicher bereitzustellen werden statt echter physikalischer Adressen virtuelle benutzt, welche durch die MMU in reale Adressen bei Benutzung umgewandelt werden. Durch das Paging k&ouml;nnen Seiten aus- oder eingelagert (nach einem Page Fault) werden. Eine <strong>Page Table</strong> referenziert virtuelle auf physikalische Adressen. Swapping ist in Reinform sehr langsam. Sinnvollerweise werden Segmente in Seiten geteilt, welche durch Paging ein oder ausgelagert werden. (Protected Mode) Die MMU kann, muss aber nicht auf der CPU liegen. Jede Seitentabelleneintrag hat ein Present/Absent Bit, welches Auskunft dar&uuml;ber gibt, ob eine Seite sich im Speicher befindet oder nicht. Des Weiteren vermerkt eine Art <strong>Dirty Bit</strong>, ob eine Seite im Speicher ge&auml;ndert wurde, um entscheiden zu k&ouml;nnen, ob ein zur&uuml;ck schreiben notwendig wird.</p>\n\n<p>Die momentan verwendeten Seiten eines Programmablaufes wird <strong>Working Set</strong> genannt. Demand Paging bedeutet, dass Seiten erst dann abgefordert werden, wenn sie ben&ouml;tigt werden.</p>\n\n<p>Eine virtuelle Adresse besteht aus <strong>Seitenummer und Offset</strong>. Bei einem Contextswitch wird nach der entsprechenden Seitennummer in der Page Table gesucht und die zugeh&ouml;rige physikalische Adresse errechnet. Es wird meist ein n-stufiges Paging angewandt, um die Suche mach den Seiten zu beschleunigen (Unix) . Bei i386 gibt es ein so genanntes <strong>Seitenverzeichnis</strong> (DIR) mit 1024 Zeilen, welche wiederum je auf eine Seitentabelle verweisen. Somit enth&auml;lt eine lineare Adresse beim Intel DIR,PAGE und OFFSET Teil. (mehrstufiges Paging)</p>\n\n<p>Beim Swapping werden statt Seiten ganze Prozesse ausgelagert.</p>\n\n<div class=\"well\">\n<h1 id=\"anchor10\">Virtual Memory und Caching</h1>\n\n<ul>\n\t<li>Demand Paging und Caching basieren auf den gleichen Prinzip</li>\n\t<li>Sie arbeiten nur auf verschiedenen Ebenen</li>\n\t<li>Cache-Misses werden von der Hardware geregelt, Page Faults vom Betriebssystem</li>\n</ul>\n</div>\n\n<h3>Der TLB - Translation Lookaside Buffer</h3>\n\n<p>Um die Zeit der Adressumrechnung zu vermindern, wird in der MMU ein <strong>Assoziativspeicher</strong> mit meist nicht mehr als 32 Eintr&auml;gen verwaltet. Die Eintr&auml;ge enthalten die zuletzt verwendeten virtuellen Seiten mit der dazugeh&ouml;rigen Seitenrahmennummer im Speicher. Gleichzeitig wird dort vermerkt, welche Art von Lese/Schreibzugriff erlaubt ist und ob die Seite ver&auml;ndert wurde. Kommt eine Anforderung auf eine nicht im TLB vorhandene Seite, wird ein Eintrag aus dem TLB mit der neu dekodierten Adresse &uuml;berschrieben, so da&szlig; bei der n&auml;chsten Anfrage die Adressumrechnung entfallen kann.</p>\n\n<div class=\"well\">\n<h1 id=\"anchor11\">Translation Lookaside Buffer</h1>\n\n<ul>\n\t<li>TLB&#39;s werden verwendet, wenn Seitentabelle auf Grund eines zu gro&szlig;en Adressraumes nicht m&ouml;glich ist</li>\n\t<li>TLB bildet zuletzt genutzten (64 bei UltraSparc) virtuellen Seitennummern auf physikalische Seitenrahmen ab</li>\n\t<li>h&auml;ufig benutzte Seiten werden in einem Cache (Translation Storage Buffer) verwaltet</li>\n\t<li>Dieser Cache bildet Seiten direkt ab und wird bei TLB-Miss zuerst untersucht</li>\n\t<li>befindet sich die Seite nicht im Cache, muss sie in der Translation Table gesucht werden</li>\n</ul>\n</div>\n\n<h3>Invertierte Page Tables?</h3>\n\n<p>Eine Seitentabelle enth&auml;lt hier einen Eintrag f&uuml;r jeden Seitenrahmen des physikalischen Speichers. Der Eintrag enth&auml;lt Informationen &uuml;ber den besitzenden Prozess und die virtuelle Seite. So entspricht die Anzahl der Eintr&auml;ge der Anzahl der Seitenrahmen im Speicher. Die Tabelle verwaltet nur, welche Seite, von welchem Prozess in den Seitenrahmen des Arbeitsspeicher geladen wurden.</p>\n\n<h3>Paging D&auml;mons</h3>\n\n<p>Paging arbeitet nur effizient, wenn jederzeit gen&uuml;gend Seitenrahmen im Speicher frei sind, um diese bei einem Page Fault neuen Seiten belegen zu k&ouml;nnen. Doch wie wird sichergestellt, da&szlig; der Speicher komplett ausgef&uuml;llt werden muss und somit bei einem Page Fault erst eine Seite ausgelagert werden muss? Viele Betriebssysteme haben daf&uuml;r einen speziellen Dienst vorgesehen. Der Paging D&auml;mon wird in zyklischen Abst&auml;nden aktiviert. Dieser schaut nun nach ob gen&uuml;gend <strong>Frames</strong> im Speicher zur Verf&uuml;gung stehen. Ist dies nicht der Fall, werden so viele Seiten wie notwendig mit einem der <strong>Seitenersetzungsalgorithmen</strong> aus dem Speicher entfernt und auf die Platte zur&uuml;ckgeschrieben.</p>\n\n<h3>Das Zusammenspiel von Segmentierung und Paging</h3>\n\n<p>Um beide Vorteile (Mehrdimensionalit&auml;t und virtuellen Speicher) nutzen zu k&ouml;nnen, werden in fast allen modernen Betriebssystemen beide Techniken angewandt. Dabei wird das Paging <strong>transparent</strong>, also f&uuml;r den Programmierer nicht sichtbar, hinter die Segmentierung geschalten. Auf dieser Basis bauen sich auch die Adressen dieser Maschinen auf. Es gibt verschiedene Implementationen von Segmentierung und Paging. Aber letztendlich haben sie eines gemeinsam. Die logische Adresse besteht aus</p>\n\n<ol>\n\t<li>die Segmentnummer zur Auswahl des richtigen Segmentdeskriptors und</li>\n\t<li>den Offset zur Adressierung innerhalb des Segmentes.</li>\n</ol>\n\n<p>Die Implementierungen unterscheiden sich nun in der Verwaltung der <strong>Deskriptoren</strong> und der Art und Weise wie die aus Segment + Offset entstandene virtuelle Adresse &uuml;ber die Page Table auf den realen Speicher projiziert bzw. umgerechnet wird.</p>\n\n<p><img alt=\"Adressumsetzung\" src=\"http://www.kreissl.info/pics/images/bs_11.gif\" /></p>\n\n<h3>Was passiert wenn Sie ein Programm starten?</h3>\n\n<ul>\n\t<li>Der Virtual Memory Manager verwaltet den virtuellen Speicher.</li>\n\t<li>Bei Programmstart richtet das BS f&uuml;r den Prozess eine Seitentabelle ein.</li>\n\t<li>Eine definierte Anzahl Rahmen werden dem Prozess als Arbeitsmenge zugeteilt.</li>\n\t<li>Seiten aus dem Read-Only Bereich der EXE werden direkt geladen und brauchen nicht zur&uuml;ckgeschrieben werden.</li>\n\t<li>Read-Write Bereiche werden zuerst direkt aus der EXE geladen und im Speicher hinterlegt.</li>\n\t<li>Bei einem Schreib-Bezug wird sie als private Kopie in die Auslagerungsdatei geschrieben. So k&ouml;nnen mehrere Prozesse die selbe EXE im benutzen. (Copy On Write)</li>\n</ul>\n\n<p>Der VMM von Windows verwaltet mehrere Listen f&uuml;r:</p>\n\n<ul>\n\t<li>freie Seiten, welche mit 0 initialisiert wurden (zerofilled)</li>\n\t<li>uninitialisierte freie Seiten, die noch alten Inhalt haben</li>\n\t<li>wartende Seiten, die Prozess zugewiesen waren und nicht modifiziert wurden(standby pages)</li>\n\t<li>wartende, aber modifizierte Seiten (modified pages)</li>\n\t<li>belegte Seiten, welchen einem Prozess zugewiesen / referenziert sind (valid pages)</li>\n\t<li>unbenutzbare Seiten, durch z.B. Hardwarefehler (unusable pages)</li>\n</ul>\n\n<h3>Adressumrechnung der Multics</h3>\n\n<ol>\n\t<li>mit Segmentnummer wird Segmentdeskriptor festgestellt</li>\n\t<li>es wird gepr&uuml;ft, ob die Pagetable des Segmentes im Speicher ist</li>\n\t<li>ist sie nicht im Speicher tritt ein Segmentfehler auf und es erfolgt ein Trap</li>\n\t<li>ist sie im Speicher wird der Pagetableeintrag f&uuml;r die angefragte Seite &uuml;berpr&uuml;ft</li>\n\t<li>falls Seite nicht im Speicher entsteht Page Fault</li>\n\t<li>ist Seite im Speicher wird die physikalische Adresse des Seitenursprungs aus dem Pagetableeintrag entnommen</li>\n\t<li>Der Offset wird zur gewonnenen Adresse hinzuaddiert und die physikalische Adresse ist berechnet.</li>\n</ol>\n\n<p><em>(nach Tanenbaum)</em></p>\n\n<p>Meist wird ein Assoziativspeicher verwendet, um die letzten paar Umrechnungen ohne Verz&ouml;gerung ausgeben zu k&ouml;nnen. Ein TLB enth&auml;lt zwei Vergleichsfelder f&uuml;r Segmentnummer und korrespondierende virtuelle Seite und einige zus&auml;tzliche Attribute, wie Schutzattribute, Age oder Referenziert-Bits.</p>\n\n<h3>Adressumrechnung beim Pentium 2</h3>\n\n<p>Intel Prozessoren besitzen ab dem i386 eine <strong>LDT</strong> (local descriptor table) und eine <strong>GDT</strong> (global descriptor table). Die Local Descriptor Tables enthalten die programmeigenen Segmente, wie Stack-, Code- und Datensegment der verschiedenen Benutzerprogramme. Die Global Descriptor Table enth&auml;lt dagegen die Systemsegmente samt deren des Betriebssystems , welche erst geladen werden muss. Wird ein Segmentselektor in ein Segmentregister geladen, wird der entsprechende Bezeichner aus der LDT oder GDT geholt und in MMU Registern gespeichert. Ob L- oder GDT kann dem Selektor entnommen werden, da dort ein Bit f&uuml;r diese Auswahl reserviert ist. Der Deskriptor besteht nun aus der Basisadresse des Segmentes, der Gr&ouml;&szlig;e des Segmentes und verschiedenen Privilegbits. Es wird nun eine virtuelle Adresse &uuml;ber Segmenteselektor + Offset gebildet. Bei deaktiviertem Paging ist nun diese Adresse die lineare physikalische. Ist aber Paging aktiv wird die Adresse als virtuell interpretiert und &uuml;ber die Seitentabelle auf den realen Speicher abgebildet.</p>\n\n<h3>Sicherheit und Segmentverwaltung</h3>\n\n<p>Jeder Deskriptor in einer Deskriptortabelle ist mehrere Byte breit und enth&auml;lt Beschreibungsinformationen f&uuml;r ein Segment aus dem linearen Adressraum. Neben der Segment-Basisadresse (BASE) enth&auml;lt er das LIMIT, das die Segmentgr&ouml;&szlig;e angibt. Dabei wird durch ein Granularit&auml;tsbit festgelegt, ob das LIMIT direkt als L&auml;nge interpretiert wird (Segmentgr&ouml;&szlig;en bis 1 MB) oder mit dem Wert 4096 multipliziert wird und damit Segmentgr&ouml;&szlig;en bis 4 GB unterst&uuml;tzt. Der Descriptor-Privilege-Level gibt an, mit welcher Berechtigungsstufe der Zugriff auf das Segment erfolgen muss:</p>\n\n<ul>\n\t<li>Level 0: Betriebssystem</li>\n\t<li>Level 1, 2: Betriebssystemdienste, Treiber, Systemsoftware</li>\n\t<li>Level 3: Anwendungssoftware</li>\n</ul>\n\n<p>Weitere Informationen im Deskriptor zeigen an, ob auf das Segment lesend, schreibend oder ausf&uuml;hrend zugegriffen werden darf und ob es sich um ein System- oder Anwendungssegment handelt. Ein Present-Bit gibt an, ob das Segment sich derzeit &uuml;berhaupt im Hauptspeicher befindet.</p>\n\n<h2>Zusammenfassung von Freispeicherverwaltung, Segmentierung und Paging</h2>\n\n<p>Segmentierung wird genutzt, um statt einen linearen Adressraum (wie beim virtuellen Speicher), mehrere virtuelle Adressr&auml;ume nutzen zu k&ouml;nnen. Segmentierung wurde entworfen, um dynamisch wachsende Tabellen besser Handhaben zu k&ouml;nnen. Somit ist schafft Segmentierung einen mehrdimensionalen Adressraum.</p>\n\n<p>Unter Swapping versteht man das komplette Ein- und Auslagern von Prozessen. Das Swapping des segmentierten Speichers ist vergleichbar mit dem Demand-Paging des virtuellen Speichers. Nur das Segmente unterschiedlich gro&szlig; sein k&ouml;nnen. Aus diesem Grund tritt hier das Problem der externen Fragmentierung auf.</p>\n\n<p>Um die externe Fragmentierung zu minimieren, werden die L&ouml;cher als verkettete Liste im Speicher gehalten. Falls ein Segment geladen werden soll, sucht z.B. Best Fit, dass n&auml;chst gr&ouml;&szlig;ere Loch unter allen, wo das Segment passen w&uuml;rde. First Fit nimmt das N&auml;chste Loch, welches f&uuml;r das Segment gro&szlig; genug w&auml;re.</p>\n\n<p>Neben dem Swapping kann auch Paging zum Auslagern von Segmenten benutzt werden. Hierbei sind die auszulagernden Bl&ouml;cke gleich gro&szlig;, da die Segmente in gleich gro&szlig;e Seiten eingeteilt werden. Zur Auslagerung wird das bekannte Demand Paging benutzt. Meist wird eine Kombination aus Segmentierung und Paging angewandt, bei der die Adresse aus zwei Teilen besteht. (Segmentnummer und Offset innerhalb des Segments). Segmente werden also in Seiten unterteilt. Zur Leistungsverbesserung werden die zuletzt verwendeten Segment-Seiten- Kombinationen in einem Assoziativspeicher (TLB) gehalten. Im Gegensatz zum Paging ist es beim reinen Swapping nicht m&ouml;glich, Prozesse auszuf&uuml;hren, die alleine schon nicht in den Hauptspeicher passen.</p>\n\n<p>Bitmaps unterteilen den Speicher in Allokationseinheiten. F&uuml;r jede Einheit gibt es ein Bit im Bitmap. Verkn&uuml;pfte Listen bieten Suchm&ouml;glichkeiten mit First Fit, Best Fit oder Quick Fit. Quick Fit setzt mehrere Listen bestimmter Lochg&ouml;&szlig;en voraus. Das Buddy System verwaltet n Listen von 1,2, 4, 8 bis zur Gr&ouml;&szlig;e des Speichers. D.h. ein 1 MByte gro&szlig;er Speicher ben&ouml;tigt 21 Listen und hat Initial nur einen einzigen Eintrag in der letzten Liste, der das 1 MByte gro&szlig;e Loch beschreibt. Alle anderen Listen sind leer. Speicher wird nun immer in Abh&auml;ngigkeit von einer Potenz von 2 vergeben, der gerade noch gro&szlig; genug ist, um die Daten aufzunehmen. Dies wird einfach implementiert, in dem der Gro&szlig;e block einfach solange geteilt wird, bis der Datenblock in den Freispeicherblock passt. Das Buddysystem ist zwar schnell, aber impliziert eine starke interne Fragmentation, da ja immer auf Zweierpotenzen gerundet werden muss.</p>\n"
          ]
        },
        {
          "tag_line": "Kapitel 7 - Seitenersetzung",
          "details": [
            "<h1 id=\"anchor12\">Kapitel 7 - Seitenersetzung</h1>\n\n<h2>Seitenersetzungsalgorithmen</h2>\n\n<p>Falls eine Seite angefordert wird, aber kein Platz f&uuml;r deren Einlagerung im Speicher mehr vorhanden ist, so muss eine andere Seite entfernt werden. Aber welche? Es gibt nun verschiedene Ans&auml;tze f&uuml;r dieses Problem...</p>\n\n<h3>Welcher w&auml;re der beste Algorithmus zur Seitenersetzung?</h3>\n\n<p>Dieser ist theoretisch gegeben, aber <strong>nicht umsetzbar</strong>. Die Seite die am <strong>sp&auml;testen erst wieder verwendet</strong> wird, wird ausgelagert. Da in einem Echtzeitsystem nie vorhersagbar ist, welcher Prozess wann wie lange aktiv sein wird, ist diese Strategie nicht umsetzbar... In einem deterministischen Modell w&auml;re er aber durchaus denkbar, da dort jeder Schritt eindeutig definiert ist.</p>\n\n<h3>Seitenersetzung mit Not-Recently-Used - NRU</h3>\n\n<p>Jede Seite bekommt zwei Statusbits zugeordnet. R wird gesetzt, wenn die Seite lesend oder schreibend referenziert wurde. M wird gesetzt, falls die Seite ver&auml;ndert wird. Diese beiden Bits sind in jedem Seitentabelleneintrag enthalten und m&uuml;ssen bei jeder Seitenreferenzierung aktualisiert werden.</p>\n\n<p>Die zwei Bit stellen vier Klassen dar, welche genutzt werden um einen Paging-Algorithmus zu realisieren.</p>\n\n<ol>\n\t<li>nicht referenzierte und nicht modifizierte Seite</li>\n\t<li>nicht referenzierte und modifizierte Seite</li>\n\t<li>referenzierte und nicht modifizierte Seite</li>\n\t<li>referenzierte und modifizierte Seite</li>\n</ol>\n\n<p>LRU w&auml;hlt zuf&auml;llig eine Seite aus der kleinstnummerierten Klasse zum Entfernen aus.</p>\n\n<h3>Seitenersetzung mit Fifo - First In First Out</h3>\n\n<p>Es wird eine Liste gef&uuml;hrt, welche alle Seiten enth&auml;lt. Neue Seiten werden an das Ende der Liste angef&uuml;gt. So ist die Liste nach dem <strong>Alter der Seiten sortiert</strong>. Der FiFo Paging-Algorithmus macht nichts weiter, als bei einem Seitenfehler die &auml;lteste Seite zu entfernen, also die Seite, die am Anfang der Liste steht.</p>\n\n<p>Das Problem an Fifo ist, da&szlig; auch extrem h&auml;ufig referenzierte Seiten ausgelagert werden. Um dies zu umgehen wird das oben schon erw&auml;hnte R (Referenziert) Bit verwendet, um jeder Seite eine zweite Chance zu geben, falls das R-Bit nicht null ist.</p>\n\n<h3>Seitenersetzung mit Second Chance</h3>\n\n<p>Arbeitet wie Fifo, nur wird beim Entfernen des Kopfes nachgeschaut, ob das R Bit null ist. Wurde die Seite nie referenziert, so wird sie entfernt, wie f&uuml;r FiFo &uuml;blich. Wurde sie aber referenziert, wird sie zum Ende der Liste verschoben, als wurde sie neu geladen. Das R-Bit wird dabei auf Null gesetzt. So wird gew&auml;hrleistet, das h&auml;ufig benutzte Seiten weniger oft als nicht referenzierte Seiten ausgelagert werden. Second Chance ist ein durchaus guter Paging Algorithmus mit einem Nachteil. Es m&uuml;ssen st&auml;ndig konstante Seiten innerhalb der Liste von Anfang zum Ende verschoben werden. Diesen Nachteil b&uuml;gelt der Uhr Algorithmus aus.</p>\n\n<h3>Der Uhr-Seitenersetzungsalgorithmus</h3>\n\n<p>Der Clock-Algorithmus arbeitet im Prinzip wie Second Chance, nur das anstelle einer FiFo Liste eine <strong>Ringliste</strong> verwendet wird. Dabei wird in einem Pointer (Zeiger der Uhr) auf den aktuellen Anfang der Liste gezeigt. Bei einer Second Chance muss nun nicht die Seite verschoben werden, es wird einfach der Zeiger auf das n&auml;chste Element referenziert.</p>\n\n<p>Der Uhr Algorithmus ist also eine Implementation von Second Chance mit einer Ringliste.</p>\n\n<h3>Seitenersetzung mit Least-Recently-Used - LRU</h3>\n\n<p>Dieser Paging Algorithmus versucht den Optimalen zu approximieren, indem es versucht die Seiten zu entfernen, welche am L&auml;ngsten nicht mehr benutzt wurden.</p>\n\n<p>Die Implementation ist trotzdem nicht ganz einfach. Es m&uuml;sste theoretisch eine Liste gef&uuml;hrt werden, welche nach dem oben genannten Kriterium sortiert ist. Diese Liste m&uuml;sste nach jeder Seiteneinlagerung neu Sortiert werden. Da dies eine zu komplexe Operation darstellt, muss daf&uuml;r eine Softwarel&ouml;sung approximiert werden, welche wesentlich schneller arbeitet.</p>\n\n<h3>LRU mit Matrixumsetzung</h3>\n\n<p>Es wird eine globale N x N Matrix f&uuml;r alle N Seiten gef&uuml;hrt. Diese Matrix wird mit 0 initialisiert. Wird eine Seite x referenziert, so wird die Zeile x auf 1 gesetzt und danach die Spalte x auf 0. In jedem Moment ist die Zeile deren Summe am Kleinsten ist, die am wenigsten genutzte und die Zeile mit dem gr&ouml;&szlig;ten Wert, die am h&auml;ufigsten genutzte Seite.</p>\n\n<p>Wenn die notwendige Hardware (Matrix) nicht vorhanden ist, muss ein anderer effizienter Paging Algorithmus benutzt werden, der ohne jede Hardware auskommt.</p>\n\n<h3>Seitenersetzung NFU - Not Frequently Used</h3>\n\n<p>Bei jeder Uhrunterbrechung wird das <strong>Referenziert-Bit</strong> jeder Seite auf einen Softwarez&auml;hler, welcher mit null initialisiert wurde, hinzuaddiert. Es wird also versucht <strong>zu z&auml;hlen</strong>, wie oft eine Seite referenziert wird. Das Problem von NFU ist es, dass Spitzen in der Referenzierung starke Auswirkungen auf den Z&auml;hler haben. So kann es vorkommen, da&szlig; eine Seite, welche anfangs stark genutzt wurde und sp&auml;ter nicht mehr, einer zyklisch genutzten Seite nicht zur Auslagerung vorgezogen wird.</p>\n\n<p>Eine Modifikation von NFU versucht LRU zu simulieren und diesen Fehler aufzuheben.</p>\n\n<h3>Seitenersetzung mit Aging - LRU durch Softwareemulation</h3>\n\n<ol>\n\t<li>Vor der Addition es Referenziert-Bits werden alle Z&auml;hler um eins nach rechts geschoben</li>\n\t<li>das Refenziert-Bit wird auf das am weitesten links stehende Bit addiert</li>\n</ol>\n\n<p>Bei einem Seitenfehler wird auch hier die Seite mit dem kleinsten Fehler entfernt. Durch das Rechtsverschieben verkleinert sich der Wert eines Z&auml;hlers rapide und es wird verhindert, da&szlig; nur kurzeitig verwendete Seiten f&auml;lschlicherwei&szlig;e als oft referenziert angesehen werden...</p>\n\n<div class=\"well\">\n<h1 id=\"anchor13\">Seitenersetzungsalgorithmen</h1>\n\n<ul>\n\t<li>Not-Recently-Used (referenziert und modifiziert Bits - vier Zust&auml;nde)</li>\n\t<li>Least-Recently-Used (Seiten die lange nicht benutzt worden auslagern) und LRU mit Matrixumsetzung</li>\n\t<li>FiFo, Second Chance, Uhr-Seitenersetzungsalgorithmus</li>\n\t<li>Not Frequently Used (&uuml;ber Z&auml;hler f&uuml;r Referenzierungen)</li>\n\t<li>Aging - LRU durch Softwareemulation</li>\n</ul>\n</div>\n\n<h2>Die Belady&#39;s Anomalie</h2>\n\n<p>Eine Erh&ouml;hung der Seitenrahmen im Speicher, also mehr Speicher, hei&szlig;t nicht zwangsl&auml;ufig eine Verringerung von Seitenfehlern!</p>\n\n<h3>Was passiert beim Einsatz einer schnelleren Platte mit der Seitenfehlerrate?</h3>\n\n<p>Die Seitenfehlerrate steigt, da die &Uuml;bertragungszeit f&uuml;r Seiten sinkt. Die Anzahl der gleichzeitig ausf&uuml;hrbaren Prozesse steigt, da jeder Proze&szlig; nun mit weniger Seitenrahmen - und einer h&ouml;heren Fehlerrate - &quot;leben&quot; kann.</p>\n\n<h3>Working Sets - dynamisches Seitenaustauschverfahren</h3>\n\n<p>Prozess Arbeitsbereiche werden eingesetzt und die Zahl der Seitenfehler weiter zu minimieren. Ein Prozess unterliegt auch einer Art <strong>Lokalit&auml;t</strong>. Es werden im Mittel bestimmte Seiten h&auml;ufiger und Andere sogut wie nie oder gar nicht zur Prozessabarbeitung ben&ouml;tigt. Man nennt dies <strong>Referenzielle Lokalit&auml;t</strong>.</p>\n\n<p>Mit Arbeitsbereichen wird versucht Informationen vor dem Laden eines Prozesses auszunutzen, um h&auml;ufig verwendete Referenzen bevorzugt zu behandeln. Die Erfassung der f&uuml;r das Working Set notwendigen Daten wird auch &uuml;ber eine Art Aging Algorithmus umgesetzt. Jede Seite geh&ouml;rt zu einem bestimmten Working Set. Wird eine Seite l&auml;nger als N Ticks nicht mehr benutzt, wird sie aus dem Working Set entfernt.</p>\n\n<p>Die gewonnene Information des Working Sets kann verwendet werden, um den <strong>Clock Algorithmus</strong> zu verbessern. Und zwar wird nicht nur nach einer nichtreferenzierten Seite geschaut, sondern auch ob die Seite zu einem Working Set geh&ouml;rt oder nicht. Falls sie einem Arbeitsbereich angeh&ouml;rt, wird sie <strong>&uuml;bersprungen</strong>, egal ob im Moment referenziert oder nicht.</p>\n\n<h3>Welche Problematik tritt bei der Arbeitsmengenstrategie auf?</h3>\n\n<p>Das Hauptproblem ist die Seitenauslagerung durch Herausfallen von Seiten aus dem Working Set. Seiten k&ouml;nnen aus dem Working Set ausgelagert werden, ohne das ein Seitenfehler vorliegt und ohne das f&uuml;r diese Seite eine Neue eingelagert wurde. Die aktuelle Lokalit&auml;t wird eben nur approximiert. Die Arbeitsmenge enth&auml;lt m&ouml;glicherweise auch Seiten die nur einmal benutzt wurden. Der &Uuml;bergang zu einer neuen Lokalit&auml;t erfolgt nur allm&auml;hlich.</p>\n\n<h3>Gefahr bei Seitenaustauschverfahren</h3>\n\n<p>Gefahr des <strong>Seitenflatterns</strong> (Trashing). Bei &Uuml;berlastung mit zu vielen Prozessen die entweder zu viele Pagefaults produzieren und/oder zuwenig Seitenrahmen zur Verf&uuml;gung haben, ist der Rechner weitgehend mit dem Ein-/und Auslagern von Seiten besch&auml;ftigt und kann an den eigentlichen Aufgaben der Prozesse kaum noch weiterarbeiten. Effektive CPU Auslastung sinkt durch viele Seitenfehler. Weitere Gefahr besteht dann durch zu einfach konstruierte Scheduler, die bei sinkender CPU-Auslastung mit einer h&ouml;heren Prozessintensit&auml;t reagieren. <strong>Page Damons</strong> k&ouml;nnen dem Abhilfe schaffen, weil sie Prozesse auslagern, wenn nicht mehr ausreichend Seitenrahmen im Speicher zur Verf&uuml;gung stehen.</p>\n\n<h3>Was kann man gegen Trashing (Seitenflattern) tun?</h3>\n\n<p>Man sollte Page D&auml;mons benutzten, denn dadurch wird die Anzahl der gleichzeitig aktiven Prozesse verringert und jedem Prozess stehen mehr Seitenrahmen zur Verf&uuml;gung.</p>\n\n<h3>Wie wird die Seitengr&ouml;&szlig;e festgelegt?</h3>\n\n<p>Die Seitengr&ouml;&szlig;e ist normalerweise klein. Dies hat verschiedene Gr&uuml;nde sie klein zu halten, aber auch einen wichtigen Grund, die Gr&ouml;&szlig;e nicht zu klein zu definieren. Im Mittel ist die letzte Seite eines Codest&uuml;ckes nur <strong>halb gef&uuml;llt</strong>, da logischerweise nicht jedes Code, Stack oder Datensegment genau in eine Seite passen kann oder sich so auf mehrere verteilt, da&szlig; kein freier Speicher mehr verbleibt. Des Weiteren muss beachtet werden, dass es auch viele kleine Segment gibt. Angenommen man legt eine Seitengr&ouml;&szlig;e von 32 KB fest, so werden bei 4 KB gro&szlig;en Segmenten stets 28 KB verschwendet. Andersherum ben&ouml;tigt man mit kleinen Seiten eine gr&ouml;&szlig;ere Seitentabelle, deren Anzahl proportional zur Seitengr&ouml;&szlig;e ist. Des Weiteren muss man einkalkulieren, da&szlig; das Einladen einer Seite von Platte eine langwierige Operation ist. Es ist trivial das das Einlagern von vier 8K-Seiten schneller ist, als das Einlagern von 64 512 Byte gro&szlig;en Seiten. Es muss also ein Mittelweg gefunden werden, welcher einen optimalen Nutzen aus den oben genannten Kriterien zieht.</p>\n\n<pre>\nVerschwendung = Prozessgr&ouml;&szlig;e * Seitentabelleneintragsg&ouml;&szlig;e / Seitengr&ouml;&szlig;e +\nSeitengr&ouml;&szlig;e / 2\n</pre>\n\n<p>Die Nullstellenberechnung der ersten Ableitung in Abh&auml;ngigkeit der Seitengr&ouml;&szlig;e ergibt:</p>\n\n<pre>\n<strong>Optimale Seitengr&ouml;&szlig;e</strong> = Wurzel aus 2 * Prozessgr&ouml;&szlig;e *\nSeitentabelleneintragsg&ouml;&szlig;e\n</pre>\n"
          ]
        },
        {
          "tag_line": "Kapitel 8 - Deadlocks",
          "details": [
            "<h1 id=\"anchor14\">Kapitel 8 - Deadlocks</h1>\n\n<h2>Die notwendigen Bedingungen f&uuml;r Deadlocks</h2>\n\n<ol>\n\t<li>Mutual Exclusion (z.B. via Druckerspooler &uuml;ber Ersatz-BM Buffer aufgel&ouml;st)</li>\n\t<li>Belegungs- und Wartebedingung (Prozess kann weitere BM anfordern)</li>\n\t<li>Unterbrechbarkeitsbedingung (BM k&ouml;nnen nicht entzogen werden)</li>\n\t<li>zyklische Wartebedingung (Zyklus im Betriebsmittelgraph)</li>\n</ol>\n\n<h2>Was sind die hinreichende Bedingungen f&uuml;r Deadlocks?</h2>\n\n<p>Es darf keine externe Betriebsmittelinstanz bestehen.</p>\n\n<h2>Livelocks</h2>\n\n<p>Es wurde ein Betriebsmittel vergeben, es besteht aber keine Verhinderung. Das BM k&ouml;nnte irgendwann wieder freigegeben werden, aber der Zeitpunkt unbekannt.</p>\n\n<p>Z.B. <strong>Priotit&auml;tsscheduling</strong> (langwierige Prozesse verhungern da benachteiligt)</p>\n\n<h2>Wie kann man Deadlocks aufl&ouml;sen oder umgehen?</h2>\n\n<ol>\n\t<li>Vogel-Strau&szlig; Algorithmus (einfach Ignorieren)</li>\n\t<li>Versuchen zu Erkennen und zu beheben (Topologische Sortierung des BM-Graphs oder Vektoren-Matrix Variante)</li>\n\t<li>dynamisches Verhindern (vor Zuteilung auf Deadlock pr&uuml;fen)</li>\n\t<li>konzeptionelles Vermeiden (eine der notwendigen Bedingungen eliminieren)</li>\n</ol>\n\n<h3>Welche Prozesse sind an einem Deadlock beteiligt?</h3>\n\n<p>Prozesse die mehrere Betriebsmittel mit jeweils <strong>exklusiven Zugriff</strong> ben&ouml;tigen.</p>\n\n<h3>Wie kann man Deadlocks (im Voraus) erkennen?</h3>\n\n<p>Die zur Ausf&uuml;hrung eines Prozesses notwendigen Betriebsmittel m&uuml;ssten vor Ausf&uuml;hrung bekannt sein. Das ist aber in einem offenen System nicht m&ouml;glich. Das Prinzip ist das gleiche wie das <strong>Preclaiming</strong> im DBMS. Erst wenn alle angeforderten Betriebsmittel verf&uuml;gbar sind, f&uuml;hrt der Prozess den n&auml;chsten Schritt aus. Algorithmisch w&auml;re dies durch zyklische Pr&uuml;fung (f&uuml;r jeden Proze&szlig;) auf Vorhandensein der erforderlichen Betriebsmittel erreichbar.</p>\n\n<h3>Wie werden Deadlocks beseitigt?</h3>\n\n<p>Durch <strong>Abbruch</strong> der beteiligten Prozesse und Freigabe der belegten Betriebsmittel. Siehe <strong>optimistische Sperrverfahren</strong> bei DBMS.</p>\n\n<h3>Wie k&ouml;nnen Deadlocks vermieden werden?</h3>\n\n<h4>M&ouml;glichkeit 1</h4>\n\n<p>Es m&uuml;sste bei jeder Betriebsmittelanforderung gepr&uuml;ft werden, ob diese zu einem Deadlock f&uuml;hren w&uuml;rde. Da dies sehr aufwendig ist, wird so nicht verfahren.</p>\n\n<h4>M&ouml;glichkeit 2</h4>\n\n<p>Bei Anforderung zus&auml;tzlicher Betriebsmittel werden alle bisher reservierten Betriebsmittel freigegeben und dann zusammen mit den zus&auml;tzlichen Betriebsmitteln erneut angefordert (Form von Preclaiming).</p>\n\n<h4>M&ouml;glichkeit 3</h4>\n\n<p>Betriebsmitteltypen werden linear nach Priorit&auml;t angefordert . Falls schon Betriebsmittel reserviert sind, k&ouml;nnen keine Betriebsmittel, die wichtiger sind als die schon reservierten, angefordert werden. Damit wird zyklisches Warten unm&ouml;glich (&auml;hnelt dem 2-Phasen-Sperrprotokoll). Problem ist aber die Vergabe geeigneter Nummerierungen, da reale und abstrakte Betriebsmittel (z.B. Spoolbereiche auf Festplatten) sich nur schwer Ordnen lassen.</p>\n\n<h4>M&ouml;glichkeit 4</h4>\n\n<p>Der Banker Algorithmus als Verfahren zur Erkennung sicherer Systemzust&auml;nde bei der Verteilung von Ressourcen.</p>\n\n<h3>Der Bankieralgorithmus</h3>\n\n<p>Ein Banker hat einen bestimmte Menge einer Ressource. Jeder Kunde hat ein Limit, bis zu dem er Ressourcen vom Banker erhalten kann. Der Banker hat aber so viele Ressourcen, da&szlig; er das gr&ouml;&szlig;te vorhandene Limit gerade noch bedienen kann. Der Kunde bekommt die Ressource, falls der Banker danach noch gen&uuml;gend Ressourcen hat, um mindestens einem der Kunden sein komplettes Limit zuteilen zu k&ouml;nnen.</p>\n\n<h4>Beispiel Bankieralgorithmus</h4>\n\n<p>Der Banker habe 10 Einheiten eines Betriebsmittels verf&uuml;gbar.</p>\n\n<ol>\n\t<li>Das Limit von Kunde A betrage 8 Einheiten.</li>\n\t<li>Das Limit von Kunde B ist 7 Einheiten.</li>\n\t<li>A hat zur Zeit 5 Einheiten belegt</li>\n\t<li>und B hat 2 Einheiten reserviert</li>\n</ol>\n\n<p>Falls B nun eine weitere Einheit anfordert, so muss dies verweigert werden, da dann der Banker nur noch 2 Einheiten &uuml;brig h&auml;tte, diese aber nicht zur Befriedigung einer kompletten Reservierung von A oder B ausreichen w&uuml;rde und zu einem Deadlock f&uuml;hren w&uuml;rde. Solch ein Zustand hei&szlig;t unsicherer Zustand. Der Problem ist nun, da&szlig; jeder Proze&szlig; mu&szlig; im Voraus wissen muss, wieviele Einheiten eines Betriebsmittels er maximal w&auml;hrend seiner Abarbeitung ben&ouml;tigen wird.</p>\n\n<h3>Warum funktioniert die Deadlock-Vermeidung bei linearer Ordnung der Betriebsmittel?</h3>\n\n<p>Prozesse k&ouml;nnen zwar alle Betriebsmittel anfordern, aber alle Anforderungen m&uuml;ssen gem&auml;&szlig; der Nummerierungsreihenfolge geschehen. Somit ist es von vornherein ausgeschlossen, da&szlig; ein Proze&szlig; der ein Betriebsmittel h&ouml;herer Ordnung besitzt, ein Betriebsmittel niedrigerer Ordnung, das von einem anderen Proze&szlig; belegt ist, anfordern kann. Also werden Schlingen im Wartegraph und damit Deadlocks vermieden, da nun eine notwendige Voraussetzung f&uuml;r Deadlocks eliminiert wurde. Umgesetzt kann das Ganze durch eine Nummerierung der Betriebsmittel werden. Das Prinzip &auml;hnelt dem Zeitstempelverfahren bei DBMS.</p>\n"
          ]
        },
        {
          "tag_line": "Kapitel 9 - Dateisysteme",
          "details": [
            "<h1 id=\"anchor15\">Kapitel 9 - Dateisysteme</h1>\n\n<p>Hier geht es im Besonderem um Verwaltung, Zugriffsoptimierung und die Umsetzung einer f&uuml;r den Menschen vereinfacht nutzbaren Abstraktion. Der Zugriff auf Daten erfolgt nicht wie beim Hauptspeicher Byte-orientiert, sondern aus Effizienzgr&uuml;nden blockweise, da Platten um ein vielfaches langsamer als Arbeitspeicher sind. Des Weiteren sind bis auf einige Ausnahmen, wie CD ISO9660, die meisten Dateisysteme Betriebssystemspezifisch.</p>\n\n<h2>Was ist eine Datei?</h2>\n\n<p>Eine Datei ist ein logisches Betriebsmittel, welches eine endliche Menge zusammengeh&ouml;riger Daten beinhaltet. Verzeichnisse sind spezielle Dateien, welche zur Strukturierung von Dateisystemen eingef&uuml;hrt wurden.</p>\n\n<h2>Welche M&ouml;glichkeiten der Freispeicherverwaltung von File Systemem gibt es?</h2>\n\n<ol>\n\t<li>Kontinuierliche Allokation - schlecht wenn Datum angehangen werden soll</li>\n\t<li>Verkettete Listen - schlecht, da Wahlfreier Zugriff extrem langsam</li>\n\t<li>Listen mit Zuordnungstabellen - Zuordnungstabellen erlauben schnellen wahlfreien Zugriff (FAT)</li>\n\t<li>Indizierte Speicherung</li>\n\t<li>Indirekt indizierte Speicherung</li>\n</ol>\n\n<p>Ein leeres Dateisystem wird als lineares Medium betrachtet und nach und nach linear aufgef&uuml;llt. Vorteil dieser Variante ist schneller Zugriff. Nachteil ist die extreme externe Fragmentierung bei &Auml;nderungen von Dateigr&ouml;&szlig;en.</p>\n\n<h3>Das Prinzip der verketteten Listen</h3>\n\n<p>Listen sind langsamer als kontinuierliche Allokation, bieten nur wahlfreien Zugriff und besitzen nur geringe Fehlertoleranz. Daf&uuml;r werden aber nur sehr <strong>wenig Verwaltungsdaten</strong> ben&ouml;tigt. (Hier nur Pointer auf den n&auml;chsten belegten Block) Eine Verbesserung der Effizienz wird durch das Nutzen doppelt verketteter Listen erzielt, wobei sich aber auch der Zahl der Verwaltungsdaten verdoppelt.</p>\n\n<h3>Das Prinzip der Listen mit Zuordnungstabellen</h3>\n\n<p>Hier werden die Nutzdaten von den Zeigern in eine extra Tabelle ausgelagert. Die Dateizuordnungstabelle am Bsp. FAT enth&auml;lt f&uuml;r jeden Block einen Eintrag mit einem Verweis auf den Folgeblock oder einen bestimmten Eintrag f&uuml;r EOF. Die Effizient wird hier bei gro&szlig;en Tabellen eingeschr&auml;nkt.</p>\n\n<h3>Indizierte Speicherung</h3>\n\n<p>F&uuml;r jede Datei wird hier die Startadresse und die Indexl&auml;nge gemerkt. So ist zwar schneller wahlfreier Zugriff m&ouml;glich, aber es herrscht das gleiche Problem der externen Fragmentierung wie bei kontinuierlicher Allokation. Die Geschwindigkeitssteigerung gegen&uuml;ber Zuordnungstabellen kommt daher, dass Zusammenh&auml;ngende Bl&ouml;cke in Zuordnungstabellen nicht hintereinander liegen, sondern verstreut in der Tabelle. Die indizierte Speicherung f&uuml;hrt sogenannte Indexbl&ouml;cke ein, in welche hintereinander die zur Datei geh&ouml;rigen Blocknummern eingetragen werden. So muss bei einem Zugriff im Worst Case nicht die ganze Zuordnungstabelle nach den Blocknummern durchsucht werden.</p>\n\n<p>Wie gro&szlig; sollte nun aber so ein Indexblock gew&auml;hlt werden? Variable l&auml;ngen sind schlecht realisierbar. W&auml;hlt man sie zu gro&szlig;, geht Speicher durch interne Fragmentierung verloren. W&auml;hlt man sie zu klein, beschr&auml;nkt man die Dateigr&ouml;&szlig;e... Deshalb wurde die indirekt indizierte Speicherung eingef&uuml;hrt.</p>\n\n<h3>Indirekt indizierte Speicherung</h3>\n\n<p>Ein Eintrag im Verwaltungsblock (Indexblock) zeigt wieder auf einen oder mehrere Bl&ouml;cke, die nun die Verweise auf die wirklichen Datenbl&ouml;cke enthalten, oder wiederrum auf weitere Indexbl&ouml;cke. (Dreifach Indirekt) So ist auch auf gro&szlig;e Dateien der Zugriff gew&auml;hrleistet.</p>\n\n<h3>Was ist das Besondere an Unix FS Ext 2?</h3>\n\n<p>Es werden Inodes f&uuml;r den Zugriff auf Datenbl&ouml;cke verwendet. Die Dateinamen werden in einer extra Tabelle verwaltet, welche die Attribute (Eigent&uuml;mer, Zeiten, Gr&ouml;&szlig;e) und 12 direkte Zeiger auf Blockadressen (einfach, doppelt, dreifach indirekt) enth&auml;lt.</p>\n\n<h2>Festplatten-Scheduling-Algorithmen</h2>\n\n<ul>\n\t<li>First Come First Serve</li>\n\t<li>Shortest Seek Time First (Sektor mit k&uuml;rzesten Suchzeit suchen)</li>\n\t<li>Scan (Diskarm bewegt sich von einem Ende zum Anderen und bearbeitet Requests)</li>\n\t<li>C-Scan (Diskarm wird bei Erreichen des Endes wieder auf Anfang zur&uuml;ckgesetzt - kreisf&ouml;rmig)</li>\n\t<li>Look (Wie C-Scan, nur wird nur so weit wie notwendig zur&uuml;ckgesetzt)</li>\n\t<li>Look (Wie C-Look, nur kreisf&ouml;rmig)</li>\n</ul>\n\n<h3>Welche Bewertungskriterien f&uuml;r Festplattenalgorithmen gibt es?</h3>\n\n<ul>\n\t<li>Caching</li>\n\t<li>Demand Paging wichtiger als E/A der Anwendungen</li>\n\t<li>Robustheit nach Systemabst&uuml;rzen</li>\n\t<li>Ber&uuml;cksichtigung der hohen Rotationsgeschwindigkeiten moderner Platten</li>\n\t<li>Verzeichnisse und Indexbl&ouml;cke sollten in mittleren statt &auml;u&szlig;eren oder inneren Zylindern sein, da dort die mittlere Zugriffszeit am kleinsten ist (im Durchschnitt befindet sich der Lesekopf in der Mitte)</li>\n</ul>\n\n<h2>Die FAT - File Allocation Table</h2>\n\n<p>Die FAT Dateizuordnungstabelle liegt auf den ersten Spuren einer Platte. Sie wird aus Sicherheitsgr&uuml;nden oft gesichert. Alle Bl&ouml;cke einer Platte sind &uuml;ber die FAT miteinander verkettet (<strong>abgesetzte verkettete Allokation</strong>). Die Gr&ouml;&szlig;e einer Zuordnungseinheit ist f&uuml;r eine Partition statisch, kann sich aber zwischen den Partitionen unterscheiden (&uuml;blich sind 512, 1024 oder 4096 Bytes). FAT bietet weder Schutzmechanismen, noch unterst&uuml;tzt es lange Dateinamen (erst ab VFAT).</p>\n\n<h3>Welche Verzeichniseintr&auml;ge hat FAT?</h3>\n\n<ul>\n\t<li>Dateiname (8+3 Zeichen)</li>\n\t<li>Attribut-Byte</li>\n\t<li>Zeit und Datum der letzten Bearbeitung</li>\n\t<li>Erste Zuordnungseinheit der Datei</li>\n\t<li>Dateil&auml;nge</li>\n</ul>\n\n<p>Das Dateisystem assoziiert eine Baumstruktur. F&uuml;r jede Datei enth&auml;lt die Dateizuordnungstabelle eine lineare, gezeigerte Liste, mit der die Bl&ouml;cke der Datei bzw. des Unterverzeichnisses bestimmt werden k&ouml;nnen. Der Index der Tabelleneintr&auml;ge stellt die Blocknummer der Festplatte dar.</p>\n\n<h2>NTFS</h2>\n\n<p>NTFS hei&szlig;t New Technology File System. NTFS ist mit einem <strong>Zugriffsschutz</strong> ausgestattet und hat auch keine Gr&ouml;&szlig;enbegrenzung mehr. Ein Logfile wird verwendet, um nach einem Systemausfall Daten rekonstruieren zu k&ouml;nnen. NTFS besitzt nur Dateien. Analog zu den I-Nodes beim Unix gibt es beim NTFS eine <strong>Master File Table</strong>, in welcher jede Datei einen Eintrag besitzt. Zusammenh&auml;ngende Bereiche (extents) werden als <strong>B-Baum</strong> organisiert.</p>\n\n<h3>Was ist die MFT von NTFS?</h3>\n\n<p>Bei kleinen Dateien bzw. Verzeichnissen werden alle Attribute (incl. der Daten) innerhalb des MFT-Eintrages abgelegt (bis zu 1 bis 4 KB). Ein Eintrag in der MFT ben&ouml;tigt einen oder mehrere S&auml;tze der MFT (Satzl&auml;nge ist konfigurierbar). Bei gro&szlig;en Dateien enth&auml;lt der MFT-Eintrag den Wurzelknoten eines <strong>B-Baums</strong>, dessen &quot;Bl&auml;tter&quot; die Verweise auf die zusammenh&auml;ngenden Dateibereiche (Extent oder Lauf) enthalten.</p>\n\n<p>&Auml;hnlich wie die Inode-Tabelle beim UNIX-System stellt die MFT ein flaches Dateisystem dar. &Uuml;ber die Verzeichnisse wird darauf die bekannte Baumstruktur definiert.</p>\n\n<h3>Wie werden unter NTFS Dateien eindeutig identifiziert?</h3>\n\n<p>Jede Datei ist eindeutig &uuml;ber eine <strong>ID</strong> identifizierbar. Diese ID ist die Satznummer ihres Eintrages in der <strong>MasterFileTable</strong> (48 Bit). Zus&auml;tzlich wird eine Folgenummer (16 Bit) angeh&auml;ngt, die bei jedem Bezug auf den MFT-Eintrag (z.B. beim &Ouml;ffnen der Datei) um 1 erh&ouml;ht wird (f&uuml;r Konsistenz&uuml;berpr&uuml;fungen)</p>\n\n<h3>Wie werden unter NTFS Verzeichnisse umgesetzt?</h3>\n\n<p>Ein Verzeichniseintrag besteht aus dem Dateinamen, der ID-Nummer der Datei bzw. des Unterverzeichnisses, einer Kopie der Update-Zeit und der Dateil&auml;nge aus dem MFT-Eintrag. Verzeichnisse werden nicht wie bei FAT in einer linearen Liste verwaltet, sondern als <strong>B-Baum</strong>.</p>\n\n<h3>Spezialdateien von NTFS</h3>\n\n<ul>\n\t<li>MasterFileTable (MFT)</li>\n\t<li>MFT2: enth&auml;lt die ersten 16 Eintr&auml;ge der MFT als Backup</li>\n\t<li>Eine Logdatei (Daten &uuml;ber Transaktionen zum Wiederherstellen der Daten- bzw. der Dateisystemkonsistenz)</li>\n\t<li>Datentr&auml;gerdatei enth&auml;lt den Namen des Datentr&auml;gers, Versionsnummer des Dateisystems und eventuellen Verdacht auf Inkonsistenz</li>\n\t<li>Wurzelverzeichnis</li>\n\t<li>Cluster-Bitmap-Datei f&uuml;r belegte und freie Cluster des Datentr&auml;gers</li>\n\t<li>Bootdatei mit dem Startcode f&uuml;r NT</li>\n\t<li>BadClusterDatei, welche Verweise auf defekte Cluster enth&auml;lt</li>\n</ul>\n\n<h2>I-Nodes des Unix Dateisystems</h2>\n\n<p>Die ersten Adressen von Plattenbl&ouml;cken sind in dem I-Node gespeichert. Diese Adressen reichen aber nur f&uuml;r kleine Dateien aus. F&uuml;r gr&ouml;&szlig;ere Dateien, welche nicht durch ein I-Node adressierbar sind, gibt es Adressen in dem I-Node, die die Adresse eines Plattenblockes enthalten, welcher weitere Plattenadressen enth&auml;lt. Dieser Block wird &quot;<strong>einfach indirekter Block</strong>&quot; genannt. &quot;Einfach indirekte&quot; Bl&ouml;cke verweisen auf Bl&ouml;cke, die ihrerseits eine Reihe von direkten Blocknummern enthalten. Beim Zugriff auf Daten &uuml;ber einen indirekten Block mu&szlig; der Kern zuerst diesen indirekten Block lesen, den passenden direkten Blockeintrag ermitteln und dann diesen Block lesen. Es gibt auch Adressen, die auf Bl&ouml;cke zeigen, die die Adressen von einfach indirekten Bl&ouml;cken enthalten. Solche &quot;doppelt indirekten&quot; Bl&ouml;cke enthalten eine Liste indirekter Blocknummern. Bl&ouml;cke mit dem Kennzeichen &quot;dreifach indirekt&quot; enthalten eine Liste von doppelt indirekten Blocknummern u.s.w.</p>\n\n<p><img alt=\"I-Nodes\" src=\"http://www.kreissl.info/pics/images/bs_03.gif\" /></p>\n\n<h2>Dateideskriptoren</h2>\n\n<p>Jedem Prozess ist eine eigene Benutzer-Filedecriptor-Tabelle zugeordnet. Ruft ein Prozess <em>open</em> oder <em>create</em> holt der Systemkern einen freien Inode aus der Inode-Tabelle und &uuml;bergibt diesen an die globale Dateitabelle und erzeugt einen Eintrag in der Benutzer-Filedecriptor-Tabelle.</p>\n\n<h3>Was enth&auml;lt die globale Dateitabelle des Systems?</h3>\n\n<p>Den Offset in Byte zum Dateianfang f&uuml;r den n&auml;chsten <em>read-</em> bzw. <em>write-Befehl</em> des Benutzers und die <strong>Zugriffsberechtigungen</strong> f&uuml;r den Proze&szlig;, der die Datei er&ouml;ffnet hat. Die Benutzer-Filedecriptor-Tabellen enthalten dagegen nur die ge&ouml;ffneten Dateien eines Prozesses.</p>\n\n<p><img alt=\"Dateideskriptoren\" src=\"http://www.kreissl.info/pics/images/bs_04.gif\" /></p>\n\n<h3>Was beinhaltet ein I-Node?</h3>\n\n<ul>\n\t<li>Dateityp</li>\n\t<li>Eigent&uuml;mer</li>\n\t<li>Gruppe des Eigent&uuml;mers</li>\n\t<li>Zugriffsschutzbits</li>\n\t<li>Datumseintr&auml;ge</li>\n\t<li>Anzahl der Links f&uuml;r diesen I-Node</li>\n\t<li>Zeiger auf den Dateiinhalt</li>\n</ul>\n\n<h2>Ger&auml;te als I/O Dateien</h2>\n\n<p>Es gibt zwei Klassen solcher Dateien. Blockorientierte Spezialdateien und Zeichenorientierte Spezialdateien.</p>\n\n<h3>Blockorientierte Spezialdateien</h3>\n\n<p>Blockorientierte Spezialdateien werden benutzt, um Ger&auml;te zu modellieren, die aus frei adressierbaren Bl&ouml;cken bestehen. ( <strong>random access devices</strong> wie Festplatten). Wird eine blockorientierte Spezialdatei ge&ouml;ffnet, so kann ein Block gelesen werden, ohne da&szlig; man sich um die Struktur des Dateisystems, das dies erm&ouml;glicht, k&uuml;mmern zu m&uuml;ssen.</p>\n\n<h3>Zeichenorientierte Spezialdateien</h3>\n\n<p>Diese werden benutzt, um Ger&auml;te zu modellieren, die aus <strong>Zeichenstr&ouml;men</strong> bestehen. Beispiele hierf&uuml;r sind Terminals, Drucker, Netzschnittstellen. Ein Programm schreibt auf das entsprechende I/O-Ger&auml;t, indem es in die korrespondierende zeichenorientierte Spezialdatei schreibt. Analoges gilt f&uuml;r das Lesen.</p>\n\n<h2>Wie ist das Unix Dateisystems aufgebaut?</h2>\n\n<p><img alt=\"Unix\" src=\"http://www.kreissl.info/pics/images/bs_05.gif\" /></p>\n\n<p>Der Bootblock ist meistens im ersten Sektor einer Partition. Er enth&auml;lt den Bootstrap-Code, der beim Hochfahren eines UNIX-Rechners in den Speicher gelesen wird. Er l&auml;dt bzw. initialisiert das Betriebssystem.</p>\n\n<p>Der <strong>Superblock</strong> beschreibt den <strong>Aufbau des Dateisystems</strong>. Eine Kopie des Superblocks befindet sich permanent im Speicher. Der Kern schreibt periodisch den Superblock auf die Platte zur&uuml;ck, so da&szlig; er immer mit den aktuellen Daten im Dateisystem &uuml;bereinstimmt. Der Superblock enth&auml;lt folgende Felder:</p>\n\n<ul>\n\t<li>Gr&ouml;&szlig;e des Dateisystems</li>\n\t<li>Anzahl der freien Bl&ouml;cke</li>\n\t<li>Liste der freien Bl&ouml;cke</li>\n\t<li>Index auf den n&auml;chsten freien Block</li>\n</ul>\n\n<ul>\n\t<li>Gr&ouml;&szlig;e der I-Nodeliste</li>\n\t<li>Anzahl der freien Inodes im Dateisystem</li>\n\t<li>Liste der freien Inodes</li>\n\t<li>Index auf den n&auml;chsten freien Inode in dieser Liste</li>\n</ul>\n\n<ul>\n\t<li>Sperrkennzeichen f&uuml;r die Listen freier Bl&ouml;cke und Inodes</li>\n\t<li>Flag f&uuml;r durchgef&uuml;hrte &Auml;nderungen im Superblock</li>\n</ul>\n\n<h2>Wie kann ein Proze&szlig; auf Daten auf der Festplatte zugreifen?</h2>\n\n<ol>\n\t<li>Das virtuelle Ger&auml;t hinter dem die Festplatte verborgen wird, hei&szlig;t Datei.</li>\n\t<li>Der Proze&szlig; &ouml;ffnet die Datei und erh&auml;lt eine Datei-ID die auf eine Datei-Deskriptor-Tabelle verweist.</li>\n\t<li>Es folgt die Adressierung der Sektoren.</li>\n\t<li>&Uuml;ber die Sektoradresstabelle (FAT oder I-Node Tabelle) werden die Adressen der Bl&ouml;cke ermittelt</li>\n\t<li>Es folgt die &Uuml;bertragung der Bl&ouml;cke zum Hauptspeicher</li>\n\t<li>Zugriff erfolgt nach speziellem Prinzip, wie z.B. SSN</li>\n\t<li>zur Minimierung der Suchzeit muss Wahl einer effizienten Positionierungsstrategie</li>\n\t<li>Durch einen Interrupt oder ein spezielles Register teilt der Controller dem BS das Ende der &Uuml;bertragung mit.</li>\n</ol>\n\n<h3>Wie wird eine Datei unter Unix gesucht?</h3>\n\n<p>Linux identifiziert Dateien indirekt &uuml;ber den absoluten Pfadnamen, indem es durch diesen den dazugeh&ouml;rigen I-Node sucht. Jede Datei wird durch einen oder mehrere I-Nodes beschrieben. Die I-Nodes enthalten die Blockadressen der Datei. Ein Katalog (Verzeichnis) enth&auml;lt alle im Verzeichnis enthaltenen Datei- bzw. Verzeichnisnamen und die dazugeh&ouml;rigen I-Nodes.</p>\n\n<h4>Unix Beispielzugriff</h4>\n\n<ol>\n\t<li>Es soll die Datei <em>/var/log/messages</em> betrachtet werden</li>\n\t<li>Der I-Node des Wurzelverzeichnisses <strong>&quot;/&quot;</strong> steht an einer definierten Stelle auf der Platte</li>\n\t<li>Es wird das Verzeichnis <strong>&quot;var&quot;</strong> im Wurzelkatalog (auch eine Datei) gesucht</li>\n\t<li>In diesem Katalog steht der dazugeh&ouml;rige <strong>I-Node</strong> der auf das Verzeichnis bzw. den Katalog &quot;var&quot; verweist</li>\n\t<li>nun wird in der Katalogdatei &quot;var&quot; nach <strong>&quot;log&quot;</strong> gesucht und der dazugeh&ouml;rige <strong>I-Node</strong> gelesen</li>\n\t<li>Nun kann &uuml;ber den I-Node nach dem Eintrag <strong>&quot;messages&quot;</strong> in &quot;log&quot; gesucht werden</li>\n\t<li>Der I-Node der Datei &quot;messages&quot; wird nun in die globale <strong>Dateideskriptortabelle</strong> und die lokale Deskriptortabelle des Prozesses geladen</li>\n\t<li>Dieser Dateideskriptor ist das <strong>Handle</strong>, mit dem der Prozess auf die Datei zugreifen kann</li>\n\t<li>Nach eine <strong>Close()</strong> wird der I-Node aus der Dateideskriptorliste wieder entfernt.</li>\n</ol>\n"
          ]
        }
      ]
    },
    {
      "title": "Software Engineering",
      "content": [
        {
          "tag_line": "Software Development Life Cycle",
          "details": [
            "<p>Software Development Life Cycle, SDLC f&uuml;r kurz, ist eine gut definierte, strukturierte Abfolge von Etappen in Softwaretechnik zu Entwickeln die beabsichtigt Software-Produkt.</p>\n<h2>SDLC Aktivit&auml;ten</h2>\n<p>SDLC bietet eine Reihe von Schritten zu gefolgt, um zu gestalten und entwickeln eine Software-Produkt rationell. SDLC Rahmen umfasst folgenden Schritte:</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/sdlc.png\" alt=\"SDLC\" /></p>\n<h3>Kommunikation</h3>\n<p>Dies ist der erste Schritt, wo der Benutzer Eingeweihten die Wunsch f&uuml;r eine gew&uuml;nschte Softwareprodukt. Er Kontakte den Dienstleister und versucht, die Bedingungen zu verhandeln. Er macht geltend seine Anfrage an die Dienstleistungs Bereitstellung von organisation schriftlich.</p>\n<h3>Erfordernis Beisammensein</h3>\n<p>Dieser Schritt weiter der Software-Entwicklungsteam arbeitet zu tragen an dem Projekt. Das Team h&auml;lt Diskussionen mit verschiedenen Akteuren aus Problembereich und versucht, aus so viele Informationen wie m&ouml;glich auf ihre Anforderungen zu bringen. Die Anforderungen werden in Erw&auml;gung ziehen und segregierten in die Benutzeranforderungen, Systemanforderungen und Funktionsanforderungen. Die Anforderungen sind gesammelt unter Verwendung einer Anzahl von Praktiken wie gegeben -</p>\n<ul class=\"list\">\n<li>Studium der die bestehenden oder obsolet System-und Software,</li>\n<li>Durchf&uuml;hrung von Interviews von Anwendern und Entwicklern,</li>\n<li>unter Bezugnahme in der Datenbank oder</li>\n<li>Sammel Antworten aus den Frageb&ouml;gen</li>\n</ul>\n<h3>Machbarkeitsstudie</h3>\n<p>Nachdem Anforderung Erhebung, kommt das Team mit einem groben Plan des Software-Prozesses. Bei diesem Schritt analysiert das Team, wenn eine Software k&ouml;nnen sein gemacht, zu fullfill um alle Anforderungen der Anwender und wenn da ist es irgendeine M&ouml;glichkeit von Software nicht mehr sinnvoll. Es wird gefunden aus, wenn das Projekt ist finanziell, praktisch und technisch machbar f&uuml;r die Organisation zu aufnehmen. Es gibt viele Algorithmen zur Verf&uuml;gung, welche die Entwickler helfen,zu dem Schluss, die Durchf&uuml;hrbarkeit eines Software-Projekts.</p>\n<h3>Systemanalyse</h3>\n<p>Bei diesem Schritt entscheiden die Entwickler einen Fahrplan von ihrem Plan und versuchen zu bringen up, die besten Software-Modell geeignet f&uuml;r das Projekt. System-Analyse geh&ouml;rt das Verst&auml;ndnis von Software-Produkt Einschr&auml;nkungen, Lernsystem verwandten Probleme oder &Auml;nderungen getan werden in bestehende Systeme vorweg, Identifizierung und Behebung der Auswirkungen der Projekt auf Organisation und Personal etc. Das Projekt-Team analysiert den Umfang des Projekts und plant die Zeitplan und die ressourcen Entsprechend.</p>\n<h3>Software Design</h3>\n<p>N&auml;chste Schritt ist zu bringen hinunter, die ganze Kenntnis der Anforderungen und Analyse auf dem Schreibtisch und Design der Software-Produkt. Die Eing&auml;nge aus Benutzern und informationen gesammelten in Erfordernis Beisammensein phase sind die Eing&auml;nge von diesem Schritt. Die Ausgabe dieses Schritts kommt in Form von zwei Designs; logischen Design und physikalischen Design. Ingenieure produziere Meta-Daten und Daten W&ouml;rterb&uuml;cher, logisch Diagramme, Daten-flussdiagramme und in einigen F&auml;llen Pseudo-Codes.</p>\n<h3>Codierungs</h3>\n<p>Dieser Schritt wird auch als Programmierphase bekannt. Die Implementierung von Software-Design beginnt bez&uuml;glich schreiben Programmcode zu in der geeigneten Programmiersprache und entwicklung fehlerfrei ausf&uuml;hrbare Programme effizient.</p>\n<h3>Testen</h3>\n<p>Ein Sch&auml;tzung sagt, dass 50% des ganze software Entwicklungsprozesses sein soll getestet. Fehler k&ouml;nnen ruinieren die Software aus kritischen Ebene, um seine eigene Entfernung. Software-Test ist getan, w&auml;hrend Codierung von den Entwicklern und gr&uuml;ndlichen Tests ist dirigieren durch Testexperten auf verschiedenen Ebenen der Code wie Modulpr&uuml;fung, Programmtests, Produkttests, In-house Tests und Testen des Produkts am Benutzers Ende. Fr&uuml;he Entdeckungs von Fehlern und deren Abhilfe ist der Schl&uuml;ssel, um eine zuverl&auml;ssige Software.</p>\n<h3>Integration</h3>\n<p>Software k&ouml;nnen brauchen mit den Bibliotheken, Datenbanken und andere Programm (e) integriert werden. Diese Phase des SDLC ist bei der Integration von Software mit Au&szlig;enwelt Entit&auml;ten beteiligt.</p>\n<h3>Implementierung</h3>\n<p>Das bedeutet, Installation der Software auf PCs der Anwender. Bei mal, Software Bed&uuml;rfnisse Post Installation Konfigurationen an benutzer Ende. Software ist getestet f&uuml;r Portabilit&auml;t und Anpassungsf&auml;higkeit und Integration verwandten Fragen sind gel&ouml;st w&auml;hrend der Implementierung.</p>\n<h3>Betrieb und Wartung</h3>\n<p>Diese Phase best&auml;tigt die Software Bedienung in Begriffe von mehr Effizienz und weniger Fehler. Falls erforderlich, werden die Benutzer geschult on, oder Aided mit der Dokumentation auf, wie die Software zu betreiben und wie Sie die Software funktionsf&auml;hig zu halten. Die Software wird beibehalten Rechtzeitige durch aktualisierung die Code nach zu Ver&auml;nderungen, die Einnahme Ort in der benutzer ende umgebung oder Technologie. Diese Phase kann GesichtHerausforderungen von versteckte Wanzen und der realen Welt nicht identifizierten Probleme.</p>\n<h3>veranlagung</h3>\n<p>Wie die Zeit verstreicht, kann die Software auf die Leistung vor r&uuml;ckl&auml;ufig. Es kann gehen, v&ouml;llig veraltet oder kann m&uuml;ssen intensiv upgradation. Daher ein dringender bedarf zu Beseitigen ein Hauptteil des systems entsteht. Diese Phase umfasst die Archivierung von Daten und erforderlich Software-Komponenten, die Schlie&szlig;ung hinunter Systems, Planungs Disposition Aktivit&auml;t und Abschlusssystem in geeigneten End-of-Systemzeit.</p>\n<h2>Software Entwicklungsparadigma</h2>\n<p>Die Software Entwicklungsparadigma hilft Entwickler, um eine Strategie zu w&auml;hlen, um die Software zu entwickeln. Ein Software-Entwicklungsparadigma hat seinen eigenen Satz von Werkzeugen, Methoden und Verfahren, die klar und ausgedr&uuml;ckt werden, definiert Software-Entwicklungs-Lebenszyklus. Einige Softwareentwicklungsparadigmen oder Prozessmodelle sind wie folgt definiert:</p>\n<h3>Wasserfall-Modell</h3>\n<p>Wasserfall-Modell ist das einfachste Modell der Software-Entwicklung-Paradigma. Er sagt, die alle Phasen des SDLC werden Funktionieren einer nach dem anderen in linearer Weise. Das hei&szlig;t, wenn die erste Phase abgeschlossen ist, dann wird nur die zweite Phase beginnen und so weiter.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/sdlc_waterfall.png\" alt=\"SDLC Wasserfall-Modell\" /></p>\n<p>Dieses Modell geht davon aus, dass alles ist durchgef&uuml;hrten und genommen Ort perfekt wie geplant in der vorherigen Stufe und es gibt keine Notwendigkeit, denken &uuml;ber die letzten Fragen, die k&ouml;nnen entstehen in die n&auml;chste Phase. Dieses Modell nicht Arbeit glatt, wenn es einige Erteilung links bei der vorherigen Schritt. Die sequentielle Natur der Modell erlaubt uns nicht, zur&uuml;ck zu gehen und r&uuml;ckg&auml;ngig machen oder wiederholen unser Handeln.</p>\n<p>This model is best suited when developers already have designed and developed similar software in the past and are aware of all its domains.</p>\n<h3>Iterative Modell</h3>\n<p>Dieses Modell f&uuml;hrt die Software-Entwicklungsprozesses in Iterationen. Es projiziert den Prozess der Entwicklung in Zyklisch manieren wiederholen jeder Schritt nach jeder Zyklus der SDLC Prozess.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/sdlc_iterative.png\" alt=\"iterative Modell\" /></p>\n<p>Die Software ist erste auf sehr kleinem Ma&szlig;stab entwickelt und alle Schritte befolgt werden, die ber&uuml;cksichtigung werden. Dann wird auf jeden n&auml;chsten Iteration, mehr Funktionen und Module sind entworfen, codiert, gepr&uuml;ft und hinzugef&uuml;gt an die Software. Jeder Zyklus erzeugt einen Software, welche in sich abgeschlossen ist und hat mehr Funktionen und F&auml;higkeiten als die des vorherigen.</p>\n<p>Nach jeder Iteration kann das Management-Team k&ouml;nnen die Arbeit an das Risikomanagement zu tun und die Vorbereitungen f&uuml;r die n&auml;chste Iteration. Weil ein Zyklus beinhaltet kleinen portion auf ganze Softwareprozess, ist es einfacher, den Entwicklungsprozess zu verwalten, aber es mehr Ressourcen verbraucht.</p>\n<h3>Spiralmodell</h3>\n<p>Spiralmodell ist eine Kombination von beiden, iterative Modell und einer der SDLC-Modell. Es kann als wenn Sie eine SDLC-Modell w&auml;hlen und kombinieren Sie es mit Kreisprozess (iterative Modell) gesehen werden.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/sdlc_spiral.png\" alt=\"Spiralmodell\" /></p>\n<p>Dieses Modell ist der Auffassung,Risiko, das geht oft un-bemerkt von den meisten anderen Modellen. Das Modell beginnt mit der Bestimmung Ziele und Zw&auml;nge der Software beim Start einer Iteration. N&auml;chste Phase ist von Prototyping der Software. Dazu geh&ouml;ren die Risikoanalyse. Dann, eines Standard-SDLC-Modell ist verwendet, um die Software zu bauen. In der vierten Phase des Plans auf der n&auml;chsten Iteration wird hergestellt.</p>\n<h3>V &ndash; modell</h3>\n<p>Der Dur Nachteil von Wasserfall-Modell ist, wir Umzug um die n&auml;chste Stufe nur wenn der vorherige fertig ist und es gab keine Chance, wieder zu gehen, wenn etwas ist gefunden schief in sp&auml;teren Stadien. V-Modell bietet Mittels von testen von software auf jeder Stufe in umgekehrter Weise.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/sdlc_vmodel.png\" alt=\"V-Modell\" /></p>\n<p>Bei jeder B&uuml;hne werden die Testpl&auml;ne und Testf&auml;lle erstellt, um zu &uuml;berpr&uuml;fen und zu validieren, um ein Produkt entsprechend der Anforderung dass Stufe. Zum Beispiel in Bedarf Versammlung inszenieren das Testteam bereitet alle Testf&auml;lle in die entsprechend den Anforderungen. Sp&auml;ter, wenn das Produkt entwickelt und ist bereit f&uuml;r die Pr&uuml;fung, Testf&auml;lle von dieser B&uuml;hne verifizieren die Software vor seine G&uuml;ltigkeit an den Anforderungen bei dieser B&uuml;hne.</p>\n<p>Das macht sowohl die Verifizierung und Validierung gehen in parallel. Dieses Modell wird auch als Verifikation und Validierung Modell bekannt.</p>\n<h3>Urknall-Modell</h3>\n<p>Dieses Modell ist das einfachste Modell in seiner Form. Es erfordert wenig Planung, viel Programmierung und viele Fonds. Dieses Modell wird um den Urknall des Universums konzeptualisiert. Als Wissenschaftler sagen, dass nach Urknall viel Galaxien, Planeten und Sterne gewachsen nur als ein Ereignis. Ebenso, wenn wir zusammen viel Programmierung und Fonds, k&ouml;nnen Sie die besten Software-Produkt zu erzielen.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/sdlc_bigbang.png\" alt=\"Urknall-Modell\" /></p>\n<p>F&uuml;r dieses Modell sehr kleine Menge von Planung ist Erforderlich. Daraus folgt nicht, jeden Prozess, oder zu Zeiten der Kunde nicht sicher &uuml;ber die Anforderungen und den k&uuml;nftigen Bedarf. So dass die Eingangsanforderungen sind willk&uuml;rlich.</p>\n<p>Dieses Modell ist nicht geeignet f&uuml;r gro&szlig;e Software-Projekte, aber gut f&uuml;r das Lernen und Experimentieren.</p>\n<p>F&uuml;r eine in-Tiefe Lesung am SDLC und ihre verschiedenen Modelle, <a style=\"color: blue;\" href=\"http://www.tutorialspoint.com/sdlc/index.htm\" target=\"_blank\" rel=\"noopener\">klicken Sie hier.</a></p>"
          ]
        },
        {
          "tag_line": "Software Projektmanagement",
          "details": [
            "<p>Der Job Muster von einem IT-Unternehmen in der Software-Entwicklung ist zu sehen in zwei Teile aufgeteilt werden:</p>\n<ul class=\"list\">\n<li>Software-Erstellung</li>\n<li>Software Projektmanagement</li>\n</ul>\n<p>Ein Projekt ist gut definierte Aufgabe, die eine Sammlung von mehreren Operationen getan, um ein Ziel zu erreichen (zB Software-Entwicklung und Lieferung) ist. Ein Projekt kann wie charakterisiert werden:</p>\n<ul class=\"list\">\n<li>\n<p>Jedes Projekt kann eine eindeutige und deutliche Ziel.</p>\n</li>\n<li>\n<p>Projekt ist nicht Routinet&auml;tigkeit oder Tag-zu-Tag Operationen.</p>\n</li>\n<li>\n<p>Projekt kommt mit einer Startzeit und Endzeit.</p>\n</li>\n<li>\n<p>Projekt endet, wenn das Ziel erreicht ist, um eine so vor&uuml;bergehende Phase in der Lebenszeit einer Organisation.</p>\n</li>\n<li>\n<p>Projekt braucht angemessene Ressourcen in Form von Zeit, Arbeitskraft, Finanzen, Material und Wissen-Bank.</p>\n</li>\n</ul>\n<h2>Software-Projekt</h2>\n<p>Ein Software-Projekt ist das komplette prozess der Softwareentwicklung von der Anforderungserfassung zu Pr&uuml;fung und Wartung, entsprechend den Ausf&uuml;hrungsmethoden durchgef&uuml;hrt, in einem bestimmten Zeitraum zu Software-Produkt soll zu erzielen.</p>\n<h2>Need von Software-Projektmanagement</h2>\n<p>Software soll eine immaterielle Produkt. Software-Entwicklung ist eine Art von allen neuen Strom in der World Business und es gibt sehr wenig Erfahrung im Bau von Software-Produkten. Die meisten Software-Produkte sind ma&szlig;geschneidert auf die Anforderungen des Kunden passen. Das wichtigste ist, dass die zugrunde liegende Technologie Ver&auml;nderungen und Fortschritte so h&auml;ufig und schnell, dass die Erfahrung von einem Produkt m&ouml;glicherweise nicht auf den anderen angewendet werden. Alle diese Unternehmen und Umweltauflagen bringen Risiko in der Softwareentwicklung daher ist es wichtig, Software-Projekte effizient zu verwalten.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/time_cost_quality.png\" alt=\"Time_Cost_Quality\" /></p>\n<p>Das image oben zeigt dreifachen Einschr&auml;nkungen f&uuml;r Software-Projekte. Es ist ein wesentlicher Bestandteil der Software-Organisation, Qualit&auml;tsprodukt zu liefern, halten die Kosten im Rahmen des Budgets einschr&auml;nken Kunden und liefern das Projekt als je geplant. Es gibt mehrere Faktoren, sowohl interne als auch externe, die diese dreifache einschr&auml;nken Dreieck auswirken k&ouml;nnen. Jede der drei Faktor k&ouml;nnen sich stark auf die beiden anderen.</p>\n<p>Daher ist Software-Projektmanagement wesentliche Anforderungen der Anwender zusammen mit Budget und Zeitdruck integrieren.</p>\n<h2>Software Project Manager</h2>\n<p>Ein Software-Projekt-Manager ist eine Person, die die Verantwortung f&uuml;r die Ausf&uuml;hrung der Software-Projekt verpflichtet. Software-Projekt-Manager ist durchaus bewusst alle Phasen des SDLC, die die Software w&uuml;rde durch zu gehen. Projektmanager k&ouml;nnen nie direkt bei der Herstellung des Endproduktes beteiligt, aber er steuert und verwaltet die Aktivit&auml;ten in der Produktion beteiligt.</p>\n<p>Ein Projektmanager eng &uuml;berwacht den Entwicklungsprozess vorbereitet und f&uuml;hrt verschiedene Pl&auml;ne, organisiert notwendige und ausreichende Ressourcen, h&auml;lt die Kommunikation zwischen allen Teammitgliedern, um Fragen der Kosten, Budget, Ressourcen, Zeit, Qualit&auml;t und Kundenzufriedenheit anzusprechen.</p>\n<p>Lassen Sie uns sehen einige Aufgaben, dass ein Projektmanager Schultern -</p>\n<h3>Managing People</h3>\n<ul class=\"list\">\n<li>Gesetz als Projektleiter</li>\n<li>L&auml;sion mit Stakeholdern</li>\n<li>Personalverwaltung</li>\n<li>Einrichten Berichterstattung Hierarchie usw</li>\n</ul>\n<h3>Verwalten von Projekt</h3>\n<ul class=\"list\">\n<li>Definition und Einrichtung von Projektumfang</li>\n<li>Verwalten von Projektmanagementaktivit&auml;ten</li>\n<li>&Uuml;berwachung Fortschritte und Leistungen</li>\n<li>Risikoanalyse in jeder Phase</li>\n<li>Nehmen notwendiger Schritt, um zu vermeiden, oder kommen aus Problemen</li>\n<li>Gesetz als Projektsprecher</li>\n</ul>\n<h2>Software-Management-Aktivit&auml;ten</h2>\n<p>Software-Projektmanagement besteht aus einer Reihe von Aktivit&auml;ten, die Planung von Projekt enth&auml;lt, zu entscheiden, Umfang der Software-Produkt, die Einsch&auml;tzung der Kosten in den verschiedenen Bezeichnungen, Terminplanung von Aufgaben und Ereignissen und Ressourcenmanagement. Projekt-Management-Aktivit&auml;ten k&ouml;nnen umfassen:</p>\n<ul class=\"list\">\n<li><strong>Projektplanung</strong></li>\n<li><strong>Scope Management</strong></li>\n<li><strong>Projektsch&auml;tzung</strong></li>\n</ul>\n<h2>Projektplanung</h2>\n<p>Software Projektplanung ist die Aufgabe, die durchgef&uuml;hrt wird, bevor die Produktion von Software tats&auml;chlich beginnt. Es ist dort f&uuml;r die Software-Produktion beinhaltet aber keine konkrete T&auml;tigkeit, die keine direkte Verbindung mit Software-Produktion hat; sondern es ist ein Satz von mehreren Verfahren, die Software-Produktion erleichtert. Projektplanung k&ouml;nnen geh&ouml;ren:</p>\n<h2>Scope Management</h2>\n<p>Es definiert den Umfang des Projekts, Dazu geh&ouml;ren alle Aktivit&auml;ten, m&uuml;ssen Verfahren, um ein Software-Produkt lieferbar machen gef&uuml;hrt werden. Scope-Management ist wichtig, weil es schafft Grenzen des Projekts durch eine klare Definition, was in dem Projekt getan werden kann und was nicht getan werden. Dies macht Projekt begrenzt und quantifizierbare Aufgaben, die leicht dokumentiert werden k&ouml;nnen, enthalten und wiederum vermeidet Kosten und Zeit&uuml;berschreitung.</p>\n<p>W&auml;hrend Projektumfang Management, ist es notwendig -</p>\n<ul class=\"list\">\n<li>Definieren Sie den Umfang</li>\n<li>Entscheiden ihre &Uuml;berpr&uuml;fung und Kontrolle</li>\n<li>das Projekt in verschiedene kleinere Teile zur Vereinfachung der Verwaltung</li>\n<li>&Uuml;berpr&uuml;fen Sie, Anwendungsbereich</li>\n<li>Steuern Sie den Rahmen, indem &Auml;nderungen des Lieferumfangs</li>\n</ul>\n<h2>Projektsch&auml;tzung</h2>\n<p>F&uuml;r eine effektive Verwaltung genaue Sch&auml;tzung der verschiedenen Ma&szlig;nahmen ist ein Muss. Mit der richtigen Sch&auml;tzung Manager k&ouml;nnen zu verwalten und effektiver zu steuern, das Projekt.</p>\n<p>Projekt Absch&auml;tzung kann die folgende beinhalten:</p>\n<ul class=\"list\">\n<li>\n<p><strong>Software Gr&ouml;&szlig;enabsch&auml;tzung</strong></p>\n<p>Software Gr&ouml;&szlig;e kann entweder in Form von KLOC (Kilo Line of-Code) oder durch Berechnung Anzahl der Funktionsstellen in der Software gesch&auml;tzt werden. Zeilen Code abh&auml;ngen auf Codierungspraktiken und Funktion Punkte variieren nach Benutzer oder Software-Anforderung.</p>\n</li>\n<li>\n<p><strong>Aufwandssch&auml;tzung</strong></p>\n<p>Die Manager sch&auml;tzen Anstrengungen im Bereich der pers&ouml;nlichen Anforderungen und Mann-Stunden ben&ouml;tigt, um die Software zu produzieren. Aufwandssch&auml;tzung f&uuml;r Software Gr&ouml;&szlig;e sollte bekannt sein. Dies kann entweder durch Erfahrung Manager abgeleitet werden k&ouml;nnen historische Daten oder Software Gr&ouml;&szlig;e der Organisation in Bem&uuml;hungen mit einigen Standard-Formeln umgewandelt werden.</p>\n</li>\n<li>\n<p><strong>Zeitsch&auml;tzung</strong></p>\n<p>einmal Gr&ouml;&szlig;e und Bem&uuml;hungen gesch&auml;tzt, die erforderliche Zeit, um die Software zu produzieren kann gesch&auml;tzt werden. Anstrengungen erforderlich, in Teilkategorien gem&auml;&szlig; Spezifikation der Anforderungen und Abh&auml;ngigkeiten der verschiedenen Komponenten der Software getrennt. Software Aufgaben werden geteilt in kleinere Aufgaben, T&auml;tigkeiten oder Ereignisse, die von der Arbeit Durchbruch Strukturplan (PSP) unterteilt. Die Aufgaben werden am Tag-zu-Tag-Basis oder in Kalendermonaten geplant.</p>\n<p>Die Summe der Zeit ben&ouml;tigt, um alle Aufgaben in Stunden oder Tagen abgeschlossen ist die Gesamtzeit investiert, um das Projekt abzuschlie&szlig;en.</p>\n</li>\n<li>\n<p><strong>Kostensch&auml;tzung</strong></p>\n<p>Dies k&ouml;nnte als der schwierigste von allen betrachtet werden, weil sie auf mehr Elemente als alle vorherigen h&auml;ngt werden. Zur Sch&auml;tzung der Projektkosten, ist es erforderlich, zu pr&uuml;fen,</p>\n<ul class=\"list\">\n<li>Gr&ouml;&szlig;e der Software</li>\n<li>Software Qualit&auml;t</li>\n<li>Hardware</li>\n<li>Zus&auml;tzliche Software oder Tools, Lizenzen usw</li>\n<li>Fachpersonal mit aufgabenspezifischen F&auml;higkeiten</li>\n<li>Reisen beteiligt</li>\n<li>Kommunikation</li>\n<li>Training and support</li>\n</ul>\n</li>\n</ul>\n<h2>Projektsch&auml;tztechniken</h2>\n<p>Wir diskutierten verschiedene Parameter mit Projektsch&auml;tzung wie Gr&ouml;&szlig;e, Aufwand, Zeit und Kosten.</p>\n<p>Projektleiter k&ouml;nnen die aufgelisteten Faktoren mit zwei breit anerkannte Techniken zu sch&auml;tzen &ndash;</p>\n<h3>Zerlegungstechnik</h3>\n<p>Diese Technik &uuml;bernimmt die Software als Produkt der verschiedenen Zusammensetzungen.</p>\n<p>Es gibt zwei Hauptmodelle -</p>\n<ul class=\"list\">\n<li>\n<p><strong>Zeile Code</strong> - Die Einsch&auml;tzung wird getan im Namen der Anzahl der Linien von Codes in der Software-Produkt.</p>\n</li>\n<li>\n<p><strong>Function Points</strong> - Die Einsch&auml;tzung wird getan im Namen der Anzahl der Funktionsstellen in der Software-Produkt.</p>\n</li>\n</ul>\n<h3>Empirische Sch&auml;tzung Technik</h3>\n<p>Diese Technik verwendet empirisch abgeleiteten Formeln zu machen estimation. These Formeln auf LOC oder RP beruht.</p>\n<ul class=\"list\">\n<li>\n<p><strong>Putnam Modell</strong></p>\n<p>Dieses Modell wird von Lawrence H. Putnam, die auf den Norden H&auml;ufigkeitsverteilung (Rayleigh-Kurve) basiert. Putnam-Modell abbildet Zeit und Bem&uuml;hungen mit Software-Gr&ouml;&szlig;e erforderlich.</p>\n</li>\n<li>\n<p><strong>COCOMO</strong></p>\n<p>COCOMO steht f&uuml;r Constructive Cost Model, von Barry W. Boehm entwickelt. Es teilt das Software-Produkt in drei Kategorien der Software:. Organische, Doppelhaus und Embedded</p>\n</li>\n</ul>\n<h2>projekt Ablaufplanung</h2>\n<p>projekt Ablaufplanung in einem Projekt bezieht sich auf Fahrplan aller Aktivit&auml;ten, um mit bestimmten Reihenfolge und innerhalb Zeitfenster f&uuml;r jede T&auml;tigkeit zugeteilt gef&uuml;hrt werden. Projektmanager dazu neigen, neigen dazu, verschiedene Aufgaben zu definieren, und Projekt-Meilensteine \u200B\u200Bund sie ordnen sie halten verschiedene Faktoren im Auge. Sie suchen nach Aufgaben liegen in kritischen Pfad in der Anlage, die (wegen der Aufgabe Interdependenz) und dies ausschlie&szlig;lich im daf&uuml;r vorgesehenen Zeit notwendig, in spezifischer Weise vollst&auml;ndig sind. Anordnung der Aufgaben, die von kritischen Pfad liegt weniger wahrscheinlich Auswirkungen auf alle Zeitplan des Projekts.</p>\n<p>F&uuml;r die Planung eines Projekts, ist es notwendig, -</p>\n<ul class=\"list\">\n<li>abbauen die Projektaufgaben in kleinere, &uuml;berschaubare Form</li>\n<li>Finden Sie heraus, verschiedene Aufgaben und korrelieren Artikel</li>\n<li>Sch&auml;tzzeitrahmen f&uuml;r die jeweilige Aufgabe erforderlich</li>\n<li>teilen die Zeit in Arbeitseinheiten</li>\n<li>Zuweisen ausreichende Anzahl von Arbeitseinheiten f&uuml;r jede Aufgabe</li>\n<li>Berechnen Sie die Gesamtzeit erforderlich f&uuml;r das Projekt von Anfang bis zum Ende</li>\n</ul>\n<h2>Resource management</h2>\n<p>Alle Elemente verwendet werden, um ein Software-Produkt entwickeln kann als Ressource f&uuml;r das Projekt &uuml;bernommen werden. Dies kann umfassen Humanressourcen, produktive Werkzeuge und Software-Bibliotheken.</p>\n<p>Die Ressourcen sind noch in begrenzter Menge und den Aufenthalt in der Organisation als einen Pool von Verm&ouml;genswerten. Die Ressourcenknappheit behindert die Entwicklung von Projekt und es kann hinter dem Zeitplan hinterherhinken. Zuweisung von zus&auml;tzlichen Ressourcen erh&ouml;ht die Entwicklungskosten am Ende. Es ist daher notwendig, f&uuml;r das Projekt zu sch&auml;tzen und angemessene Mittel.</p>\n<p>Ressourcenmanagement umfasst -</p>\n<ul class=\"list\">\n<li>\n<p>Definition richtigen Organisation Projekt durch die Schaffung einer Projektteam und die Zuteilung von Aufgaben an jedem Teammitglied.</p>\n</li>\n<li>\n<p>Ermittlung in einem bestimmten Stadium erforderlichen Ressourcen und deren Verf&uuml;gbarkeit.</p>\n</li>\n<li>\n<p>Ressourcen verwalten indem Ressourcenanforderung, wenn sie erforderlich sind und de-Zuweisung, wenn sie nicht mehr ben&ouml;tigt werden.</p>\n</li>\n</ul>\n<h2>Projektrisikomanagement</h2>\n<p>Risikomanagement umfasst alle Aktivit&auml;ten im Zusammenhang mit Identifikation, Analyse und unter Ber&uuml;cksichtigung von vorhersehbaren und nicht vorhersehbaren Risiken-in das Projekt. Risiko k&ouml;nnen geh&ouml;ren:</p>\n<ul class=\"list\">\n<li>Erfahrene Mitarbeiter verlassen das Projekt und neue Mitarbeiter kommen in.</li>\n<li>Ver&auml;nderung in Organisationsmanagement.</li>\n<li>Anforderungs&auml;nderung oder falsch interpretiert Anforderung.</li>\n<li>Die Untersch&auml;tzung der ben&ouml;tigten Zeit und Ressourcen.</li>\n<li>technologische Ver&auml;nderungen, Ver&auml;nderungen der Umwelt, Konkurrenz.</li>\n</ul>\n<h2>Risikomanagement-Verfahren</h2>\n<p>Es gibt folgende Aktivit&auml;ten im Risikomanagementprozess beteiligt:</p>\n<ul class=\"list\">\n<li>\n<p><strong>Identifikation</strong> - Notieren Sie alle m&ouml;glichen Risiken, die in dem Projekt auftreten k&ouml;nnen.</p>\n</li>\n<li>\n<p><strong>Kategorisieren</strong> - Kategorisieren bekannten Risiken in hohe, mittlere und niedrige Risikointensit&auml;t wie pro ihre m&ouml;glichen Auswirkungen auf das Projekt</p>\n</li>\n<li>\n<p><strong>Verwalten</strong> - Analysieren Sie die Wahrscheinlichkeit des Auftretens von Risiken in verschiedenen Phasen. Plan machen, um zu vermeiden oder Risiken ausgesetzt. Versuchen, ihre Nebenwirkungen zu minimieren.</p>\n</li>\n<li>\n<p><strong>Monitor</strong> - Eng die potenziellen Risiken und deren fr&uuml;he Symptome zu &uuml;berwachen. &Uuml;berwachen auch die Auswirkungen von Ma&szlig;nahmen ergriffen, zu mildern oder zu vermeiden.</p>\n</li>\n</ul>\n<h2>Project Execution &amp; &Uuml;berwachung</h2>\n<p>In dieser Phase werden die in Projektpl&auml;nen beschriebenen Aufgaben gem&auml;&szlig; ihrer Zeitpl&auml;ne ausgef&uuml;hrt.</p>\n<p>Ausf&uuml;hrung ben&ouml;tigt eine &Uuml;berwachung, um zu &uuml;berpr&uuml;fen, ob alles nach Plan geht. &Uuml;berwachung beobachtet, um die Wahrscheinlichkeit des Risiko &uuml;berpr&uuml;fen und Ma&szlig;nahmen zur Gef&auml;hrdung oder melden den Status von verschiedenen Aufgaben.</p>\n<p>Diese Ma&szlig;nahmen umfassen -</p>\n<ul class=\"list\">\n<li>\n<p><strong>Activity Monitoring</strong> - Alle Aktivit&auml;ten innerhalb einiger Task geplant auf Tag-zu-Tag &uuml;berwacht werden. Wenn alle Aktivit&auml;ten in einer Aufgabe abgeschlossen sind, wird es als abgeschlossen betrachtet.</p>\n</li>\n<li>\n<p><strong>Statusberichte</strong> - Die Berichte enthalten Status der Aktivit&auml;ten und Aufgaben innerhalb eines bestimmten Zeitrahmens eine Woche abgeschlossen, in der Regel. Status markiert werden als fertige, anh&auml;ngigen oder work-in-progress etc.</p>\n</li>\n<li>\n<p><strong>Meilensteine \u200B\u200BCheckliste</strong> - Jedes Projekt ist in mehrere Phasen, in denen wichtige Aufgaben durchgef&uuml;hrt werden (Meilensteine\u200B\u200B), basierend auf den Phasen des SDLC unterteilt. Dieser Meilenstein Checkliste wird einmal alle paar Wochen vorbereitet und meldet den Status der Meilensteine.</p>\n</li>\n</ul>\n<h2>Projektkommunikationsmanagement</h2>\n<p>Effektive Kommunikation spielt eine wichtige Rolle f&uuml;r den Erfolg eines Projekts. Es &uuml;berbr&uuml;ckt L&uuml;cken zwischen Client und die Organisation, die unter den Teammitgliedern und anderen Beteiligten an dem Projekt wie Hardware-Lieferanten.</p>\n<p>Die Kommunikation kann m&uuml;ndlich oder schriftlich. Kommunikationsmanagement -Prozess kann die folgenden Schritte haben:</p>\n<ul class=\"list\">\n<li>\n<p><strong>Planung</strong> - Dieser Schritt umfasst die Kennungen aller Beteiligten in das Projekt und die Art der Kommunikation zwischen ihnen. Es ist auch der Auffassung, ob weitere Kommunikationseinrichtungen ben&ouml;tigt werden.</p>\n</li>\n<li>\n<p><strong>Sharing</strong> - Nach der Bestimmung verschiedener Aspekte der Planung, konzentriert sich auf den Austausch von Manager richtigen Informationen mit der richtigen Person zur richtigen Zeit. Das h&auml;lt jeder beteiligt das Projekt auf dem Laufenden mit Projektfortschritt und den Status an.</p>\n</li>\n<li>\n<p><strong>Meinung</strong> - Projektmanager verwenden verschiedene Ma&szlig;nahmen und R&uuml;ckkopplungsmechanismus, und erstellen Sie Status und Leistungsberichte. Dieser Mechanismus sorgt daf&uuml;r, dass Eingaben von verschiedenen Beteiligten wird dem Projekt-Manager als ihr Feedback kommen.</p>\n</li>\n<li>\n<p><strong>Schlie&szlig;ung</strong> - Am Ende jeder Gro&szlig;veranstaltung, Ende einer Phase des SDLC oder am Ende des Projekts selbst, administrative Schlie&szlig;ung wird offiziell bekannt gegeben, jeden Stakeholder, indem E-Mail, durch die Verteilung eines Hardcopy aktualisieren von Dokumenten oder durch andere Mittel der effektiven Kommunikation.</p>\n</li>\n</ul>\n<p>Nach dem Schlie&szlig;en, bewegt sich das Team zum n&auml;chsten Phase oder Projekt.</p>\n<h2>Konfigurations Management</h2>\n<p>Konfigurationsmanagement ist ein Prozess der Verfolgung und Steuerung der &Auml;nderungen in der Software im Hinblick auf die Anforderungen, Design, Funktionen und Entwicklung des Produkts.</p>\n<p>IEEE definiert es als \"Prozess der Identifizierung und Definition der Elemente in dem System, die Steuerung der Ver&auml;nderung dieser Elemente w&auml;hrend ihres gesamten Lebenszyklus, die Erfassung und Meldung den Status der Artikel und &Auml;nderungsanforderungen und die &Uuml;berpr&uuml;fung der Vollst&auml;ndigkeit und Richtigkeit der Artikel \".</p>\n<p>Im Allgemeinen, wenn die SRS abgeschlossen ist gibt es weniger Chancen, Anforderung von &Auml;nderungen von Benutzer. Wenn sie auftreten, werden die &Auml;nderungen nur mit vorheriger Zustimmung der h&ouml;heren Management angesprochen, da es eine M&ouml;glichkeit, Kosten-und Zeit&uuml;berschreitung.</p>\n<h3>Baseline</h3>\n<p>Eine Phase der SDLC wird angenommen, wenn sie &uuml;ber den Baseline, dh Grundlinie ist eine Messung, die Vollst&auml;ndigkeit einer Phase definiert. Eine Phase ist baseline wenn alle T&auml;tigkeiten im Zusammenhang mit es sind fertig und gut dokumentiert. Wenn es nicht die letzte Phase, w&uuml;rde sein Ausgang im unmittelbar n&auml;chsten Phase verwendet werden.</p>\n<p>Konfigurationsmanagement ist eine Disziplin der Organisation Verwaltung, die Pflege von jeglicher &Auml;nderung (Prozess, Bedarf, technologische, strategische etc.) nach einer Phase Baseline nimmt. CM h&auml;lt Check f&uuml;r &Auml;nderungen in der Software.</p>\n<h3>&Auml;nderungskontrolle</h3>\n<p>&auml;nderung kontroll ist abh&auml;ngig von Konfigurationsmanagement, die daf&uuml;r sorgt, dass alle &Auml;nderungen an Softwaresystem konsequent und nach organisatorischen Regelungen und Vorschriften sind.</p>\n<p>Eine &Auml;nderung in der Konfiguration des Produkt durchl&auml;uft folgende Schritte.</p>\n<ul class=\"list\">\n<li>\n<p><strong>Identifikation</strong> - Ein Wechsel-Anforderung aus internen oder externen Quelle. Wenn &Auml;nderungsanforderung formell identifiziert, wird es richtig dokumentiert.</p>\n</li>\n<li>\n<p><strong>Validierung</strong> - G&uuml;ltigkeit der &Auml;nderungsanforderung wird &uuml;berpr&uuml;ft und die Handhabung Verfahren best&auml;tigt.</p>\n</li>\n<li>\n<p><strong>Analyse</strong> - Die Auswirkungen der &Auml;nderungsanforderung im Hinblick auf Zeitplan, Kosten und Anstrengungen erforderlich analysiert. Gesamtwirkung des Interessenten &Auml;nderung auf System analysiert.</p>\n</li>\n<li>\n<p><strong>Kontrolle</strong> - Wenn die potenzielle Ver&auml;nderung entweder Auswirkungen zu viele Einheiten im System oder ist es unvermeidlich, ist es zwingend der Zustimmung des Hoch Beh&ouml;rden vor Ver&auml;nderung ist in das System integriert. Es wird entschieden, ob die &Auml;nderung im Wert Einbau oder nicht. Wenn es nicht ist, ist &Auml;nderungsanforderung formell abgelehnt.</p>\n</li>\n<li>\n<p><strong>Ausf&uuml;hrung</strong> - Wenn die vorherige Phase bestimmt, um die &Auml;nderungsanforderung ausf&uuml;hren, diese Phase geeignete Ma&szlig;nahmen ergreifen, um die &Auml;nderung durchzuf&uuml;hren, macht eine gr&uuml;ndliche &Uuml;berarbeitung gegebenenfalls.</p>\n</li>\n<li>\n<p><strong>Schlie&szlig;en Anfrage</strong> - Die &Auml;nderung wird f&uuml;r die korrekte Umsetzung und die Fusion mit dem Rest des Systems &uuml;berpr&uuml;ft. Diese neu gegr&uuml;ndete &Auml;nderung in der Software richtig dokumentiert und wird der Antrag formal geschlossen ist.</p>\n</li>\n</ul>\n<h2>Projektmanagement Tools</h2>\n<p>Das Risiko und die Unsicherheit steigt in Bezug auf die Gr&ouml;&szlig;e des Projekts vielf&auml;ltig, auch wenn das Projekt nach Methoden gesetzt entwickelt.</p>\n<p>Es gibt Werkzeuge zur Verf&uuml;gung, welche die Beihilfe f&uuml;r effektives Projektmanagement. Ein paar sind beschrieben.</p>\n<h3>Gantt-Diagramm</h3>\n<p>Gantt-Diagrammen wurde von Henry Gantt (1917) entwickelt. Es stellt Zeitplan f&uuml;r das Projekt in Bezug auf Zeitr&auml;ume. Es ist ein horizontales Balkendiagramm mit Bars, die Aktivit&auml;ten und die Zeit f&uuml;r die Projektaktivit&auml;ten geplant.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/gantt_chart.png\" alt=\"Gantt-Diagramm\" /></p>\n<h3>PERT-Diagramm</h3>\n<p>PERT (Program Evaluation &amp; Review Technique) Diagramm ist ein Werkzeug, das Projekt als Netzwerkdiagramm zeigt. Es ist in der Lage, die grafisch wichtigsten Ereignisse des Projekts in sowohl parallel als auch in Folge so. Ereignisse, die nach dem anderen eine auftreten, zeigen die Abh&auml;ngigkeit der sp&auml;teren Veranstaltung &uuml;ber die vorherige.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/PERT.png\" alt=\"PERT-Diagramm\" /></p>\n<p>Die Ereignisse werden als nummerierte Knoten gezeigt. Sie sind durch Pfeile gekennzeichnet Darstellung Reihenfolge der Aufgaben in dem Projekt.</p>\n<h3>Ressourcen Histogramm</h3>\n<p>Dies ist ein grafisches Tool, Bar oder Diagramm, Anzahl der Ressourcen (in der Regel Fachkr&auml;fte) &uuml;ber die Zeit f&uuml;r ein Projekt Ereignis (oder Phase) enth&auml;lt. Ressourcen Histogramm ist ein wirksames Instrument f&uuml;r die Personalplanung und Koordination.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/histogram_table.png\" alt=\"Histogramme Tabelle\" /> <img src=\"https://www.tutorialspoint.com/de/software_engineering/images/histogram_chart.png\" alt=\"Histogramme Tabelle\" /></p>\n<h3>Critical Path Analysis</h3>\n<p>Dieses Werkzeug ist n&uuml;tzlich bei der Erkennung interdependenten Aufgaben im Projekt. Es hilft auch, um den k&uuml;rzesten Weg oder kritischen Weg, um das Projekt erfolgreich abschlie&szlig;en zu erfahren. Wie PERT-Diagramm wird jede Veranstaltung zu einem bestimmten Zeitrahmen zugeteilt. Dieses Tool zeigt die Abh&auml;ngigkeit Veranstaltung unter der Annahme, ein Ereignis kann zum n&auml;chsten gehen nur, wenn der vorherige abgeschlossen ist.</p>\n<p>Die Ereignisse werden nach ihrer fr&uuml;hestm&ouml;glichen Startzeit angeordnet. Weg zwischen Anfang und Ende Knoten kritischen Pfad, der nicht weiter reduziert werden k&ouml;nnen und alle Ereignisse in derselben Reihenfolge ausgef&uuml;hrt werden m&uuml;ssen.</p>"
          ]
        },
        {
          "tag_line": "Software-Voraussetzungen",
          "details": [
            "<p>Die Software-Anforderungen sind Beschreibung der Features und Funktionen des Zielsystems. Anforderungen vermitteln die Erwartungen der Nutzer aus der Software-Produkt. Die Anforderungen k&ouml;nnen offensichtlich oder versteckt, bekannt oder unbekannt, erwartet oder unerwartet aus der Sicht des Kunden sein.</p>\n<h2>Requirement Engineering</h2>\n<p>Der Prozess um die Software-Anforderungen aus Kunden, sammeln, analysieren und dokumentieren sie ist bekannt als Requirement Engineering.</p>\n<p>Das Ziel des Requirements Engineering ist die Entwicklung und Pflege anspruchsvoller und aussagekr&auml;ftigen 'System Requirements Specification' -Dokument.</p>\n<h2>Requirement Engineering Prozess</h2>\n<p>Es ist ein Vier-Schritt-Prozess, welche beinhaltet &ndash;</p>\n<ul class=\"list\">\n<li>Machbarkeitsstudie</li>\n<li>Anforderungs Versammlung</li>\n<li>Software Requirement Specification</li>\n<li>Software Requirement Validierung</li>\n</ul>\n<p>Lassen Sie uns sehen, den Prozess kurz</p>\n<h3>Machbarkeitsstudie</h3>\n<p>Wenn der Client n&auml;hert sich dem Unternehmen f&uuml;r das Erhalten der gew&uuml;nschten Produkt entwickelt, kommt es mit groben &Uuml;berblick &uuml;ber das, was alle Funktionen der Software ausf&uuml;hren m&uuml;ssen, und dem alle Funktionen von der Software erwartet.</p>\n<p>Verweisen auf diese Informationen, tut die Analysten eine detaillierte Studie dar&uuml;ber, ob das gew&uuml;nschte System und seine Funktionalit&auml;t sind m&ouml;glich zu entwickeln.</p>\n<p>Diese Machbarkeitsstudie ist auf Ziel der Organisation ausgerichtet. Diese Studie untersucht, ob das Software-Produkt kann praktisch in Bezug auf die Durchf&uuml;hrung von Projekt Beitrag zur Organisation, Kostenzw&auml;nge und nach Werten und Zielen der Organisation materialisiert werden. Es erforscht die technischen Aspekte des Projekts und Produkt wie Benutzerfreundlichkeit, Wartbarkeit, Produktivit&auml;t und Integrationsf&auml;higkeit.</p>\n<p>Der Ausgang dieser Phase sollte eine Machbarkeitsstudie, die eine angemessene Kommentare und Empfehlungen f&uuml;r die Verwaltung dar&uuml;ber, ob oder nicht das Projekt durchgef&uuml;hrt werden enthalten sein sollte.</p>\n<h3>Anforderungs Versammlung</h3>\n<p>Wenn die Machbarkeitsstudie positiv gegen&uuml;ber, die das Projekt startet n&auml;chste Phase mit Raffung Anforderungen des Benutzers. Analysten und Ingenieure kommunizieren mit dem Kunden und Endnutzer, um ihre Ideen auf, was die Software liefern sollten wissen, und welche Funktionen sie die Software enthalten soll.</p>\n<h3>Software Requirement Specification</h3>\n<p>SRS ist ein Dokument, erstellt von Systemanalytiker, nachdem die Anforderungen gesammelt aus verschiedenen Interessengruppen.</p>\n<p>SRS definiert, wie die vorgesehene Software interagieren mit Hardware, externe Schnittstellen, Betriebsgeschwindigkeit, Reaktionszeit des Systems, Portabilit&auml;t von Software &uuml;ber verschiedene Plattformen, Wartbarkeit, Geschwindigkeit der Erholung nach einem Unfall, Sicherheit, Qualit&auml;t, Einschr&auml;nkungen usw.</p>\n<p>Die von Client empfangen Anforderungen sind in nat&uuml;rlicher Sprache geschrieben. Es ist die Verantwortung des Systemanalytiker, die Anforderungen in der Fachsprache zu dokumentieren, so dass sie verstanden und sinnvoll durch den Software-Entwicklungsteam werden.</p>\n<p>SRS sollte sich mit folgenden Features:</p>\n<ul class=\"list\">\n<li>\n<p>Benutzeranforderungen werden in nat&uuml;rlicher Sprache ausgedr&uuml;ckt.</p>\n</li>\n<li>\n<p>Technische Anforderungen sind zum Ausdruck in strukturierte Sprache, die innerhalb der Organisation verwendet wird.</p>\n</li>\n<li>\n<p>Design-Beschreibung sollte in Pseudo-Code geschrieben werden.</p>\n</li>\n<li>\n<p>Format der Formulare und GUI-Bildschirm Drucke.</p>\n</li>\n<li>\n<p>Bedingte und mathematische Notationen f&uuml;r DFDs etc.</p>\n</li>\n</ul>\n<h3>Software Anforderungsvalidierung</h3>\n<p>Nach Anforderungsspezifikationen sind entwickelt, die in diesem Dokument genannten Anforderungen werden validiert. Benutzer k&ouml;nnten f&uuml;r illegale, unpraktische L&ouml;sung fragen und Sachverst&auml;ndigen die Anforderungen falsch interpretieren. Dies f&uuml;hrt zu enormen Anstieg der Kosten, wenn nicht im Keim erstickt. Anforderungen k&ouml;nnen gegen folgende Bedingungen &uuml;berpr&uuml;ft werden -</p>\n<ul class=\"list\">\n<li>Wenn sie k&ouml;nnen praktisch umgesetzt</li>\n<li>Wenn sie g&uuml;ltig und wie pro Funktionalit&auml;t und Dom&auml;ne der Software sind</li>\n<li>Wenn es irgendwelche Unklarheiten</li>\n<li>Wenn sie abgeschlossen sind</li>\n<li>Wenn sie demonstriert werden k&ouml;nnen</li>\n</ul>\n<h2>Anforderungs Erhebung Prozess</h2>\n<p>Anforderungserhebung Prozess kann mit Hilfe der folloiwng Diagramm dargestellt werden:</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/requirement_elicitation_process.png\" alt=\"Voraussetzung Erhebung Prozess\" /></p>\n<ul class=\"list\">\n<li>\n<p><strong>Anforderungs Versammlung</strong> - Die Entwickler diskutieren mit den Kunden und Endanwendern und wissen, dass ihre Erwartungen an die Software.</p>\n</li>\n<li>\n<p><strong>Organisieren Anforderungen</strong> - Die Entwickler priorisieren und ordnen Sie die Anforderungen in der Reihenfolge ihrer Bedeutung, Dringlichkeit und Komfort.</p>\n</li>\n<li>\n<p><strong>Verhandlung &amp; Diskussion</strong> - wenn Anforderungen sind mehrdeutig oder gibt es einige Konflikte in Anforderungen der verschiedenen Beteiligten, wenn sie sind, es wird dann ausgehandelt und mit den Beteiligten diskutiert. Anforderungen k&ouml;nnen dann priorisiert und vern&uuml;nftigerweise beeintr&auml;chtigt werden.</p>\n<p>Die Anforderungen kommen aus verschiedenen Interessengruppen Um die Mehrdeutigkeit und Konflikte zu entfernen, werden sie aus Gr&uuml;nden der Klarheit und Richtigkeit diskutiert. Unrealistische Anforderungen sind recht gef&auml;hrdet.</p>\n</li>\n<li>\n<p><strong>Dokumentation</strong> - Alle formellen und informellen, funktionalen und nicht-funktionalen Anforderungen werden dokumentiert und Verf&uuml;gung gestellt f&uuml;r die n&auml;chste Phase Verarbeitung zur.</p>\n</li>\n</ul>\n<h2>Anforderungsermittlungstechniken</h2>\n<p>Anforderungserhebung ist der Prozess, um die Anforderungen an ein Software-System soll durch die Kommunikation mit Kunden, Endverbraucher, Systembenutzer und andere, die eine Beteiligung an der Software-System-Entwicklung haben das herauszufinden.</p>\n<p>Es gibt verschiedene Wege, um Anforderungen zu entdecken.</p>\n<h3>Interviews</h3>\n<p>Interviews sind starke Medium, zu sammel Anforderungen. Organisation kann verschiedene Arten von Interviews durchzuf&uuml;hren:</p>\n<ul class=\"list\">\n<li>\n<p>Strukturierte (geschlossen) Interviews, in denen jeder einzelne Informationen zu sammeln, wird im Voraus entschieden, sie folgen Muster und Gegenstand von Diskussionen fest.</p>\n</li>\n<li>\n<p>Non-strukturiert (offen) Interviews, in denen Informationen zu sammeln, ist nicht im Voraus entschieden, flexibler und weniger voreingenommen.</p>\n</li>\n<li>\n<p>Oral interviews</p>\n</li>\n<li>\n<p>Schriftliche Interviews</p>\n</li>\n<li>\n<p>One-to-One-Interviews, die zwischen zwei Personen &uuml;ber den Tisch gehalten werden.</p>\n</li>\n<li>\n<p>Gruppeninterviews, die zwischen Teilnehmergruppen gehalten werden. Sie helfen, die fehlenden Anforderung aufzudecken, wie viele Menschen betroffen sind.</p>\n</li>\n</ul>\n<h3>Umfragen</h3>\n<p>Organisation kann Umfragen unter verschiedenen Interessengruppen durch Abfrage &uuml;ber ihre Erwartungen und Anforderungen aus dem kommenden System durchzuf&uuml;hren.</p>\n<h3>Fragebogen</h3>\n<p>Ein Dokument mit vordefinierten Reihe von objektiven Fragen und entsprechenden Optionen ist handed zu allen Interessengruppen beantworten welche sind die gesammelt und zusammengestellt.</p>\n<p>Ein Nachteil dieser Technik ist, wenn eine Option f&uuml;r einige Problem wird nicht im Fragebogen erw&auml;hnt, das Problem k&ouml;nnte unbeaufsichtigt gelassen werden.</p>\n<h3>Task-Analyse</h3>\n<p>Team von Ingenieuren und Entwicklern kann den Betrieb, f&uuml;r die das neue System ist erforderlich, zu analysieren. Wenn der Client bereits &uuml;ber eine Software auf bestimmte Operation durchzuf&uuml;hren, wird untersucht und Anforderungen der vorgeschlagenen System gesammelt werden.</p>\n<h3>Domain-Analyse</h3>\n<p>Jede Software f&auml;llt in eine Dom&auml;ne Kategorie. Die Experten Menschen in der Dom&auml;ne kann eine gro&szlig;e Hilfe, um allgemeine und spezifische Anforderungen zu analysieren.</p>\n<h3>Brainstorming</h3>\n<p>Eine informelle Debatte zwischen den verschiedenen Interessengruppen statt und alle ihre Eing&auml;nge f&uuml;r weitere Bedarfsanalyse erfasst.</p>\n<h3>Prototyping</h3>\n<p>Prototyping baut Benutzeroberfl&auml;che ohne Zugabe von Detail-Funktionalit&auml;t f&uuml;r Benutzer, um die Funktionen des Software-Produkt soll zu interpretieren. Es hilft woraus eine bessere Idee von Anforderungen. Wenn es keine Software Endkunden f&uuml;r Referenz Entwicklers installiert und der Client ist nicht bekannt, ihre eigenen Anforderungen der Entwickler erzeugt einen Prototyp eingangs erw&auml;hnten Anforderungen. Der Prototyp wird auf dem Client angezeigt und der R&uuml;ckkopplung festgestellt. Das Kunden-Feedback dient als Eingang f&uuml;r Anforderung Versammlung.</p>\n<h3>Beobachtung</h3>\n<p>Team von Experten besuchen Organisation oder am Arbeitsplatz des Kunden. Sie beobachten die eigentliche Arbeit der bereits installierten Systemen. Sie beobachten den Arbeitsablauf am Ende des Kunden und wie Ausf&uuml;hrungsprobleme behandelt werden. Das Team selbst einige Schlussfolgerungen gezogen, welche Hilfe die Anforderungen aus der Software erwartet zu bilden.</p>\n<h2>Software-Anforderungen Eigenschaften</h2>\n<p>Versammlung Software-Anforderungen ist die Grundlage des gesamten Software-Entwicklungsprojekt. Daher m&uuml;ssen sie klare, richtige und gut definiert.</p>\n<p>eine komplette Software-Pflichtenheft muss sein:</p>\n<ul class=\"list\">\n<li>Klar</li>\n<li>Richtig</li>\n<li>Konsequente</li>\n<li>Coherent</li>\n<li>Verst&auml;ndliche</li>\n<li>Ver&auml;nderbare</li>\n<li>pr&uuml;fbare</li>\n<li>Priorisierte</li>\n<li>Eindeutige</li>\n<li>Nachvollziehbare</li>\n<li>glaubw&uuml;rdige Quelle</li>\n</ul>\n<h2>Software-Anforderungen</h2>\n<p>Wir sollten versuchen zu verstehen, welche Art von Anforderungen k&ouml;nnen in der Forderung Ausl&ouml;sephase entstehen und welche Arten von Anforderungen aus dem Software-System erwartet werden.</p>\n<p>breit Softwareanforderungen sollten in zwei Kategorien eingeteilt werden:</p>\n<h3>Funktionale Anforderungen</h3>\n<p>Anforderungen, die funktionalen Aspekt der Software fallen in diese Kategorie zu tun haben.</p>\n<p>Sie definieren Funktionen und Funktionalit&auml;t innerhalb und aus der Software-System.</p>\n<h4>Beispiele -</h4>\n<ul class=\"list\">\n<li>Suche Option, um Benutzer gegeben, um aus verschiedenen Rechnungen zu suchen.</li>\n<li>Benutzer sollten von jedem Bericht an das Management per Post zu.</li>\n<li>Benutzer k&ouml;nnen in Gruppen eingeteilt werden und Gruppen k&ouml;nnen gesonderte Rechte gegeben werden.</li>\n<li>Sollte Gesch&auml;ftsregeln und administrative Funktionen zu erf&uuml;llen.</li>\n<li>Software h&auml;lt intakte Abw&auml;rtskompatibilit&auml;t entwickelt.</li>\n</ul>\n<h3>nicht-funktionalen Anforderungen</h3>\n<p>Anforderungen, die nicht mit funktionalen Aspekt von Software verbunden sind, fallen in diese Kategorie. Sie sind implizit oder erwarteten Eigenschaften von Software, die Nutzer Annahme zu machen.</p>\n<p>Nicht-funktionale Anforderungen sind -</p>\n<ul class=\"list\">\n<li>Sicherheit</li>\n<li>Protokollierung</li>\n<li>Speicher</li>\n<li>Konfiguration</li>\n<li>Performance</li>\n<li>Kosten</li>\n<li>Interoperabilit&auml;t</li>\n<li>Flexibilit&auml;t</li>\n<li>Disaster recovery</li>\n<li>Accessibility</li>\n</ul>\n<p>Die Anforderungen sind logisch als kategorisiert</p>\n<ul class=\"list\">\n<li>\n<p><strong>Muss</strong> : Software kann nicht gesagt werden, Betriebs ohne sie.</p>\n</li>\n<li>\n<p><strong>sollte</strong> : Verbesserung der Funktionalit&auml;t von Software.</p>\n</li>\n<li>\n<p><strong>H&auml;tte</strong> : Software kann immer noch funktionieren mit diesen Anforderungen.</p>\n</li>\n<li>\n<p><strong>Merkliste</strong> : Diese Anforderungen gelten nicht f&uuml;r Ziele der Software-Karte.</p>\n</li>\n</ul>\n<p>W&auml;hrend der Entwicklung von Software, \"must have\" muss umgesetzt werden, \"sollte\" ist eine Frage der Debatte mit den Betroffenen und Negation, w&auml;hrend \"k&ouml;nnte\" und \"Wunschliste\" f&uuml;r Software-Updates gehalten werden.</p>\n<h2>User Interface Anforderungen</h2>\n<p>UI ist ein wichtiger Teil der Software oder Hardware oder Hybrid-System. Eine Software ist weitgehend akzeptiert, wenn es sich -</p>\n<ul class=\"list\">\n<li>einfach zu bedienen</li>\n<li>schnelle Reaktion</li>\n<li>effektiv Umgang mit operationellen Fehler</li>\n<li>Bereitstellung von einfachen, aber konsistente Benutzeroberfl&auml;che</li>\n</ul>\n<p>Benutzerakzeptanz majorly davon abh&auml;ngig, wie Benutzer die Software verwenden. UI ist die einzige M&ouml;glichkeit f&uuml;r die Nutzer, um das System zu erkennen. Ein gut funktionierendes Softwaresystem muss auch mit attraktiven, klare, konsistente und ansprechende Benutzeroberfl&auml;che ausgestattet werden. Ansonsten werden die Funktionalit&auml;ten der Software-System kann in bequemer Weise verwendet werden. Ein System wird gut sein, wenn es sieht Mittel, um es effizient zu nutzen. Benutzerschnittstellenanforderungen werden im Folgenden kurz erw&auml;hnt -</p>\n<ul class=\"list\">\n<li>Content-Pr&auml;sentation</li>\n<li>Einfache Navigation</li>\n<li>Einfache Schnittstelle</li>\n<li>Responsive</li>\n<li>Konsequente UI-Elemente</li>\n<li>R&uuml;ck Mechanismus</li>\n<li>Standardeinstellungen</li>\n<li>Gezielte Layout</li>\n<li>Strategische Verwendung von Farbe und Textur.</li>\n<li>Geben Sie Hilfeinformationen</li>\n<li>Benutzer zentrierten Ansatz</li>\n<li>Ansichtseinstellungen basierend Group</li>\n</ul>\n<h2>Software System Analyst</h2>\n<p>System Analyst in einer IT-Organisation ist eine Person, die die Anforderungen der vorgeschlagenen System analysiert und stellt sicher, dass die Anforderungen konzipiert und richtig und korrekt dokumentiert. Rolle eines Analysten beginnt bei der Software-Analyse der Phase-SDLC. Es ist die Verantwortung des Analytikers, um sicherzustellen, dass die entwickelte Software die Anforderungen des Kunden erf&uuml;llt.</p>\n<p>System-Analysten haben folgende Aufgaben:</p>\n<ul class=\"list\">\n<li>\n<p>Analyse und das Verst&auml;ndnis der Anforderungen bestimmt Software.</p>\n</li>\n<li>\n<p>Verstehen, wie das Projekt in den Organisationsziele beitragen.</p>\n</li>\n<li>\n<p>die Quellen f&uuml;r die Anforderung.</p>\n</li>\n<li>\n<p>Validierung von Anforderungen.</p>\n</li>\n<li>\n<p>Entwicklung und Umsetzung von Anforderungsmanagement Plan.</p>\n</li>\n<li>\n<p>Dokumentation von Gesch&auml;fts, technische, Prozess-und Produktanforderungen.</p>\n</li>\n<li>\n<p>Koordination mit Kunden, um Anforderungen zu priorisieren und zu entfernen und Mehrdeutigkeit.</p>\n</li>\n<li>\n<p>Abschlie&szlig;en Akzeptanzkriterien mit Kunden und anderen Interessengruppen.</p>\n</li>\n</ul>\n<h2>Software-Metriken und Ma&szlig;nahmen</h2>\n<p>Software k&ouml;nnen Ma&szlig;nahmen als einen Prozess der Quantifizierung und als Symbol f&uuml;r verschiedene Attribute und Aspekte der Software zu verstehen.</p>\n<p>Software-Metriken liefern Ma&szlig;nahmen f&uuml;r verschiedene Aspekte der Software-Prozess-und Software-Produkt.</p>\n<p>Software Ma&szlig;nahmen grundlegende Anforderung des Software Engineering. Sie helfen nicht nur, um den Software-Entwicklungsprozess zu steuern, sondern auch helfen, die Qualit&auml;t der ultimative Produkt ausgezeichnet zu halten.</p>\n<p>Laut Tom DeMarco, eine (Software Engineer) : \"Sie k&ouml;nnen nicht kontrollieren, was man nicht messen kann.\" Durch sein Wort, es ist sehr deutlich, wie wichtig Ma&szlig;nahmen Software.</p>\n<p>Lassen Sie uns sehen einige Software-Metriken:</p>\n<ul class=\"list\">\n<li>\n<p><strong>Gr&ouml;&szlig;e Metrics</strong> - LOC (Lines of Code), meist in Tausenden von gelieferten Quellcode-Zeilen, wie KLOC bezeichnet berechnet</p>\n<p>Function-Point-Count ist Ma&szlig; f&uuml;r die Funktionalit&auml;t von der Software zur Verf&uuml;gung gestellt. Function-Point-Z&auml;hlung definiert die Gr&ouml;&szlig;e des funktionalen Aspekt der Software.</p>\n</li>\n<li>\n<p><strong>Komplexit&auml;t Metriken</strong> - Zyklomatische Komplexit&auml;t McCabe quantifiziert die obere Grenze der Anzahl der unabh&auml;ngigen Pfade in einem Programm, das als Komplexit&auml;t des Programms oder seine Module wahrgenommen wird. Es ist in Bezug auf Konzepte der Graphentheorie, indem Kontrollflussgraphen repr&auml;sentiert.</p>\n</li>\n<li>\n<p><strong>Quality Metrics</strong> - M&auml;ngel, deren Art und Ursachen, Folgen, die Intensit&auml;t der Schwere und ihre Auswirkungen definieren die Qualit&auml;t des Produktes.</p>\n<p>Die Anzahl der Defekte in Entwicklungsprozess und der Anzahl der M&auml;ngel durch den Kunden gemeldet, nachdem das Produkt installiert oder am Client-Ende geliefert gefunden, definieren Qualit&auml;t des Produkts.</p>\n</li>\n<li>\n<p><strong>Prozessmetriken</strong> - In verschiedenen Phasen des SDLC, den Methoden und Werkzeugen, die Unternehmensstandards und die Leistung der Entwicklung sind Software-Prozessmetriken.</p>\n</li>\n<li>\n<p><strong>Resource Metrics</strong> - M&uuml;he, Zeit und verschiedenen Ressourcen verwendet, stellt Metriken f&uuml;r Ressourcenmessung.</p>\n</li>\n</ul>"
          ]
        },        {
          "tag_line": "Software Design-Grundlagen",
          "details": [
            "Software-design ist ein Prozess zu transformieren Benutzeranforderungen in einige geeignete Form, die die Programmierer in der software-codierung und umsetzung hilft.\n\nFür Beurteilung Anforderungen der Nutzer, wird ein SRS (SoftwareVoraussetzung Specification)-Dokument ist erstellt, während für die Kodierung und Implementierung, gibt es einen Bedarf von mehr spezifische und detaillierte Anforderungen in Software Begriffe. Der Ausgang dieses Prozesses können Direkt betragen gebrauchten in die Umsetzung in Programmiersprachen.\n\nSoftware-Design ist der erste Schritt in SDLC (Software Design-Lebenszyklus), die die Konzentration von Problembereich, zu Lösungsbereich bewegt. Es wird versucht zu angeben wie man nachkommen die Anforderungen erwähnt in SRS.\nSoftware Gestaltungsebenen\n\nSoftware-Design Erträge drei Ebenen der Ergebnisse:\n\n    Architectural Design - The architectural design is the highest abstract version of the system. It identifies the software as a system with many componentDie Architectural Design ist der höchste abstrakte Version des Systems. Es identifiziert die Software als ein System mit vielen Komponenten, miteinander wechselwirkenden. Auf dieser Ebene bekommen die Designer die Idee der vorgeschlagenen Lösung Domäne. s interacting with each other. At this level, the designers get the idea of proposed solution domain.\n\n    High-Level-Design - Die High-Level-Design bricht die \"einzelne Entität-mehrfach komponenten\" -Konzept der architektonischen Gestaltung in weniger abstrahiert Blick auf Teilsysteme und Module und zeigt ihre Wechselwirkung untereinander. High-Level-Design konzentriert sich auf wie das System entlang mit allen von seine Komponenten können in Form von Modulen implementiert werden. Es erkennt modulare Struktur jedes Untersystem und ihre Beziehung und Interaktion unter einander.\n\n    Detailed Design - Detailed design deals with the implementation part of what is seen as a system and its sub-systems in the previous two designs. It is more detailed towards modules and their implementations. It defines logical structure of each module and their interfaces to communicate with other modules.\n\nModularisierung\n\nModularisierung ist eine Technik, um ein Softwaresystem in mehrfach diskrete und unabhängige Module, die erwartet werden, daß die fähig von Durchführung Aufgabe (n) unabhängig voneinander. Diese Module kann arbeiten, wie Basiskonstrukte für die gesamte Software. Designer neigen dazu Design Module, solche dass sie ausgeführt werden können und / oder separat und unabhängig zusammengestellt.\n\nModulares Design unbeabsichtigt folgt den Regeln der 'aufteilen und erobern' Problemlösungsstrategie ist dies, weil es gibt viele andere Vorteile, die mit den modularen entwurf eines Software beigefügt.\n\nVorteil der Modularisierung:\n\n    Kleinere Bauteile sind leichter zu pflegen\n    Programm kann auf Basis funktioneller Aspekte unterteilt werden\n    Gewünschten Abstraktionsebene kann im Programm gebracht werden\n    Komponenten mit hoher Kohäsion können sein wiederverwendet werden wieder\n    Die gleichzeitige Ausführung ermöglicht werden kann\n    gewünschte aus Sicherheit Aspekt\n\nNebenläufigkeit\n\nZurück in der Zeit, Alle Software sind gemeint auszuführenden werden sequentiell. Durch sequentielle Ausführung meinen wir, dass die codierte Anweisung sein wird ausgeführt einer nacheinander impliziert nur ein Teil des Programms ist zu jeder gegebenen Zeit aktiviert werden. Sprich, hat ein Software mehrere Module, dann nur eine der gesamten Module können sein aktiv zu jedem Zeitpunkt der Ausführung gefunden.\n\nIn Software-Design, wird die Nebenläufigkeit ist umgesetzt durch Aufteilung der Software in mehrere unabhängige Einheiten der Ausführung, wie Module und Ausführung ihnen in parallel. In anderen Worten Parallelität Stellt fähigkeit zu die software, hinrichten mehr als ein Teil des Codes parallel zu einander.\n\nEs ist notwendig für die Programmierer und Designern zu erkennen, diejenigen Module, welche sein kann gemacht die parallele Ausführung werden.\nBeispiel\n\nDie Rechtschreibprüfung Merkmal in Textverarbeitung ist ein Modul von Software, welche entlang Seite der Textverarbeitung selbst läufe.\nKopplung und Kohäsion\n\nWenn ein Software-Programm ist modularisiert, seine Aufgaben sind geteilt in mehrere Module, basierend auf einigen Charakteristik. Wie wir wissen, werden die Module sind Satz von Anweisungen, legte zusammenfügen in Ordnung zu erzielen einige Aufgabe. Sie sind allerdings, wie einzelne Entität betrachtet, sondern können miteinander verweisen, zusammen zu arbeiten. Es gibt Maßnahmen, mit denen die Qualität der Design der Module und deren Interaktionen unter ihnen gemessen können werden. Diese Maßnahmen werden Kopplung und Kohäsion genannt.\nKohäsion\n\nZusammenhalt ist ein Maß, dass definiert den Grad der inner - Zuverlässigkeit innerhalb von Elementen eines Moduls. Je größer der Zusammenhalt, desto besser ist das Programm-Design.\n\nEs gibt sieben Arten von Zusammenhalt, nämlich –\n\n    Co-Neben Zusammenhalt - Es ist ungeplante und zufällig Zusammenhalt, welche könnte sein das Ergebnis des Brechens das Programm in kleinere Module aus Gründen der modularisierung. Weil es ungeplant ist, können es dienen Verwirrung zu die Programmierer und ist allgemein Nicht akzeptiert.\n\n    logischen Zusammenhalt - Wenn logisch kategorisiert Elemente werden zusammen in einem Modul setzen, heißt es logische Zusammenhalt.\n\n    Temporal Zusammenhalt - Wenn Elemente des Moduls sind so organisiert, dass sie sind bei einem ähnlichen Punkt in Zeitpunkt verarbeitet wird, wird es namens als temporal Zusammenhalt.\n\n    prozedurale Zusammenhalt - Wenn Elemente des Moduls werden gruppiert zusammen, die sind Ausgeführt Sequentiell in Ordnung zu Ausführt ein aufgabe es ist namens Verfahrens Zusammenhalt.\n\n    Communicational Zusammenhalt - Wenn Elemente des Moduls werden gruppiert zusammen, die sind Ausgeführt Sequentiell und die Arbeit an gleichen Daten (Information), wird es als Kommunikations Zusammenhalt.\n\n    sequentiell Zusammenhalt - Wenn Elemente des Moduls werden gruppiert da die Ausgabe eines Elements dient als Eingang zu einem anderen und so weiter, wird er als sequentielle Zusammenhalt.\n\n    funktionell Zusammenhalt - Es gilt als der sein höchste Grad der Zusammenhalt, und es wird höchst erwartet. Elemente des Moduls in der Funktionalen Zusammenhalt sind gruppiert, weil sie alle zu einem einzigen, gut definierte Funktion beitragen. Es kann auch wiederverwendet.\n\nKopplung\n\nKupplung ist eine Maßnahme, die das Niveau der inter Verlässlichkeit unter den Modulen eines Programms definiert. Es erzählt bei welcher Ebene die Module einmischen und miteinander interagieren. Je niedriger die Kopplungs, desto besser ist das Programm.\n\nEs gibt fünf Stufen der Kopplung, nämlich -\n\n    Inhalt Kopplung - Wenn ein Modul kann direkt auf oder zu modifizieren oder verweisen auf den Inhalt eines anderen Moduls, wird es ist namens Inhaltsebene Kupplung.\n\n    gemeinsamen Kopplung - Wenn mehrere Module haben lesen und schreiben Zugriff auf einige globale Daten, heißt es gemeinsame oder globale Kopplung.\n\n    Kontrolle Kopplung - Zwei Module sind namens Kontrolle-gekoppelt wenn einer von ihnen entscheidet die Funktion des anderen Moduls oder ändert seine Strömung der Ausführung.\n\n    Stempel Kopplung - Wenn mehrere Module Aktie gemeinsame Datenstruktur und die Arbeit an verschiedenen Teil davon, es ist namens Stempel Kupplung.\n\n    Daten Kopplung - Datenkopplung ist, wenn zwei Module miteinander interagieren, durch Mittel von weitergabe von Daten (als Parameter). Wenn ein Modul Pässe Datenstruktur als Parameter, dann das Empfangen modul sollte alle seine Komponenten zu verwenden.\n\nIdealerweise keine Kopplung ist als der Beste sein.\nDesignverifikation\n\nDie Ausgabe des Software-Design-Prozess ist die Design-Dokumentation, pseudo-Codes, detaillierte logische Diagramme, Prozessdiagramme und detaillierte Beschreibung aller funktionalen oder nicht-funktionalen Anforderungen.\n\nDie nächste Phase, die die Umsetzung der Software ist, hängt von allen Ausgänge erwähnt oben genannten.\n\nEs ist dann wird notwendig, um verifizieren der Ausgabe, bevor zu der nächsten Phase Vorgehen. Die frühe jeder Fehlgriff erkannt wird, desto besser ist es, oder es bis zur Prüfung des Produkts nicht erkannt werden könnten. Wenn die Ausgänge der Entwurfsphase sind in der formalen Notation Form, dann die damit verbundenen Tools für Verifikation sollte anderweitig verwendet werden eine gründliche Design Review können zur Verifikation und Validierung verwendet werden.\n\nDurch strukturierten Verifizierung Ansatz Rezensenten können entdecken Defekte, die durch mit Blick auf einige Bedingungen verursacht werden können, zu erkennen. Ein gutes Design Rezension ist wichtig für eine gute Software-Design, Präzision und Qualität."
          ]
        },        {
          "tag_line": "Software Analyse & Design Tools",
          "details": [
            "<p>Software-Analyse und-Design umfasst alle Aktivit&auml;ten, die die Transformation der Anforderungsspezifikation in die Umsetzung zu helfen. Erfordernis Pflichtenheft angeben alle funktionalen und nicht-funktionalen Erwartungen aus die Software. Diese AnforderungsPflichtenheft kommen in Gestalt von Menschen lesbaren und verst&auml;ndlichen Dokumente, auf die ein Computer nichts zu tun hat.</p>\n<p>Software-Analyse und Design ist die Zwischenstufe, die f&uuml;r Menschen lesbare Anforderungen in tats&auml;chliche Code verwandelt werden.</p>\n<p>Lassen Sie uns sehen wenige Analyse und Design-Tools genutzt von Software-Designer.</p>\n<h2>Daten Fluss Diagramm</h2>\n<p>Datenflussdiagramm ist eine graphische Darstellung des Fluss von Daten in einem Informationssystem. Es ist in der Lage, ankommende Datenstrom beschreiben, abgehenden Datenfluss und gespeicherten Daten. Das DFD gabenkein erw&auml;hnt, irgendetwas &uuml;ber wie Daten durch das System flie&szlig;t.</p>\n<p>Es ist ein prominenter Unterschied zwischen DFD und Flussdiagramm. Das Flussdiagramm zeigt Ablaufsteuerung in Programm-Module. DFDs zeigen den Datenfluss in dem System auf verschiedenen Ebenen. DFD hat jede Kontrolle oder Zweigelemente enthalten.</p>\n<h3>Typen von DFD</h3>\n<p>Datenflussdiagramme sind entweder logische oder physikalische.</p>\n<ul class=\"list\">\n<li>\n<p><strong>Logische DFD</strong> - Diese Art von DFD konzentriert sich auf die Systemprozesses und Fluss von Daten in der system. For Beispiel weise in einem Banksoftwaresystem, wie Daten verschoben zwischen verschiedenen Einheiten.</p>\n</li>\n<li>\n<p><strong>Physikalische DFD</strong> - Diese Art von DFD zeigt, wie der Datenfluss tats&auml;chlich im System implementiert. Es ist mehr spezifisch und in der N&auml;he der Umsetzung.</p>\n</li>\n</ul>\n<h3>DFD Komponente</h3>\n<p>DFD kann darstellen Quelle, Ziel, Speicherung und Fluss von Daten unter Verwendung mit dem folgenden Satz von Komponenten.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/DFD_components.png\" alt=\"DFD Komponenten\" /></p>\n<ul class=\"list\">\n<li>\n<p><strong>Entit&auml;ten</strong> - Entities sind Quelle und Ziel der Informationsdaten. Entities sind von einem Rechtecke mit ihren jeweiligen Namen vertreten.</p>\n</li>\n<li>\n<p><strong>Prozess</strong> - Aktivit&auml;ten und Aktionen genommen auf den Daten werden durch Kreis-oder Rundkantenrechtecke dargestellt.</p>\n</li>\n<li>\n<p><strong>Datenspeicherung</strong> - Es gibt zwei Varianten der Datenspeicherung - es kann entweder vertreten in Form eines Rechtecks \u200B\u200Bmit der Abwesenheit der beide kleinere Seiten oder als Open-Side-Rechteck mit nur einer Seite fehlt.</p>\n</li>\n<li>\n<p><strong>Daten Fluss</strong> - Bewegung der Daten ist durch spitze Pfeile dargestellt. Daten Bewegung wird von der Basis des Pfeil als seine Quelle in Richtung Spitze des Pfeils als Ziel.</p>\n</li>\n</ul>\n<h3>Ebenen des DFD</h3>\n<ul class=\"list\">\n<li>\n<p><strong>Ebene 0</strong> - H&ouml;chsten Abstraktionsebene DFD wird bekannt als Ebene 0 DFD, was zeigen die gesamte Informationssystem als einem ein Diagramm verheimlichen all die zugrunde liegenden details. Level 0 DFDs werden auch als Kontextebene DFDs bekannt.</p>\n<img src=\"https://www.tutorialspoint.com/de/software_engineering/images/DFD_level_zero.png\" alt=\"Ebene 0\" /></li>\n<li>\n<p><strong>Ebene 1</strong> - Die Ebene 0 DFD wird in spezifischere, Level 1 DFD gebrochen. Ebene 1 zeigt DFD Grundmodule in dem System und den Fluss von Daten unter den verschiedenen Modulen. Level 1 DFD erw&auml;hnt auch grundlegende Prozesse und Quellen von Informationen.</p>\n<img src=\"https://www.tutorialspoint.com/de/software_engineering/images/DFD_level_one.png\" alt=\"Ebene 1\" /></li>\n<li>\n<p><strong>Ebene 2</strong> - Auf dieser Ebene zeigt DFD wie Daten flie&szlig;t innen den Module genannten in Level 1.</p>\n<p>H&ouml;her ebene DFDs kann verwandelt in mehr spezifisch ebene DFDs mit tiefere ebene von Verst&auml;ndnis es sei denn die gew&uuml;nschte ebene von Spezifikationen ist erreicht.</p>\n</li>\n</ul>\n<h2>Struktur Charts</h2>\n<p>Struktur-Charts ist ein Chart aus Datenflussdiagramm abgeleiteten. Es stellt das System in mehr Detail als DFD. Es bricht das gesamte System in niedrigsten Funktionsmodule, beschreibt Funktionen und Unterfunktionen von jedem Module von des Systems in einem gr&ouml;&szlig;eren Detail als DFD.</p>\n<p>Structure chart represents hierarchical structure of modules. At each layer a specific task is performed.</p>\n<p>Hier sind die in der Konstruktion der Struktur-Charts verwendeten Symbole -</p>\n<ul class=\"list\">\n<li>\n<p><strong>Module</strong> - Es vertritt prozess oder Unterroutine oder Aufgabe. Ein Steuermodulzweige, zu mehr als einen Untermodul. Bibliotheksmodule sind wiederverwendbar und aufrufbaren von jedem Modul.</p>\n<img src=\"https://www.tutorialspoint.com/de/software_engineering/images/SC_modules.png\" alt=\"SC-Module\" /></li>\n<li>\n<p><strong>Bedingung</strong> - Es wird von kleinen Diamanten an der Basis des Moduls vertreten. Es zeigt, dass Steuermodul kann irgendeinem der Unter routine basierend auf manche Bedingung selektieren.</p>\n<img src=\"https://www.tutorialspoint.com/de/software_engineering/images/SC_condition.png\" alt=\"SC Zustand\" /></li>\n<li>\n<p><strong>Sprung</strong> - Ein Pfeil ist gezeigt zeigen im Inneren des Moduls zu zeigen, dass die Steuerung in der Mitte des Untermodul.</p>\n<img src=\"https://www.tutorialspoint.com/de/software_engineering/images/SC_module_jump.png\" alt=\"SC-Modul Jump\" /></li>\n<li>\n<p><strong>Schleife</strong> - Ein gekr&uuml;mmter Pfeil stellt Schleife in dem Modul. Alle Sub-Module abgedeckt durch schleife Wiederholen Sie Ausf&uuml;hrung von Modul.</p>\n<img src=\"https://www.tutorialspoint.com/de/software_engineering/images/SC_loop.png\" alt=\"SC-Schleife\" /></li>\n<li>\n<p><strong>Daten Fluss</strong> - Ein gerichteter Pfeil mit leeren Kreis am Ende steht f&uuml;r den Datenfluss.</p>\n<img src=\"https://www.tutorialspoint.com/de/software_engineering/images/SC_dataflow.png\" alt=\"SC Datenfluss\" /></li>\n<li>\n<p><strong>control Fluss</strong> - Ein gerichteter Pfeil mit gef&uuml;llten Kreis am Ende steht f&uuml;r Kontrollfluss.</p>\n<img src=\"https://www.tutorialspoint.com/de/software_engineering/images/SC_controlflow.png\" alt=\"SC Kontrollfluss\" /></li>\n</ul>\n<h2>HIPO Diagramm</h2>\n<p>HIPO (Hierarchical Eingangsprozess Output)-Diagramm ist eine Kombination von zwei organisierten Verfahren, um das System zu analysieren und liefern die Mittel der Dokumentation. HIPO Modell wurde von IBM im Jahr 1970 entwickelt.</p>\n<p>HIPO Diagramm stellt die Hierarchie der Module in der Software-System. Analyst verwendet HIPO Diagramm, in Ordnung um High-Level-Ansicht von Systemfunktionen zu erhalten. Es zersetzt Funktionen in Teilfunktionen in hierarchischer Weise. Es zeigt die vom System durchgef&uuml;hrten Funktionen.</p>\n<p>HIPO Diagramme sind gut zu Dokumentationszwecken. Ihre grafische Darstellung macht es leichter f&uuml;r Designer und Manager, die bildliche Vorstellung von der Systems Struktur zu erhalten.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/HIPO_Diagram.png\" alt=\"HIPO Diagramme\" /></p>\n<p>Im Gegensatz zu den B&ouml;rsengang (Eingangsprozess Output)-Diagramm, das den Ablauf der Steuerung und Daten in einem Modul zeigt, HIPO bietet keinen &uuml;ber beliebig Informationen den Datenfluss oder Ablaufsteuerung.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/IPO_chart.png\" alt=\"IPO-Diagramm\" /></p>\n<h3>Beispiel</h3>\n<p>Beide Teile des HIPO Diagramm, Hierarchische Darstellung und IPO-Diagramm sind gebrauchte f&uuml;r Struktur-Design von Software-Programm ebenso gut wie die Dokumentation der gleichen.</p>\n<h2>Strukturierte Englisch</h2>\n<p>Die meisten Programmierer sind sich nicht bewusst der gro&szlig;en Bild der Software, so sie auf das, was ihre Manager erz&auml;hlen , sie tun nur verlassen. Es ist die verantwortung h&ouml;here Software-Management um genaue Informationen zu den Programmierern, um genaue noch schnellen Code zu entwickeln.</p>\n<p>Andere Formen der Methoden, welche Graphen oder Diagramme verwenden, k&ouml;nnen sind manchmal von verschiedenen Menschen unterschiedlich interpretiert.</p>\n<p>Daher, Analysten und Designern der Software kommen mit Tools wie Strukturierte Englisch. Es ist nichts aber die Beschreibung dessen, was erforderlich ist, um Code und wie es um Code es. Strukturierte Englisch hilft dem Programmierer, fehlerfreiem Code zu schreiben.</p>\n<p>Andere Form von Methoden, welche Graphen oder Diagramme verwenden, k&ouml;nnen sind manchmal von verschiedenen Menschen unterschiedlich interpretiert. Hier sind sowohl Strukturierte Englisch und Pseudo-Code versucht den, zu mildern dass Verst&auml;ndnis L&uuml;cke.</p>\n<p>Strukturierte Englisch ist es Verwendungen plain English W&ouml;rter in strukturierten Programmierparadigma. Es ist nicht die ultimative Code, sondern eine Art der Beschreibung, was ist erforderlich, um Code und wie es um Code es. Im Folgenden einige Tokens der strukturierten Programmierung.</p>\n<pre class=\"prettyprint notranslate prettyprinted\"><span class=\"pln\">IF</span><span class=\"pun\">-</span><span class=\"pln\">THEN</span><span class=\"pun\">-</span><span class=\"pln\">ELSE</span><span class=\"pun\">,</span><span class=\"pln\">  \nDO</span><span class=\"pun\">-</span><span class=\"pln\">WHILE</span><span class=\"pun\">-</span><span class=\"pln\">UNTIL</span></pre>\n<p>Analyst verwendet die gleichen Variablen und daten Name, welche ist in data Dictionary gespeichert werden, so dass es viel einfachere zu schreiben und zu verstehen, den Code.</p>\n<h3>Beispiel</h3>\n<p>Wir nehmen das gleiche Beispiel von Kunden Authentifizierung in der Online-Shopping-Umfeld. Dieses Prozedur, um Kunden zu authentifizieren kann in Structured Englisch geschrieben werden als:</p>\n<pre class=\"prettyprint notranslate prettyprinted\"><span class=\"typ\">Enter</span> <span class=\"typ\">Customer_Name</span><span class=\"pln\">\nSEEK </span><span class=\"typ\">Customer_Name</span> <span class=\"kwd\">in</span> <span class=\"typ\">Customer_Name_DB</span><span class=\"pln\"> file\nIF </span><span class=\"typ\">Customer_Name</span><span class=\"pln\"> found THEN\n   </span><span class=\"typ\">Call</span><span class=\"pln\"> procedure USER_PASSWORD_AUTHENTICATE</span><span class=\"pun\">()</span><span class=\"pln\">\nELSE\n   PRINT error message\n   </span><span class=\"typ\">Call</span><span class=\"pln\"> procedure NEW_CUSTOMER_REQUEST</span><span class=\"pun\">()</span><span class=\"pln\">\nENDIF</span></pre>\n<p>Die Code geschrieben in strukturierten Englisch ist mehr wie Tag-zu-Tag gesprochenen Englisch. Es kann nicht direkt als Code der Software implementiert werden. Strukturierte Englisch ist unabh&auml;ngig von Programmiersprache.</p>\n<h2>Pseudo-Code</h2>\n<p>Pseudo-Code wird mehr N&auml;he zu programmiersprache geschrieben. Es kann sein &uuml;berlegt als augmented programmiersprache, voll von Kommentaren und Beschreibungen.</p>\n<p>Pseudo-Code vermeidet Variablendeklaration, aber sie sind geschrieben mit einige aktuelle Programmiersprache Konstrukten, wie C, Fortran, Pascal usw.</p>\n<p>Pseudo-Code enth&auml;lt mehrProgrammierung Einzelheiten ist als Strukturierte Englisch. Es bietet eine Methode, um die Aufgabe zu ausf&uuml;hren, als wenn ein Computer den Code ausf&uuml;hrt.</p>\n<h3>Beispiel</h3>\n<p>Programm zu Druck Fibonacci bis zu n Anzahl.</p>\n<pre class=\"prettyprint notranslate prettyprinted\"><span class=\"kwd\">void</span> <span class=\"kwd\">function</span> <span class=\"typ\">Fibonacci</span>\n<span class=\"typ\">Get</span> <span class=\"kwd\">value</span> <span class=\"kwd\">of</span><span class=\"pln\"> n</span><span class=\"pun\">;</span>\n<span class=\"typ\">Set</span> <span class=\"kwd\">value</span> <span class=\"kwd\">of</span><span class=\"pln\"> a to </span><span class=\"lit\">1</span><span class=\"pun\">;</span>\n<span class=\"typ\">Set</span> <span class=\"kwd\">value</span> <span class=\"kwd\">of</span><span class=\"pln\"> b to </span><span class=\"lit\">1</span><span class=\"pun\">;</span>\n<span class=\"typ\">Initialize</span><span class=\"pln\"> I to </span><span class=\"lit\">0</span>\n<span class=\"kwd\">for</span> <span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">=</span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">&lt;</span><span class=\"pln\"> n</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span>\n<span class=\"pun\">{</span>\n   <span class=\"kwd\">if</span><span class=\"pln\"> a greater than b \n   </span><span class=\"pun\">{</span>\n      <span class=\"typ\">Increase</span><span class=\"pln\"> b </span><span class=\"kwd\">by</span><span class=\"pln\"> a</span><span class=\"pun\">;</span>\n      <span class=\"typ\">Print</span><span class=\"pln\"> b</span><span class=\"pun\">;</span>\n   <span class=\"pun\">}</span> \n   <span class=\"kwd\">else</span> <span class=\"kwd\">if</span><span class=\"pln\"> b greater than a\n   </span><span class=\"pun\">{</span><span class=\"pln\">\n      increase a </span><span class=\"kwd\">by</span><span class=\"pln\"> b</span><span class=\"pun\">;</span>\n      <span class=\"kwd\">print</span><span class=\"pln\"> a</span><span class=\"pun\">;</span>\n   <span class=\"pun\">}</span>\n<span class=\"pun\">}</span></pre>\n<h2>Entscheidungstabellen</h2>\n<p>Eine Entscheidung Tabelle vertritt Bedingungen und jeweiligen Aktionen genommen werden, um sie zu Adress ihnen, in ein strukturierten Tabellenformat.</p>\n<p>Es ist ein leistungsf&auml;higes Werkzeug zu debuggen und verhindern Fehler. Es hilft, Gruppe &auml;hnlich Informationen in einer einzigen Tabelle und dann durch Kombinieren von tabellen es Liefert einfach und bequem entscheidungsfindung.</p>\n<h3>Erstellen von Entscheidungstabelle</h3>\n<p>Um die Entscheidungstabelle zu erstellen, m&uuml;ssen der Entwickler folgen Grund vier Schritten:</p>\n<ul class=\"list\">\n<li>\n<p>Identifizieren Sie alle m&ouml;glich Bedingungen sein angesprochen</p>\n</li>\n<li>\n<p>Bestimmen Sie Aktionen f&uuml;r alle identifizierten Bedingungenetermine actions for all identified conditions</p>\n</li>\n<li>\n<p>Maximal m&ouml;gliche Regeln erstellen</p>\n</li>\n<li>\n<p>Definieren aktion f&uuml;r jede Regel</p>\n</li>\n</ul>\n<p>Entscheidungstabellen sollten durch Endnutzer &uuml;berpr&uuml;ft werden und k&ouml;nnen in letzter Zeit sein vereinfachten durch den Wegfall doppelter Regeln und Aktionen.</p>\n<h3>Beispiel</h3>\n<p>Nehmen wir ein einfaches Beispiel Tag-zu-Tag Problem mit unserem Internet-Konnektivit&auml;t. Wir beginnen mit der Identifizierung aller Probleme, dass k&ouml;nnen entstehen w&auml;hrend beginnend die internet und ihre jeweiligen m&ouml;gliche L&ouml;sungen .</p>\n<p>Wir listen alle m&ouml;gliche Probleme unter der spalte Bedingungen und prospektiv Handlungen unter der spalte Aktionen.</p>\n<table class=\"table table-bordered\">\n<tbody>\n<tr>\n<th>&nbsp;</th>\n<th>Bedingungen / Aktionen</th>\n<th colspan=\"8\">Reglement</th>\n</tr>\n<tr>\n<th style=\"border-bottom: 1px solid #999;\" rowspan=\"3\">Bedingungen</th>\n<td>Zeigt Verbunden</td>\n<td>N</td>\n<td>N</td>\n<td>N</td>\n<td>N</td>\n<td>J</td>\n<td>J</td>\n<td>J</td>\n<td>J</td>\n</tr>\n<tr>\n<td>Ping ist Arbeit</td>\n<td>N</td>\n<td>N</td>\n<td>J</td>\n<td>J</td>\n<td>N</td>\n<td>N</td>\n<td>J</td>\n<td>J</td>\n</tr>\n<tr>\n<td style=\"border-bottom: 1px solid #999;\">&Ouml;ffnet Webseite</td>\n<td style=\"border-bottom: 1px solid #999;\">J</td>\n<td style=\"border-bottom: 1px solid #999;\">N</td>\n<td style=\"border-bottom: 1px solid #999;\">J</td>\n<td style=\"border-bottom: 1px solid #999;\">N</td>\n<td style=\"border-bottom: 1px solid #999;\">J</td>\n<td style=\"border-bottom: 1px solid #999;\">N</td>\n<td style=\"border-bottom: 1px solid #999;\">J</td>\n<td style=\"border-bottom: 1px solid #999;\">N</td>\n</tr>\n<tr>\n<th rowspan=\"5\">Aktionen</th>\n<td>&Uuml;berpr&uuml;fen Sie Netzwerkkabel</td>\n<td>X</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n</tr>\n<tr>\n<td>&Uuml;berpr&uuml;fen Sie Internet-Router</td>\n<td>X</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>X</td>\n<td>X</td>\n<td>X</td>\n<td>&nbsp;</td>\n</tr>\n<tr>\n<td>Neustart Web-Browser</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>X</td>\n<td>&nbsp;</td>\n</tr>\n<tr>\n<td>Kontakt Service-Provider</td>\n<td>&nbsp;</td>\n<td>X</td>\n<td>X</td>\n<td>X</td>\n<td>X</td>\n<td>X</td>\n<td>X</td>\n<td>&nbsp;</td>\n</tr>\n<tr>\n<td>Tun keine Aktion</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<center><u>Tabelle: Entscheidung Tabelle - In-house Internet Fehlerbehebung</u></center>\n<h2>Entity-Relationship-Modell</h2>\n<p>Entity-Relationship-Modell ist eine Art von Datenbank-Modell basiert auf dem Begriff der realen Welt Entit&auml;ten und Beziehungen unter ihnen. Wir k&ouml;nnen realen WeltSzenario onto ER Datenbank-Modell. ER-Modell erstellt eine Reihe von Organisationen, die mit ihren Attributen, eine Reihe von Einschr&auml;nkungen und die Beziehung unter ihnen.</p>\n<p>ER-Modell ist am besten f&uuml;r die begrifflich Entwurf der datenbank verwendet wird. ER-Modell kann wie folgt dargestellt werden:</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/er_model_intro.png\" alt=\"ER-Modell\" /></p>\n<ul class=\"list\">\n<li>\n<p><strong>Entity</strong> - Ein Unternehmen in ER-Modell ist eine echte Welt sein, welche einige Eigenschaften namens hat <strong><em>Attribute</em></strong>. Jedes Attribut wird durch seinen entsprechenden Satz von Werten definiert, genannt <strong><em>Domain</em></strong>.</p>\n<p>Betrachten Sie zum Beispiel eine Schule Datenbank. Hier ein Sch&uuml;ler ist eine Entit&auml;t. Student hat verschiedene Attribute wie Name, ID, Alter und Klasse etc.</p>\n</li>\n<li>\n<p><strong>Beziehung</strong> - Die logische Zuordnung unter Entit&auml;ten ist Genannt <strong><em>Beziehung</em></strong>. Beziehungen abgebildet werden mit Eintr&auml;ge auf verschiedene Weise. Mapping Kardinalit&auml;ten definieren die Anzahl auf Vereinigungs zwischen zwei Entit&auml;ten.</p>\n<p>Mapping Kardinalit&auml;ten</p>\n<ul class=\"list\">\n<li>ein zu ein</li>\n<li>ein zu viele</li>\n<li>viele zu ein</li>\n<li>viele zu viele</li>\n</ul>\n</li>\n</ul>\n<h2>Datenlexikon</h2>\n<p>Datenw&ouml;rterbuch ist die zentralisierte Sammlung von Informationen &uuml;ber Daten. Es speichert Bedeutung und Herkunft von Daten, seine Beziehung mit anderen Daten, Datenformat f&uuml;r die Nutzungs etc. Daten W&ouml;rterbuch hat rigorosDefinitionen aller Namen, um Benutzer und Software-Designer zu erleichtern.</p>\n<p>Datenw&ouml;rterbuch wird oft als Meta-Daten (Daten &uuml;ber Daten) Repository verwiesen. Es wird zusammen mit DFD (Datenflussdiagramm) Modell der Software-Programm erstellt und wird voraussichtlich aktualisiert, wann auch immer DFD ist ge&auml;ndert oder aktualisiert.</p>\n<h3>Forderung der Datenlexikon</h3>\n<p>Die Daten ist verwiesen via Datenw&ouml;rterbuch, w&auml;hrend der Entwerfen und Umsetzung Software Datenw&ouml;rterbuch entfernt beliebig Chancen von Mehrdeutigkeit. Es hilft Haltung Arbeit von Programmierern und Designern synchronisiert w&auml;hrend unter Verwendung gleichen Objektreferenz &uuml;berall im Programm.</p>\n<p>Datenw&ouml;rterbuch bietet eine M&ouml;glichkeit der Dokumentation f&uuml;r die komplette Datenbanksystem an einem Ort. Validierung des DFD wird unter Verwendung Data Dictionary durchgef&uuml;hrt.</p>\n<h3>Inhaltsverzeichnis</h3>\n<p>Datenw&ouml;rterbuch sollte enthalten informationen etwa die folgenden.</p>\n<ul class=\"list\">\n<li>Daten Fluss</li>\n<li>Daten Struktur</li>\n<li>Daten Elemente</li>\n<li>Daten speichert</li>\n<li>Daten Verarbeitung</li>\n</ul>\n<p>Datenfluss ist beschrieben durch Mittel von DFDs als studierte fr&uuml;her und Vertreten in Algebraische form als beschrieben.</p>\n<table class=\"table table-bordered\">\n<tbody>\n<tr>\n<th>=</th>\n<th>Composed of</th>\n</tr>\n<tr>\n<td>{}</td>\n<td>Repetition</td>\n</tr>\n<tr>\n<td>()</td>\n<td>Optional</td>\n</tr>\n<tr>\n<td>+</td>\n<td>And</td>\n</tr>\n<tr>\n<td>[ / ]</td>\n<td>Or</td>\n</tr>\n</tbody>\n</table>\n<h3>Beispiel</h3>\n<p>Adress = Haus Nr + (Stra&szlig;e / Bereich) + Stadt + Zustand</p>\n<p>Kurs-ID = Kursnummer + Kursname + Kursstufe + KursGrade</p>\n<h3>Daten Elemente</h3>\n<p>Datenelemente besteht aus Name und Beschreibungen von Daten und Kontrolle Einzelteile, interner oder externer Datenspeichern usw. mit den folgenden Details:</p>\n<ul class=\"list\">\n<li>prim&auml;ren Namen</li>\n<li>Zweiter Name (Alias\u200B\u200B)</li>\n<li>Use-Case (Wie und wo zu verwenden)</li>\n<li>Inhalt Beschreibung (Notation etc.)</li>\n<li>Zusatz - Informationen (voreingestellte Werte, Einschr&auml;nkungen etc.)</li>\n</ul>\n<h3>Daten speichert</h3>\n<p>Er speichert die Informationen von wo dem die Daten tritt in das System und existiert aus dem system heraus. Auf den Datenspeicher k&ouml;nnen geh&ouml;ren -</p>\n<ul class=\"list\">\n<li><strong>Dateien</strong>\n<ul class=\"list\">\n<li>Interne zu Software.</li>\n<li>Externe zu Software, sondern auf der gleichen Maschine.</li>\n<li>Externe zu Software und System, gelegen auf anders Maschine.</li>\n</ul>\n</li>\n<li><strong>Tabellen</strong>\n<ul class=\"list\">\n<li>Namenskonvention</li>\n<li>Indizierung Eigenschaft</li>\n</ul>\n</li>\n</ul>\n<h3>Daten Verarbeitung</h3>\n<p>Es gibt zwei Arten der Daten verarbeitung:</p>\n<ul class=\"list\">\n<li>\n<p><strong>logisch</strong> : Als Benutzer sie sieht es</p>\n</li>\n<li><strong>physikalische</strong> : Als software Sieht Es</li>\n</ul>"
          ]
        },
        {
          "tag_line": "Software Design Strategien",
          "details": [
            "<p>Software-Design ist ein Prozess, zu konzeptualisieren um die Software-Anforderungen in Software-Implementierung zu konzipieren. Software-Design nimmt die Anforderungen der Nutzer als Herausforderung und versucht, eine Optimum L&ouml;sung zu finden, W&auml;hrend die Software ist, konzeptualisieren ist, wird ein Plan ist aus angekreidet, um die bestm&ouml;gliche Design f&uuml;r die Umsetzung der beabsichtigt L&ouml;sung zu finden.</p>\n<p>Es gibt mehrere Varianten des Software-Designs. Lasst uns Studie sie kurz:</p>\n<h2>strukturiertes Design</h2>\n<p>Strukturierte Design ist eine konzeptualisierung von Problem in mehrere gut organisierte Elemente der L&ouml;sung. Es ist im Grunde besorgt mit der L&ouml;sung-Design. Nutzen der strukturierten Aufbau ist, es verleiht besseres Verst&auml;ndnis, wie das Problem ist sind gel&ouml;st. Strukturierte Design macht es auch einfacheren f&uuml;r Designer, zu um das Problem genauer zu konzentrieren.</p>\n<p>Strukturierte Design ist meistens verwendeten auf \"Teile und Herrsche\" -Strategie, wo ein Problem ist gebrochen in mehrere kleine Probleme und jeder kleine Problem is individuell Gel&ouml;st bis das ganze Problem ist gel&ouml;st.</p>\n<p>Die kleinen St&uuml;cke Probleme sind mittels L&ouml;sungsmodule gel&ouml;st. Strukturierte Design Betonung, dass diese Module gut auch, um eine pr&auml;zise L&ouml;sung zu erreichen organisiert werden.</p>\n<p>Diese Module sind in der Hierarchie angeordnet sind. Sie miteinander kommunizieren. Eine gute strukturierte Design folgt immer ein paar Regeln f&uuml;r die Kommunikation unter mehrere Modulen, n&auml;mlich -</p>\n<p><strong>Zusammenhalt</strong> - Gruppierung aller funktionell verwandte Elemente.</p>\n<p><strong>Kopplung</strong> - Kommunikation zwischen den anders Modulen.</p>\n<p>Eine gute strukturierte Design hat eine hohe Koh&auml;sion und geringe Kopplung Arrangements.</p>\n<h2>Funktionsorientiertes Design</h2>\n<p>In funktionsorientierten Design das System ist umfasste von vielen kleineren Subsystemen bekannt als Funktionen. Diese Funktionen sind f&auml;hig ausf&uuml;hrens signifikant Aufgabe im System. Das System ist als Draufsicht auf alle Funktionen ber&uuml;cksichtigt.</p>\n<p>Funktionsorientierte Design erbt einige Eigenschaften von strukturierten Design, wo Teile und Herrsche Methodik verwendet wird.</p>\n<p>Dieses Design mechanismus aufteilen das ganze System in kleinere Funktionen, welche die Mittel der Abstraktion bietet durch Verschleierung der Informationen und ihre Betriebs. Diese Funktionsmodule k&ouml;nnen Informationen teilen unter sich durch Mittel von Informationen Vorbeigehen und unter Verwendung Informationen Verf&uuml;gbar global.</p>\n<p>Ein weiteres Charakteristik der Funktionen ist, dass, wenn ein Programm eine Funktion aufruft, die Funktion &Auml;nderungen die den Zustand des Programms, die welche manchmal ist nicht von anderen Modulen akzeptabel. Funktionsorientierten Entwurf funktioniert gut, wo das System Zustand spielt keine Rolle, und das Programm / Funktionen Arbeiten auf Eingangs vielmehr als auf einen Zustand.</p>\n<h3>Design-Prozess</h3>\n<ul class=\"list\">\n<li>\n<p>Das ganze System ist gesehen wie how Daten flie&szlig;t in dem System mittels Datenflussdiagramm.</p>\n</li>\n<li>\n<p>DFD zeigt, wie Funktionen &auml;ndert daten und Zustand des gesamte Systems.</p>\n</li>\n<li>\n<p>Das gesamte System ist logisch gebrochen in kleinere Einheiten ist bekannt als Funktionen auf der Grundlage von deren Betrieb in dem System.</p>\n</li>\n<li>\n<p>Jede Funktion wird dann bei gro&szlig; beschrieben.</p>\n</li>\n</ul>\n<h2>Objektorientiertes Design</h2>\n<p>Objektorientierten Design Werke rund um die Entit&auml;ten und ihre Charakteristik anstelle von Funktionen beteiligt in der Software-System. Dieses Design-Strategien konzentriert sich auf die Entit&auml;ten und seine Charakteristik. Das gesamte Konzept der Software-L&ouml;sung dreht sich um die Verlobt entit&auml;ten.</p>\n<p>Lassen Sie uns sehen wichtige Konzepte der objektorientierten Design:</p>\n<ul class=\"list\">\n<li>\n<p><strong>Objekte</strong> - Alle in der L&ouml;sung Design beteiligten Entit&auml;ten werden als Objekte bekannt. So werden beispielsweise Person, Banken, Firma und Kunden als Objekte behandelt. Jede Entit&auml;t hat einige Attribute, verbunden zu es und hat einige Methoden, um auf den Attributen durchzuf&uuml;hren.</p>\n</li>\n<li>\n<p><strong>Klassen</strong> - Eine Klasse ist eine generali Beschreibung eines Objekts. Ein Objekt ist eine Instanz einer Klasse. Klasse definiert alle Attribute, welche ein objekt k&ouml;nnen und Methoden,welche definies die Funktionalit&auml;t von die objekt.</p>\n<p>In der L&ouml;sung Design, sind Attribute als Variablen gespeichert und Funktionalit&auml;ten werden durch Mittel von Methoden oder Verfahren definiert.</p>\n</li>\n<li>\n<p><strong>Verkapselung</strong> - In OOD, werden die Attribute (Daten-Variablen) und Methoden (Operation an den Daten) sind geb&uuml;ndelt zusammen Kapselung genannt. Kapselung nicht nur Bundles wichtige Informationen von einem Objekt zusammen, aber auch beschr&auml;nkt den Zugriff der Daten und Methoden aus der Au&szlig;enwelt. Dies wird als Information Hiding.</p>\n</li>\n<li>\n<p><strong>Erbschaft</strong> - OOD erm&ouml;glicht &auml;hnliche Klassen zu Stapel bis in hierarchischen Weise, wo die unteren oder Unterklassen k&ouml;nnen zu importieren, implementieren und Wiederverwendung erlaubt Variablen und Methoden von ihren unmittelbaren Superklassen. Diese Eigenschaft der OOD ist als Erbe bekannt. Dies macht es einfacher zu definieren, spezifisch Klasse und zu erstellen generali Klassen von spezifischen Einsen.</p>\n</li>\n<li>\n<p><strong>Polymorphismus</strong> - OOD Sprachen bieten einen Mechanismus, wo Methoden ausf&uuml;hrens die &auml;hnliche Aufgaben, sondern variieren sich in Argumente, zugeordnet werden k&ouml;nnen denselben Namen. es ist namens als Polymorphie, die erm&ouml;glicht eine einzige Schnittstelle ausf&uuml;hrens Aufgaben f&uuml;r die verschiedenen typen. Je nachdem, wie die Funktion aufgerufen wird, jeweiligen portion des Codes bekommt ausgef&uuml;hrt.</p>\n</li>\n</ul>\n<h3>Design-Prozess</h3>\n<p>Softwareentwurfsprozess kann als Reihe von gut definierten Schritte wahrgenommen werden. Obwohl es variiert nach zu Design-Ansatz (funktionsorientiert oder objektorientiert, noch es k&ouml;nnen die folgenden Schritte beteiligt:</p>\n<ul class=\"list\">\n<li>\n<p>Eine L&ouml;sung Entwurf wird von Anforderung oder vorherigen verbreitete System und / oder Systemsequenzdiagramm erstellt.</p>\n</li>\n<li>\n<p>Die Objekte werden identifiziert gruppiert in Klassen im Namen der &Auml;hnlichkeit im Attribut Charakteristik.</p>\n</li>\n<li>\n<p>Klassenhierarchie und die Beziehung unter ihnen ist definiert.</p>\n</li>\n<li>\n<p>Anwendungs-Framework definiert ist.</p>\n</li>\n</ul>\n<h2>Software Design Approaches</h2>\n<p>Hier sind zwei generische Ans&auml;tze f&uuml;r Software-Design:</p>\n<h3>Top Down Design</h3>\n<p>Wir wissen, dass ein System ist komponiert von mehr als eine Teilsystemen besteht und es eine Anzahl von Komponenten enth&auml;lt. Ferner, diese Untersysteme und Komponenten k&ouml;nnen haben ihren Satz von Untersystem und Komponenten und schafft hierarchische Struktur in Systems.</p>\n<p>Top-Down-Design nimmt die ganze Softwaresystem als eine Entit&auml;t, und dann zersetzt es sich zu erzielt mehr als einem Untersystem oder die Komponente auf basierend einige Charakteristik. Jedes Untersystem oder die Komponente wird dann behandelt als System und zerlegt weiter. Dieser Prozess behalt auf Laufen, bis die unterste Ebene der Systems in der Top-Down-Hierarchie ist erzielen.</p>\n<p>Top-Down-Design beginnt mit einem generali Modell der System und h&auml;lt auf definiere spezifisch Teil davon zu. Wenn alle Komponenten sind komponiert das ganze System kommt in Existenz.</p>\n<p>Top-Down-Design ist mehr geeignet, wenn die Software-L&ouml;sung muss von Grund auf neu konzipiert werden, und spezifische Details bekannt sind.</p>\n<h3>Bottom-up Design</h3>\n<p>Die Bottom-up-Design-Modell startet mit den meisten spezifischen und Grundkomponenten. Es Erl&ouml;s mit dem Komponieren h&ouml;here Ebene auf Komponenten mithilfe Grund-oder niedriger ebene Komponenten. Es h&auml;lt Schaffung von h&ouml;her Level-Komponenten, bis gew&uuml;nschte System ist nicht als eine einzige Komponente gewachsen. Mit Wobei jede h&ouml;here Ebene, wird die Menge der Abstraktion ist erh&ouml;hte zu.</p>\n<p>Bottom-up-Strategie ist besser geeignet, wenn ein System muss erstellt werden aus einige bestehenden System, wo die Basisprimitiven k&ouml;nnen in der neueren System verwendet werden.</p>\n<p>Sowohl Top-down-und Bottom-up-Ans&auml;tze sind nicht einzeln praktisch. Stattdessen wird eine gute Kombination des beiden verwendet wird.</p>"
          ]
        },
        {
          "tag_line": "Software Design Strategien",
          "details": [
            "<p>Software-Design ist ein Prozess, zu konzeptualisieren um die Software-Anforderungen in Software-Implementierung zu konzipieren. Software-Design nimmt die Anforderungen der Nutzer als Herausforderung und versucht, eine Optimum L&ouml;sung zu finden, W&auml;hrend die Software ist, konzeptualisieren ist, wird ein Plan ist aus angekreidet, um die bestm&ouml;gliche Design f&uuml;r die Umsetzung der beabsichtigt L&ouml;sung zu finden.</p>\n<p>Es gibt mehrere Varianten des Software-Designs. Lasst uns Studie sie kurz:</p>\n<h2>strukturiertes Design</h2>\n<p>Strukturierte Design ist eine konzeptualisierung von Problem in mehrere gut organisierte Elemente der L&ouml;sung. Es ist im Grunde besorgt mit der L&ouml;sung-Design. Nutzen der strukturierten Aufbau ist, es verleiht besseres Verst&auml;ndnis, wie das Problem ist sind gel&ouml;st. Strukturierte Design macht es auch einfacheren f&uuml;r Designer, zu um das Problem genauer zu konzentrieren.</p>\n<p>Strukturierte Design ist meistens verwendeten auf \"Teile und Herrsche\" -Strategie, wo ein Problem ist gebrochen in mehrere kleine Probleme und jeder kleine Problem is individuell Gel&ouml;st bis das ganze Problem ist gel&ouml;st.</p>\n<p>Die kleinen St&uuml;cke Probleme sind mittels L&ouml;sungsmodule gel&ouml;st. Strukturierte Design Betonung, dass diese Module gut auch, um eine pr&auml;zise L&ouml;sung zu erreichen organisiert werden.</p>\n<p>Diese Module sind in der Hierarchie angeordnet sind. Sie miteinander kommunizieren. Eine gute strukturierte Design folgt immer ein paar Regeln f&uuml;r die Kommunikation unter mehrere Modulen, n&auml;mlich -</p>\n<p><strong>Zusammenhalt</strong> - Gruppierung aller funktionell verwandte Elemente.</p>\n<p><strong>Kopplung</strong> - Kommunikation zwischen den anders Modulen.</p>\n<p>Eine gute strukturierte Design hat eine hohe Koh&auml;sion und geringe Kopplung Arrangements.</p>\n<h2>Funktionsorientiertes Design</h2>\n<p>In funktionsorientierten Design das System ist umfasste von vielen kleineren Subsystemen bekannt als Funktionen. Diese Funktionen sind f&auml;hig ausf&uuml;hrens signifikant Aufgabe im System. Das System ist als Draufsicht auf alle Funktionen ber&uuml;cksichtigt.</p>\n<p>Funktionsorientierte Design erbt einige Eigenschaften von strukturierten Design, wo Teile und Herrsche Methodik verwendet wird.</p>\n<p>Dieses Design mechanismus aufteilen das ganze System in kleinere Funktionen, welche die Mittel der Abstraktion bietet durch Verschleierung der Informationen und ihre Betriebs. Diese Funktionsmodule k&ouml;nnen Informationen teilen unter sich durch Mittel von Informationen Vorbeigehen und unter Verwendung Informationen Verf&uuml;gbar global.</p>\n<p>Ein weiteres Charakteristik der Funktionen ist, dass, wenn ein Programm eine Funktion aufruft, die Funktion &Auml;nderungen die den Zustand des Programms, die welche manchmal ist nicht von anderen Modulen akzeptabel. Funktionsorientierten Entwurf funktioniert gut, wo das System Zustand spielt keine Rolle, und das Programm / Funktionen Arbeiten auf Eingangs vielmehr als auf einen Zustand.</p>\n<h3>Design-Prozess</h3>\n<ul class=\"list\">\n<li>\n<p>Das ganze System ist gesehen wie how Daten flie&szlig;t in dem System mittels Datenflussdiagramm.</p>\n</li>\n<li>\n<p>DFD zeigt, wie Funktionen &auml;ndert daten und Zustand des gesamte Systems.</p>\n</li>\n<li>\n<p>Das gesamte System ist logisch gebrochen in kleinere Einheiten ist bekannt als Funktionen auf der Grundlage von deren Betrieb in dem System.</p>\n</li>\n<li>\n<p>Jede Funktion wird dann bei gro&szlig; beschrieben.</p>\n</li>\n</ul>\n<h2>Objektorientiertes Design</h2>\n<p>Objektorientierten Design Werke rund um die Entit&auml;ten und ihre Charakteristik anstelle von Funktionen beteiligt in der Software-System. Dieses Design-Strategien konzentriert sich auf die Entit&auml;ten und seine Charakteristik. Das gesamte Konzept der Software-L&ouml;sung dreht sich um die Verlobt entit&auml;ten.</p>\n<p>Lassen Sie uns sehen wichtige Konzepte der objektorientierten Design:</p>\n<ul class=\"list\">\n<li>\n<p><strong>Objekte</strong> - Alle in der L&ouml;sung Design beteiligten Entit&auml;ten werden als Objekte bekannt. So werden beispielsweise Person, Banken, Firma und Kunden als Objekte behandelt. Jede Entit&auml;t hat einige Attribute, verbunden zu es und hat einige Methoden, um auf den Attributen durchzuf&uuml;hren.</p>\n</li>\n<li>\n<p><strong>Klassen</strong> - Eine Klasse ist eine generali Beschreibung eines Objekts. Ein Objekt ist eine Instanz einer Klasse. Klasse definiert alle Attribute, welche ein objekt k&ouml;nnen und Methoden,welche definies die Funktionalit&auml;t von die objekt.</p>\n<p>In der L&ouml;sung Design, sind Attribute als Variablen gespeichert und Funktionalit&auml;ten werden durch Mittel von Methoden oder Verfahren definiert.</p>\n</li>\n<li>\n<p><strong>Verkapselung</strong> - In OOD, werden die Attribute (Daten-Variablen) und Methoden (Operation an den Daten) sind geb&uuml;ndelt zusammen Kapselung genannt. Kapselung nicht nur Bundles wichtige Informationen von einem Objekt zusammen, aber auch beschr&auml;nkt den Zugriff der Daten und Methoden aus der Au&szlig;enwelt. Dies wird als Information Hiding.</p>\n</li>\n<li>\n<p><strong>Erbschaft</strong> - OOD erm&ouml;glicht &auml;hnliche Klassen zu Stapel bis in hierarchischen Weise, wo die unteren oder Unterklassen k&ouml;nnen zu importieren, implementieren und Wiederverwendung erlaubt Variablen und Methoden von ihren unmittelbaren Superklassen. Diese Eigenschaft der OOD ist als Erbe bekannt. Dies macht es einfacher zu definieren, spezifisch Klasse und zu erstellen generali Klassen von spezifischen Einsen.</p>\n</li>\n<li>\n<p><strong>Polymorphismus</strong> - OOD Sprachen bieten einen Mechanismus, wo Methoden ausf&uuml;hrens die &auml;hnliche Aufgaben, sondern variieren sich in Argumente, zugeordnet werden k&ouml;nnen denselben Namen. es ist namens als Polymorphie, die erm&ouml;glicht eine einzige Schnittstelle ausf&uuml;hrens Aufgaben f&uuml;r die verschiedenen typen. Je nachdem, wie die Funktion aufgerufen wird, jeweiligen portion des Codes bekommt ausgef&uuml;hrt.</p>\n</li>\n</ul>\n<h3>Design-Prozess</h3>\n<p>Softwareentwurfsprozess kann als Reihe von gut definierten Schritte wahrgenommen werden. Obwohl es variiert nach zu Design-Ansatz (funktionsorientiert oder objektorientiert, noch es k&ouml;nnen die folgenden Schritte beteiligt:</p>\n<ul class=\"list\">\n<li>\n<p>Eine L&ouml;sung Entwurf wird von Anforderung oder vorherigen verbreitete System und / oder Systemsequenzdiagramm erstellt.</p>\n</li>\n<li>\n<p>Die Objekte werden identifiziert gruppiert in Klassen im Namen der &Auml;hnlichkeit im Attribut Charakteristik.</p>\n</li>\n<li>\n<p>Klassenhierarchie und die Beziehung unter ihnen ist definiert.</p>\n</li>\n<li>\n<p>Anwendungs-Framework definiert ist.</p>\n</li>\n</ul>\n<h2>Software Design Approaches</h2>\n<p>Hier sind zwei generische Ans&auml;tze f&uuml;r Software-Design:</p>\n<h3>Top Down Design</h3>\n<p>Wir wissen, dass ein System ist komponiert von mehr als eine Teilsystemen besteht und es eine Anzahl von Komponenten enth&auml;lt. Ferner, diese Untersysteme und Komponenten k&ouml;nnen haben ihren Satz von Untersystem und Komponenten und schafft hierarchische Struktur in Systems.</p>\n<p>Top-Down-Design nimmt die ganze Softwaresystem als eine Entit&auml;t, und dann zersetzt es sich zu erzielt mehr als einem Untersystem oder die Komponente auf basierend einige Charakteristik. Jedes Untersystem oder die Komponente wird dann behandelt als System und zerlegt weiter. Dieser Prozess behalt auf Laufen, bis die unterste Ebene der Systems in der Top-Down-Hierarchie ist erzielen.</p>\n<p>Top-Down-Design beginnt mit einem generali Modell der System und h&auml;lt auf definiere spezifisch Teil davon zu. Wenn alle Komponenten sind komponiert das ganze System kommt in Existenz.</p>\n<p>Top-Down-Design ist mehr geeignet, wenn die Software-L&ouml;sung muss von Grund auf neu konzipiert werden, und spezifische Details bekannt sind.</p>\n<h3>Bottom-up Design</h3>\n<p>Die Bottom-up-Design-Modell startet mit den meisten spezifischen und Grundkomponenten. Es Erl&ouml;s mit dem Komponieren h&ouml;here Ebene auf Komponenten mithilfe Grund-oder niedriger ebene Komponenten. Es h&auml;lt Schaffung von h&ouml;her Level-Komponenten, bis gew&uuml;nschte System ist nicht als eine einzige Komponente gewachsen. Mit Wobei jede h&ouml;here Ebene, wird die Menge der Abstraktion ist erh&ouml;hte zu.</p>\n<p>Bottom-up-Strategie ist besser geeignet, wenn ein System muss erstellt werden aus einige bestehenden System, wo die Basisprimitiven k&ouml;nnen in der neueren System verwendet werden.</p>\n<p>Sowohl Top-down-und Bottom-up-Ans&auml;tze sind nicht einzeln praktisch. Stattdessen wird eine gute Kombination des beiden verwendet wird.</p>"
          ]
        },
        {
          "tag_line": "Software User Interface Design",
          "details": [
            "Benutzerschnittstelle ist die Front-End-Anwendung im Hinblick auf die Benutzer, um die Software zu nutzen interagiert. Benutzer kann manipulieren und zu kontrollieren, die Software als auch Hardware mittels Benutzeroberfläche. Heute ist die Bedienoberfläche an fast jedem Ort, an dem digitale Technologie existiert, rechts von Computern, Mobiltelefonen, Autos, Musik-Player, Flugzeuge, Schiffe usw. gefunden.\n\nBenutzeroberfläche ist Teil der Software-und ist designed der Weise, dass es erwartet wird, um dem Benutzer einen Einblick der Software bereitzustellen gestalten. UI bietet grundlegende Plattform für Mensch-Computer-Interaktion.\n\nUI kann erfolgt grafisch, textbasierte, Audio-Video-basierten, abhängig von der zugrunde liegenden Hardware-und Software-Kombination. UI kann Hardware oder Software oder eine Kombination von beiden sein.\n\nDie Software wird immer beliebter, wenn seine Benutzerschnittstelle ist:\n\n    Attraktive\n    Einfach zu verwenden\n    Responsive in kurzer Zeit\n    Clear zu verstehen\n    Konsequente auf allen Bildschirmen Schnittstelle\n\nUI ist grob in zwei Kategorien unterteilt:\n\n    Command Line Interface\n    Graphical User Interface\n\nCommand Line Interface (CLI)\n\nCLI ist ein großes Werkzeug für die Interaktion mit Computern, bis die Video-Monitore entstanden. CLI ist erste Wahl für viele technische Anwender und Programmierer. CLI-Schnittstelle ist mindestens eine Software kann auf seine Nutzer.\n\nCLI bietet eine Eingabeaufforderung, der Ort, wo der Benutzer Typ das Kommando und Feeds zu dem System. Der Benutzer muss die Syntax des Befehls und seiner Nutzung zu erinnern. Früher CLI nicht programmiert, um die Benutzerfehler effektiv zu behandeln.\n\nEin Befehl ist eine textbasierte Bezug auf von Anweisungen, die voraussichtlich vom System ausgeführt werden soll. Es gibt Methoden, wie Makros, Skripte, die es für den Benutzer einfach zu bedienen zu machen.\n\nCLI verwendet weniger Menge von Computer-Ressourcen im Vergleich zu GUI.\nCLI-Elemente\nCommand Line Interface (CLI)\n\nEin Text-basierte Befehlszeilenschnittstelle können die folgenden Elemente haben:\n\n    Befehl Eingabeaufforderung - Es ist textbasiert Anmelders, dass ist vor allem zeigt den Kontext, in dem der Benutzer arbeitet. Es wird von der Software-System erzeugt.\n\n    Cursor - Es ist eine kleine horizontale Linie oder eine vertikale Leiste von der Höhe der Linie, zu vertreten Position der Zeichen während der Eingabe. Cursor wird meist in blinkenden Zustand gefunden. Es bewegt sich, wenn der Benutzer schreibt oder löscht etwas.\n\n    Befehl - Ein Befehl ist eine ausführbare Anweisung. Es kann einen oder mehrere Parameter. Ausgabe auf der Befehlsausführung wird inline auf dem Bildschirm angezeigt. Wenn die Produktion hergestellt wird, wird der Eingabeaufforderung in der nächsten Zeile angezeigt.\n\nGraphical User Interface\n\nGraphical User Interface bietet dem Anwender grafische Mittel, um mit dem System zu interagieren. GUI Kombination von Hardware und Software sein. Mit GUI, Benutzer interpretiert Software.\n\ntypisch ist GUI ressourcenaufwendig als die der CLI. Mit fortschreitender Technologie, die Programmierer und Designer erstellen komplexe GUI-Designs, die mit mehr Effizienz, Genauigkeit und Geschwindigkeit zu arbeiten.\nGUI-Elemente\n\nGUI bietet eine Reihe von Komponenten zu mit Software-oder Hardware zu interagieren.\n\nJede grafische Komponente bietet eine Möglichkeit, mit dem System zu arbeiten. Ein GUI-System hat folgende Elemente wie:\nGraphical User Interface\n\n    Fenster - Ein Bereich, in dem Inhalt der Anwendung angezeigt werden. Inhalt in einem Fenster kann in Form von Icons oder Listen angezeigt werden, wenn das Fenster stellt Dateistruktur. Es ist einfacher für einen Benutzer im Dateisystem in einem Explorer-Fenster navigieren. Fenster können minimiert werden, in der Größe verändert oder an die Größe des Bildschirms maximiert. Sie können überall auf dem Bildschirm verschoben werden. Ein Fenster kann ein anderes Fenster der gleichen Anwendung, genannt geordnete Fenster enthalten.\n\n    Tabs - Wenn eine Anwendung ermöglicht Ausführen mehrerer Instanzen von sich selbst, auf dem Bildschirm als separates Fenster erscheinen sie Tabbed Document Interface hat sich kommen, um mehrere geöffnete Dokumente in demselben Fenster. Diese Schnittstelle hilft auch bei der Betrachtung Einstellungsfenster in der Anwendung. Alle modernen Web-Browser verwenden diese Funktion.\n\n    Menü - Menü ist ein Array von Standard-Befehle, zusammengefasst und an einer sichtbaren Stelle (in der Regel oben) innerhalb des Anwendungsfensters platziert. Das Menü kann programmiert zu erscheinen oder ausblenden auf Mausklicks werden.\n\n    Icon - Ein Symbol ist klein Bild, die eine zugehörige Anwendung. Wenn diese Symbole geklickt oder doppelklickt, wird das Anwendungsfenster geöffnet. Symbol angezeigt Anwendung und Programme auf einem System in Form von kleinen Bildern installiert.\n\n    Cursor - Zusammenarbeit Geräte wie Maus, Touchpad, werden digitale Stift in der GUI als Cursor vertreten. Auf dem Bildschirm Cursor folgt den Anweisungen von Hardware in nahezu Echtzeit. Cursor werden auch als Zeiger in GUI-Systeme. Sie werden verwendet, um Menüs, Fenster und andere Funktionen der Anwendung zu wählen.\n\nAnwendungsspezifische GUI-Komponenten\n\nGUI einer Anwendung enthält ein oder mehrere der aufgeführten GUI-Elemente:\n\n    Anwendungsfenster - Anwendungsfenster, die von Betriebssystemen geliefert Konstrukte verwendet, aber viele nutzen ihre eigenen Kunden erstellt Fenster, um den Inhalt der Anwendung enthalten.\n\n    Dialogue Box - Es ist ein Fenster, das Kind Nachricht für den Benutzer und Anfrage für eine Aktion enthält getroffen werden. Zum Beispiel : Anwendung erzeugen einen Dialog, eine Bestätigung von Benutzer zu erhalten, um eine Datei zu löschen.\n    Dialogue Box\n\n    Text-Box - Bietet einen Bereich für Benutzer eingeben und geben Sie den Text-basierten Daten.\n\n    Buttons - Sie imitieren wirklichen Leben Tasten und werden verwendet, um Eingaben in die Software einreichen.\n    Radio-button\n\n    Radio-button - Zeigt die verfügbaren Optionen zur Auswahl. Nur kann man unter allen angebotenen ausgewählt werden.\n\n    Check-box - ähnlich wie bei Listenfeld Funktionen. Wenn eine Option ausgewählt ist, wird das Feld markiert, überprüft. Mehrere Optionen von Checkboxen dargestellt werden, können ausgewählt werden.\n\n    List-box - Bietet Liste der verfügbaren Elemente zur Auswahl. Mehr als ein Element ausgewählt werden kann.\n    Listenfeld\n\nAndere beeindruckende GUI-Komponenten sind:\n\n    Sliders\n    Combo-box\n    Daten-Grid\n    Drop-down Liste\n\nUser Interface Design Aktivitäten\n\nEs gibt eine Reihe von Aktivitäten für die Gestaltung der Benutzerschnittstelle durchgeführt. Der Prozess der GUI-Design und-Implementierung ist gleichermaßen SDLC. Jedes Modell kann für die GUI-Implementierung unter Wasserfall, iterative oder Spiralmodell verwendet werden.\n\nEin Modell für GUI-Design und Entwicklung verwendet werden, sollten diese GUI konkrete Schritte zu erfüllen.\nGUI-Prozess\n\n    GUI Voraussetzung Versammlung - Die Designer können gerne Liste aller funktionalen und nicht-funktionalen Anforderungen der GUI haben. Dies kann von Benutzer und ihre bestehende Software-Lösung aufgenommen werden.\n\n    Benutzer-Analyse - Die Designer-Studien wer wird die Software-GUI verwenden. Die Zielgruppe ankommt, wie die Design-Details ändern sich entsprechend dem Wissen und der Kompetenzstufe des Benutzers. Wenn Benutzer technische Kenntnisse, können erweiterte und komplexe GUI integriert werden. Für einen Neuling ist mehr Informationen darüber, wie zu der Software enthalten.\n\n    Task Analysis - Designer müssen analysieren, welche Aufgabe ist es, die von der Software-Lösung durchgeführt werden. Hier in GUI, spielt es keine Rolle, wie es gemacht wird. Aufgaben können in einer hierarchischen Art und Weise unter eine Hauptaufgabe und Unterteilen weiter in kleinere Teilaufgaben darstellen. Aufgaben bieten Ziele für GUI-Präsentation. Informationsfluss zwischen den Teilaufgaben bestimmt den Durchfluss von GUI-Inhalte in der Software.\n\n    GUI Design & Umsetzung - Designer, nachdem er Informationen über die Anforderungen, Aufgaben und Benutzerumgebung, die GUI zu entwerfen und implementiert in den Code und die GUI mit Arbeits oder Dummy-Software im Hintergrund einbetten. Es ist dann selbst getestet von den Entwicklern.\n\n    Testen - GUI-Tests kann auf verschiedene Weise durchgeführt werden. Organisation kann in-house Kontrolle zu haben, direkte Einbeziehung der Nutzer und die Freisetzung von Beta-Version sind einige von ihnen. Testen kann die Benutzerfreundlichkeit, Kompatibilität, Benutzerakzeptanz etc. mit ein.\n\nGUI Implementierung Tools\n\nEs gibt mehrere Werkzeuge zur Verfügung, mit deren Hilfe die Designer können ganze GUI auf einem Mausklick erstellen. Einige Tools können in die Software-Umgebung (IDE) eingebettet werden.\n\nGUI-Tools bieten leistungsstarke Umsetzung Reihe von GUI-Controls. Für Software-Anpassung, können Designer den Code entsprechend ändern.\n\nEs gibt verschiedene Segmente der GUI-Tools nach ihren unterschiedlichen Gebrauch und Plattform.\nBeispiel\n\nHandy GUI, Computer GUI, Touch-Screen GUI etc. Hier ist eine Liste der wenigen Werkzeuge, die praktisch zu bauen GUI kommen:\n\n    FLUID\n    AppInventor (Android)\n    LucidChart\n    Wavemaker\n    Visual Studio\n\nUser Interface Goldene Regeln\n\nDie folgenden Regeln werden erwähnt, um die goldenen Regeln für GUI-Design, von Shneiderman und Plaisant in ihrem Buch beschrieben (Designing the User Interface) sein.\n\n    Streben nach Konsistenz - Konsequente Sequenzen von Aktionen sollten in ähnlichen Situationen erforderlich. Identische Terminologie sollte in Aufforderungen, Menüs und Hilfeanzeigen verwendet werden. Konsistente Befehle sollten in ganz eingesetzt werden.\n\n    Aktivieren häufige Nutzer Abkürzungen verwenden - Der Wunsch des Benutzers, die Anzahl der Interaktionen reduzieren mit der Häufigkeit der Nutzung erhöht. Abkürzungen, Funktionstasten, versteckte Befehle und Makro Einrichtungen sind sehr hilfreich, einen Experten-Benutzer.\n\n    Angebot informativen Feedback - Für jeden Bedienvorgang, sollte es einige System Feedback. Für häufige und kleinere Aktionen, muss die Antwort bescheiden sein, während für seltene und wichtige Aktionen, muss die Antwort mehr erheblich sein.\n\n    Design-Dialog Schließung ergeben - Sequenzen von Aktionen sollten in Gruppen mit einem Anfang, Mitte und Ende organisiert werden. Die informative Rückkopplung bei der Fertigstellung einer Gruppe von Aktionen gibt den Betreibern die Zufriedenheit der Vollendung, ein Gefühl der Erleichterung, das Signal, Notfallpläne und Optionen aus ihren Köpfen fallen, und dies zeigt, dass der Weg in die Zukunft ist klar, um für den nächsten vorzubereiten Gruppe von Aktionen.\n\n    bieten eine einfache Fehlerbehandlung - So viel wie möglich, das System so wird der Benutzer einen schwerwiegenden Fehler nicht zu machen. Wenn ein Fehler gemacht wird, sollte das System in der Lage, es zu erkennen und bieten einfache, verständliche Mechanismen für den Umgang mit den Fehler.\n\n    Ausweis einfach Umkehrung von Aktionen - Diese Funktion entlastet Angst, da der Benutzer weiß, dass Fehler können rückgängig gemacht werden. Einfache Umkehr der Maßnahmen fördert Erforschung der unbekannten Möglichkeiten. Die Einheiten der Reversibilität kann eine einzelne Aktion, eine Dateneingabe, oder eine komplette Gruppe von Aktionen sein.\n\n    Unterstützen interne Kontrollüberzeugung - Erfahrene Betreiber sehr wünschen das Gefühl, dass sie verantwortlich für das System und das System reagiert auf ihre Aktionen. Gestalten Sie die Benutzer das System die Initiatoren von Aktionen statt der Responder zu machen.\n\n    Reduzierung des Kurzzeitgedächtnisses Last - Die Begrenzung der menschlichen Informationsverarbeitung im Kurzzeitgedächtnis erfordert die Anzeigen zu einfach gehalten, mehrseitige Anzeigen konsolidiert werden, Fenster-Bewegungsfrequenz sein reduziert und ausreichend Trainingszeit für Codes, Mnemotechnik und Sequenzen von Aktionen zugewiesen werden.\n"
          ]
        },
        {
          "tag_line": "Software Design-Komplexität",
          "details": [
            "Der Begriff Komplexität steht für die Zustand der Ereignisse oder Dinge, welche mehrere miteinander verbundene Links und hoch komplizierten Strukturen haben. In der Software-Programmierung, wie Gestaltung der Software realisiert wird, die Anzahl der Elemente und ihre Verbindungen allmählich emerge zu riesig sein, was zu schwierig wird,auf einmal verstehen.\n\nSoftware Design-Komplexität ist schwierig, ohne unter Verwendung die komplexität Metriken und Maßnahmen zu beurteilen. Lassen Sie uns drei wichtige Softwarekomplexität Maßnahmen sehen.\nHalsteads Komplexitätsmessungen\n\nIm Jahr 1977 führte Herr Maurice Howard Halstead-eingebracht Metriken, um die Software Komplexität zu messen. Halstead-Metriken, hängt von der tatsächlichen Durchführung des Programms und seiner Maßnahmen, die direkt von den Operatoren und Operanden aus dem Quellcode berechnet werden, in statisch Manier. Es ermöglicht zu bewerten die Testzeit, Wortschatz, Größe, Schwierigkeit, Fehler, und die Bemühungen für C / C ++ / Java-Quellcode.\n\nNach Halstead, \"Ein Computerprogramm ist eine Implementierung eines Algorithmus betrachteten zu eine Sammlung von Token, welche entweder als Operatoren oder Operanden eingeordnet werden kann.\" Halstead-Metriken denke, ein Programm als Folge von Operatoren und die damit verbundenen Operanden.\n\nEr definiert verschiedene Indikatoren, um die Komplexität des Moduls überprüfen.\nParameter \tBedeutung\nn1 \tAnzahl der eindeutigen Operatoren\nn2 \tAnzahl der eindeutigen Operanden\nN1 \tAnzahl von gesamt Vorkommen von Operatoren\nN2 \tAnzahl von gesamt Vorkommen von Operanden\n\nWenn wir wählen quelldatei zu ansehen seine Komplexität Detail in Metric-Viewer wird das folgende Ergebnis in Metric Bericht gesehen:\nmetrisch \tBedeutung \tmathematische Darstellung\nn \tVokabular \tn1 + n2\nN \tGröße \tN1 + N2\nV \tVolumen \tLänge * Log2 Vokabular\nD \tSchwierigkeit \t(n1/2) * (N1/n2)\nE \tBemühen \tSchwierigkeit * Volumen\nB \tFehler \tVolumen / 3000\nT \tTesten zeit \tZeit= Bemühen / Sek., where Sek.=18 Sek.\nZyklomatische Komplexitätsmessungen\n\nJedes Programm emcompasses Aussagen ausführen in Ordnung zu, auszuführen einige Aufgabe und anderen EntscheidungsMaking \u200B\u200BAussagen, die entscheiden, was Aussagen müssen ausgeführt werden. Diese EntscheidungsMaking \u200B\u200BKonstrukte Veränderung den Ablauf des Programms.\n\nWenn wir Vergleichen zwei Programme der gleichen Größe, der eine mit mehr EntscheidungsMaking \u200B\u200BAussagen komplexer sein wird als die Kontrolle der Programmsprünge häufig.\n\nMcCabe, in 1976, vorgeschlagen Zyklomatische Komplexität maßnahme zu quantifizieren, die Komplexität einer gegeben Software. Es ist graph Angetrieben modell, dass ist basierend auf EntscheidungsMaking \u200B\u200BKonstrukte von programm wie if-else, do-while, repeat-untile, switch-case und goto-Anweisungen.\n\nProzess zu Machen Flusskontrolle Graph.\n\n    Pause Programm in kleineren Blöcken, die durch EntscheidungsMaking \u200B\u200BKonstrukte abgegrenzt.\n\n    Erstellen Knoten, vertreten jedem dieser Knoten.\n\n    Verbinden Sie Knoten wie folgt.\n\n        Wenn die Kontrolle kann Zweig von block i zu block j\n\n        Zeichne einen Bogen\n\n        Von der Ausfahrt Knoten zu Eintrag Knoten\n\n        Zeichne einen Bogen\n\nUm Zyklomatische Komplexität eines Programmmoduls zu berechnen, nutzen wir die Formel -\n\nV(G) = e – n + 2\n\nwo\ne ist gesamt Anzahl von Ränder\nn ist gesamt Anzahl von Knoten\n\nZyklomatische Komplexitätsmessungen\n\nDie Cyclomatic Komplexität der oben Modul ist.\n\ne = 10\nn = 8\nCyclomatic Komplexität  = 10 - 8 + 2\n                        = 4\n\nNach P. Jorgensen, sollte Zyklomatische Komplexität eines Moduls 10 nicht überschreiten.\nFunktionspunkt\n\nEs ist weit verbreitet, um die Größe der Software zu messen. Funktionspunkt konzentriert sich auf die Funktionalität, die von dem System bereitgestellt. Merkmale und Funktionalität des Systems sind verwendet, zu messen SoftwareKomplexität.\n\nFunction-Point zählt auf fünf Parameter, als Externe Eingange, Externe Ausgang, Logisch Interne Dateien, externe Anfrage. Um die betrachtenKomplexität der Software, jeder Parameter wird weiter als einfache, Durchschnitt oder komplexe kategorisiert.\nFunction Point\n\nLasst uns sehen, Parameter der Funktion Punkt:\nExterne Eingage\n\nJede eindeutige Eingang dem System von außen ist betrachtet als externe Eingabe. Einzigartigkeit der Eingang wird gemessen, wie keine zwei Eingänge sollten gleichen Formate haben. Diese Eingänge können entweder Daten oder Steuerparameter sein.\n\n    einfache - wenn der eingangzählen ist gering und betrifft weniger interne Dateien.\n\n    Komplex - wenn der eingangzählen ist hoch und betrifft mehr interne Dateien.\n\n    Durchschnitt - In-zwischen einfacher und komplexer.\n\nExterne Ausgang\n\nAlle Ausgabe typen vom System bereitgestellten werden in dieser Kategorie gezählt. Ausgang wird betrachtet einzigartig, wenn ihre Ausgabeformat und / oder die Verarbeitung eindeutig sind.\n\n    einfache - wenn Ausgang zählen ist niedrig.\n\n    Komplex - wenn Ausgang zählen ist hoch.\n\n    Durchschnitt - in zwischen einfacher und komplexer.\n\nLogisch Interne Dateien\n\nJedes Softwaresystem unterhält interne Dateien, in Ordnung um unterhält seine funktionelle Informationen und ordnungsgemäß zu funktionieren. Diese Dateien halten logische Daten des Systems. Diese logische Daten können enthalten sowohl Funktionsdaten und Steuerdaten.\n\n    einfache - Wenn die Anzahl der Datensatztypen niedrig sind.\n\n    Komplex - Wenn die Anzahl der Datensatztypen hoch sind.\n\n    Durchschnitt - in zwischen einfacher und komplexer.\n\nExterne Interface-Dateien\n\nSoftware-System muss auf seine Dateien mit einige einer externen Software zu teilen oder es kann brauchen, um die Datei zur Verarbeitung oder als Parameter zu einige Funktion. All diese Dateien werden als externe Schnittstellendateien gezählt.\n\n    einfache - Wenn die Anzahl der Datensatztypen in gemeinsam genutzten Datei sind niedrig.\n\n    Komplex - Wenn die Anzahl der Datensatztypen in gemeinsam genutzten Datei sind hoch.\n\n    Durchschnitt - in zwischen einfacher und komplexer.\n\nexterne Anfrage\n\neine Anfrage ist ein kombination von eingang und ausgang, wo Benutzer sendet einige daten zu Erkundigen über als eingang und die system reagieren zu die Benutzer with die ausgange von Anfrage Verarbeitet. Die Komplexität einer Abfrage ist mehr als External Input und externer Ausgang. Abfrage ist sagte sein einzigartig, wenn seine Eingabe und Ausgabe sind in Bezug auf Format und Daten einzigartig.\n\n    einfache - wenn Abfrage bedürfnissen niedrigen Verarbeitungs und ergibt geringe Menge an Ausgabedaten.\n\n    Komplex - wenn Abfrage bedürfnissen hohe Prozess und ergibt große Menge an Ausgabedaten.\n\n    Durchschnitt - in zwischen einfacher und komplexer.\n\nJeder dieser Parameter im System Gewichtung entsprechend ihrer Klasse und Komplexität gegeben. Die folgende Tabelle nennt die Gewichtung zu jedem Parameter angegeben:\nParameter \teinfache \tDurchschnitt \tKomplex\nEingänge \t3 \t4 \t6\nAusgänge \t4 \t5 \t7\nAnfrage \t3 \t4 \t6\nDateien \t7 \t10 \t15\nSchnittstellen \t5 \t7 \t10\n\nDie Tabelle obige Ausbeute roh Function Points. Diese Funktions punkte sind entsprechend der Umgebung Komplexität eingestellt. System ist unter Verwendungvierzehn verschiedenen Charakteristik beschrieben:\n\n    Datenkommunikation\n    verteilte Verarbeitung\n    Durchführungsziele\n    Betriebskonfiguration Last\n    Transaktionsrate\n    Online-Dateneingabe,\n    Endbenutzer Effizienz\n    Online update\n    Komplexe Verarbeitungslogik\n    Wiederverwendbarkeit\n    Installation leichtigkeit\n    operativleichtigkeit\n    Sites verschiedenster Anbieter\n    Lust auf Veränderungen zu erleichtern\n\nDiese Eigenschaften Faktoren werden dann von 0 bis 5 bewertet, wie unten erwähnt:\n\n    kein Einfluss\n    nebensächlich\n    mäßigen\n    Durchschnitt\n    signifikant\n    wesentliche\n\nAlle Wertungen werden dann zusammengefasst als N. Der Wert von N im Bereich von 0 bis 70 (14 typen von Charakteristik x 5 typen von ratings). Es wird verwendet, um Anpassungsfaktoren zu berechnen Komplexität (CAF), unter Verwendung folgenden Formeln:\n\nCAF = 0.65 + 0.01N\n\nThen,\n\nGeliefert Function Points (FP) = x CAF Raw FP\n\nDiese FP kann dann verwendet werden in verschiedene Metriken, wie:\n\n    Kosten = $ / FP\n\n    Qualität = Fehler / FP\n\n    Produktivität = FP / PersonMonats\n"
          ]
        },
        {
          "tag_line": "Software Implementierung",
          "details": [
            "<p>In diesem Kapitel werden wir &uuml;ber Programmiermethoden, Dokumentation und Herausforderungen in der Software-Implementierung zu studieren.</p>\n<h2>Strukturierte Programmierung</h2>\n<p>In den Prozess der Kodierung, die Codezeilen zu halten Multiplikations damit, Gr&ouml;&szlig;e der Software erh&ouml;ht. Allm&auml;hlich wird es fast unm&ouml;glich, den Fluss des Programms erinnern. Wenn man vergisst, wie Software und der zugrunde liegenden Programme, Dateien, werden Verfahren konstruiert wird es dann sehr schwierig, zu teilen, zu debuggen und das Programm zu &auml;ndern. Die L&ouml;sung hierf&uuml;r von diese ist die strukturierte Programmierung. Er ermutigt die Entwickler an Unterprogramme verwenden und Schleifen statt mit einfachen Spr&uuml;ngen im Code, damit bringing Klarheit in den Code und die Verbesserung ihrer Effizienz Strukturierte Programmierung hilft auch Programmierer, um zu reduzieren die Programmierzeit und organisieren Code richtig.</p>\n<p>Strukturierte Programmierung Staaten, wie das Programm codiert werden. Strukturierte Programmierung verwendet drei Hauptkonzepte:</p>\n<ul class=\"list\">\n<li>\n<p><strong>Top-down-Analyse</strong> - Eine Software wird immer gemacht, einige rational Arbeit zu verrichten. Diese rational Arbeit wird als Problem in der Software-Sprachgebrauch bekannt. So ist es sehr wichtig, dass wir verstehen, wie man das Problem l&ouml;sen. Unter Top-Down-Analyse, wird das Problem in kleine St&uuml;cke, wo jeder eine gewisse Bedeutung hat gebrochen. Jedes Problem wird individuell gel&ouml;st und die Schritte sind klar dar&uuml;ber, wie das Problem zu l&ouml;sen angegeben.</p>\n</li>\n<li>\n<p><strong>Modulare Programmierung</strong> - W&auml;hrend der Programmierung wird der Code in kleinere Gruppe von Anweisungen gebrochen. Diese Gruppen werden als Module, Unterprogramme oder Unterprogramme bekannt. Modulare Programmierung basiert auf dem Verst&auml;ndnis von Top-down-Analyse. Es entmutigt Spr&uuml;nge mit \"goto\"-Anweisungen in das Programm, das oft macht der Programm fluss nicht auffindbar. Spr&uuml;nge sind verboten und modulare Format wird in die strukturierte Programmierung gef&ouml;rdert.</p>\n</li>\n<li>\n<p><strong>Strukturierte Coding</strong> - In Bezug mit Top-Down-Analyse, strukturierte Codierung Unter teilt die Module in weitere kleinere Einheiten von Code in der Reihenfolge ihrer Ausf&uuml;hrung. Strukturierte Programmierung verwendet Kontrollstruktur, die den Ablauf des Programms steuert, w&auml;hrend strukturierte Codierung verwendet Kontrollstruktur, seine Anweisungen in definierbaren Mustern zu organisieren.</p>\n</li>\n</ul>\n<h2>Funktionale Programmierung</h2>\n<p>Funktionale Programmierung ist der Stil der Programmier sprache, die die Konzepte der mathematischen Funktionen verwendet. Eine Funktion in der Mathematik sollte immer das gleiche Ergebnis produzieren auf dem Empfang der gleiche Argument. In Verfahrenssprachen l&auml;uft der Ablauf des Programms durch Prozeduren, dh die Steuerung des Programms an die gerufene Prozedur &uuml;bergeben. W&auml;hrend Steuer fluss von einem Prozedur zu einem anderen zu &uuml;bertragen, &auml;ndert das Programm seinen Zustand.</p>\n<p>In prozeduralen Programmierung ist es m&ouml;glich, ein Verfahren zu unterschiedlichen Ergebnissen f&uuml;hren, wenn sie mit dem gleichen Argument aufgerufen, da das Programm selbst kann in anderen Zustand zu sein, w&auml;hrend sie anruft. Dies ist eine Immobilien sowie ein Nachteil der prozeduralen Programmiersprache, in der die Sequenz oder den zeitlichen Ablauf des Verfahrens der Ausf&uuml;hrung wichtig.</p>\n<p>Funktionale Programmierung bietet mittels Berechnung als mathematische Funktionen, die Ergebnisse unabh&auml;ngig produziert von Programmzustand. Dies macht es m&ouml;glich, das Verhalten des Programms vorherzusagen.</p>\n<p>Funktionale Programmierung Verwendungen die folgenden Konzepte:</p>\n<ul class=\"list\">\n<li>\n<p><strong>First-Class-und Hoch um Funktionen</strong> - Diese Funktionen haben F&auml;higkeit, eine andere Funktion als Argument akzeptieren oder sie zur&uuml;ckkehren andere funktionen als Ergebnisse.</p>\n</li>\n<li>\n<p><strong>Reine Funktionen</strong> - Diese Funktionen beinhalten nicht destruktiv-Updates, das hei&szlig;t, sie haben keinen Einfluss auf jede I / O oder Speicher, und wenn sie nicht in Gebrauch sind, k&ouml;nnen sie leicht entfernt werden ohne Behinderung den Rest des Programms.</p>\n</li>\n<li>\n<p><strong>Rekursion</strong> - Rekursion ist eine Programmiertechnik, bei der eine Funktion sich selbst aufruft und wiederholt den Programmcode, es sei denn in einigen vordefinierten Bedingung Streichh&ouml;lzer. Rekursion ist der Weg zur Schaffung von Schleifen in der funktionalen Programmierung.</p>\n</li>\n<li>\n<p><strong>Strenge Bewertung</strong> - Es ist eine Methode der Auswertung des Ausdrucks &uuml;bergeben auf eine Funktion als Argument. Funktionale Programmierung hat zwei Arten von Bewertungsmethoden, strenge (eifrig) oder nicht-strengen (faul). Strenge Auswertung ergibt immer den Ausdruck vor dem Aufruf der Funktion. Nicht-strikte Auswertung nicht den Ausdruck werden auszuwerten, es sei denn sie ben&ouml;tigt wird.</p>\n</li>\n<li>\n<p><strong>&lambda;-Kalk&uuml;l</strong> - Die meisten funktionalen Programmiersprachen verwenden &lambda;-Kalk&uuml;l als Typsysteme. &lambda;-Ausdr&uuml;cke werden durch die Auswertung, wie sie auftreten, ausgef&uuml;hrt.</p>\n</li>\n</ul>\n<p>Common Lisp, Scala, Haskell, Erlang und F # sind einige Beispiele von funktionalen Programmiersprachen.</p>\n<h2>Programmierstil</h2>\n<p>Programmierstil wird set von Codierungsregeln gefolgt von allen Programmierern, den Code zu schreiben, eingestellt. Wenn mehrere Programmierer arbeiten auf der gleichen Software-Projekt, sie h&auml;ufig m&uuml;ssen zu arbeiten mit dem Programmcode von einem anderen Entwickler geschrieben. Das wird langweilig oder zu Zeiten unm&ouml;glich, wenn alle Entwickler nicht einige Standard-Programmierstil zu code Programm zu folgen.</p>\n<p>Eine entsprechende Programmierstil umfasst mit der Funktion und Variablennamen, die f&uuml;r die vorgesehene Aufgabe, mit gut platzierten Einbuchtung, kommentierte Code f&uuml;r die Bequemlichkeit der Leser und Gesamtdarstellung des Codes. Das macht das Programm Code lesbar und verst&auml;ndlich durch alle, was wiederum die Fehlersuche und Fehler L&ouml;sung erleichtert. Au&szlig;erdem hilft die richtige Art der Programmierung erleichtern die Dokumentation und updation.</p>\n<h3>Coding Guidelines</h3>\n<p>Praxis der Codierung Stil &auml;ndert sich mit Organisationen, Betriebssysteme und Sprachkodierungs sich.</p>\n<p>Die folgenden Kodierungselemente k&ouml;nnen unter Code-Richtlinien einer Organisation definiert werden:</p>\n<ul class=\"list\">\n<li>\n<p><strong>Namenskonventionenns</strong> - Dieser Abschnitt definiert, wie zu Namen Funktionen, Variablen, Konstanten und globale Variablen.</p>\n</li>\n<li>\n<p><strong>Einr&uuml;cken</strong> - Dies ist der Raum links am Anfang der Zeile, In der Regel 2-8 whitespace oder einzelne Registerkarte.</p>\n</li>\n<li>\n<p><strong>Whitespace</strong> - Es ist allgemein bei die Ende der Zeile weggelassen.</p>\n</li>\n<li>\n<p><strong>Betreiber</strong> - Definiert die Regeln des Schreibens mathematische, Zuweisung und logische Operatoren. Zum Beispiel, Zuweisungsoperator '=' sollte Raum vor und nach es haben, wie in \"x = 2\".</p>\n</li>\n<li>\n<p><strong>Kontrollstrukturen</strong> - Die Regeln des Schreibens if-then-else, case-Schalter, w&auml;hrend-bis und f&uuml;r zur Kontroll Flussrechnung allein und in verschachtelten Mode.</p>\n</li>\n<li>\n<p><strong>Leitungsl&auml;nge und Verpackung</strong> - Legt fest, wie viele Zeichen sollte es in einer Zeile sein, meist eine Zeile 80 Zeichen lang. Verpackung definiert, wie eine Linie sollte gewickelt werden, wenn zu lang ist.</p>\n</li>\n<li>\n<p><strong>Funktionen</strong> - Dieser legt fest, wie Funktionen sollten deklariert und aufgerufen werden, mit und ohne Parameter.</p>\n</li>\n<li>\n<p><strong>Variablen</strong> - Dieser erw&auml;hnt, wie Variablen unterschiedlicher Datentypen deklariert und definiert.</p>\n</li>\n<li>\n<p><strong>Kommentare</strong> - Dies ist eine der wichtigsten Komponenten Codierung, da die Kommentare im Code enthalten zu beschreiben, was der Code tats&auml;chlich tut und alle anderen zugeh&ouml;rigen Beschreibungen. Dieser Abschnitt hilft auch die Schaffung Hilfe Dokumentationen f&uuml;r andere Entwickler.</p>\n</li>\n</ul>\n<h2>Software-Dokumentation</h2>\n<p>Software-Dokumentation ist ein wichtiger Teil der Software-Prozess. Ein gut geschriebenes Dokument bietet ein gro&szlig;es Werkzeug und Mittel der Informations-Repository notwendig, &uuml;ber Software-Prozess kennen. Software-Dokumentation bietet auch Informationen dazu, wie Sie das Produkt verwenden.</p>\n<p>Ein gepflegtes Dokumentation sollte folgende beinhalten Unterlagen:</p>\n<ul class=\"list\">\n<li>\n<p><strong>Anforderungsdokumentation</strong> - Diese Dokumentation arbeitet als Schl&uuml;sselinstrument f&uuml;r die Software-Designer, Entwickler und das Testteam zur Erf&uuml;llung ihrer jeweiligen Aufgaben. Dieses Dokument enth&auml;lt alle funktionalen, nicht-funktionalen und Verhaltensbeschreibung der geplanten Software.</p>\n<p>Quelle dieses Dokuments k&ouml;nnen zuvor gespeicherte Daten werden &uuml;ber die Software, die bereits mit Software am Ende des Kunden, das Interview Client, Frageb&ouml;gen und Forschung. Generell es ist gespeichert in Form von Tabellenkalkulation oder Textverarbeitungsdokument mit der High-End-Software-Management-Team wird.</p>\n<p>Diese Dokumentation arbeitet als Grundlage f&uuml;r die Software entwickelt und wird in majorly Verifikation und Validierung Phasen verwendet. Die meisten Testf&auml;lle werden direkt von der Anforderungsdokumentation gebaut.</p>\n</li>\n<li>\n<p><strong>Software Design Dokumentation</strong> - Diese Dokumentationen enthalten alle notwendigen Informationen, die erforderlich sind, um die Software zu bauen. Es enth&auml;lt <strong>(a)</strong> High-Level-Software-Architektur, <strong>(b)</strong> Software design details, <strong>(c)</strong> Datenflussdiagramme, <strong>(d)</strong> Datenbank-Design.</p>\n<p>Diese Dokumente arbeiten als Repository f&uuml;r Entwickler, die Software zu implementieren. Obwohl diese Dokumente geben keine Informationen, wie man den Programmcode, geben sie alle notwendigen Informationen, die f&uuml;r die Codierung und Implementierung erforderlich ist.</p>\n</li>\n<li>\n<p><strong>Technische Dokumentation</strong> - Diese Dokumentationen werden von den Entwicklern und den tats&auml;chlichen Programmierer gehalten. Diese Dokumente, als Ganzes repr&auml;sentieren Informationen &uuml;ber den Code. W&auml;hrend das Schreiben des Codes, die Programmierer auch erw&auml;hnen Ziel der Code, der es geschrieben hat, wo wird es erforderlich sein, was sie tut und wie es das macht, was andere Ressourcen der Code, etc.</p>\n<p>Die technische Dokumentation erh&ouml;ht die Verst&auml;ndigung zwischen verschiedenen Programmierer arbeiten auf dem gleichen Code. Es verbessert die Wiederverwendung F&auml;higkeit des Codes. Es macht einfach Debugging-und nachvollziehbar.</p>\n<p>Es gibt verschiedene automatisierte Werkzeuge zur Verf&uuml;gung, und einige kommt mit der Programmiersprache selbst. Zum Beispiel kommt Java JavaDoc Tool, um technische Dokumentation von Code zu generieren.</p>\n</li>\n<li>\n<p><strong>Benutzerdokumentation</strong> - Diese Dokumentation ist anders als alle oben erl&auml;utert. Alle bisherigen Dokumentationen werden gehalten, um Informationen &uuml;ber die Software und deren Entwicklungsprozess. Aber der Benutzerdokumentation erkl&auml;rt, wie das Software-Produkt sollte funktionieren und wie sie verwendet werden, um die gew&uuml;nschten Ergebnisse zu erhalten.</p>\n<p>Diese Dokumentationen k&ouml;nnen umfassen, Software-Installationsverfahren, schrittweise Anleitungen, Benutzerhandb&uuml;cher , Deinstallationsmethode und spezielle Verweise auf weitere Informationen wie Lizenz updation etc zu bekommen.</p>\n</li>\n</ul>\n<h2>Software-Implementierung Herausforderungen</h2>\n<p>Es gibt einige Herausforderungen durch das Entwicklungsteam konfrontiert, w&auml;hrend die Umsetzung der Software. Einige von ihnen sind unten aufgef&uuml;hrt:</p>\n<ul class=\"list\">\n<li>\n<p><strong>Code-Wiederverwendung</strong> - Programmierschnittstellen des heutigen Sprachen sind sehr anspruchsvoll und werden ausgestattet riesige Bibliothek-Funktionen. Noch, um die Kosten niedrig Endprodukt zu bringen, zieht das Organisationsmanagement neu zu verwenden Sie den Code, der fr&uuml;her f&uuml;r eine andere Software erstellt wurde. Es gibt riesige Probleme die Programmierer f&uuml;r die Kompatibilit&auml;tspr&uuml;fungen konfrontiert und zu entscheiden, wie viel Code wieder zu verwenden.</p>\n</li>\n<li>\n<p><strong>Versionsverwaltung</strong> - Jedes Mal, wenn eine neue Software an den Kunden ausgegeben werden, haben die Entwickler auf Version und Konfiguration der zugeh&ouml;rigen Dokumentation zu erhalten. Diese Dokumentation muss sehr genau und rechtzeitig verf&uuml;gbar sein.</p>\n</li>\n<li>\n<p><strong>Ziel-Host</strong> - Die Software-Programm, das in der Organisation entwickelt wird, muss f&uuml;r Host-Maschinen entwickelt, um die Kunden zu beenden. Aber manchmal ist es unm&ouml;glich, eine Software, die auf den Zielmaschinen funktioniert entwerfen.</p>\n</li>\n</ul>"
          ]
        },
        {
          "tag_line": "Software Testing Übersicht",
          "details": [
            "<p>Software Testing ist die Evaluierung der Software mit den Anforderungen der Anwender und Systemspezifikationen versammelt. Die Pr&uuml;fung erfolgt an der Phasen Ebene in der Software-Entwicklungs-Lebenszyklus oder auf Modulebene in Programmcode durchgef&uuml;hrt. Software-Test besteht aus Validierung und Verifizierung.</p>\n<h2>Software Validierung</h2>\n<p>Die Validierung ist dabei zu pr&uuml;fen, ob die Software die Anforderungen der Nutzer erf&uuml;llt. Es wird am Ende des SDLC gef&uuml;hrt. Wenn die Software passt Anforderungen, f&uuml;r die es gemacht wurde, wird sie validiert.</p>\n<ul class=\"list\">\n<li>\n<p>Validierung stellt sicher, das Produkt in der Entwicklung ist nach den Anforderungen der Anwender.</p>\n</li>\n<li>\n<p>Validierung beantwortet die Frage -. \"Sind wir die Entwicklung des Produkts, die alle Bed&uuml;rfnisse der Nutzer, dass die von dieser Software versucht\".</p>\n</li>\n<li>\n<p>Validierung unterstreicht den Anforderungen des Anwenders.</p>\n</li>\n</ul>\n<h2>Software Verifikation</h2>\n<p>Verifikation ist der Prozess der Best&auml;tigung, wenn die Software, die den Gesch&auml;ftsanforderungen und ist mit den richtigen Spezifikationen und Methoden anhaftenden entwickelt.</p>\n<ul class=\"list\">\n<li>\n<p>Verifikation gew&auml;hrleistet das Produkt entwickelt wird nach Design-Vorgaben.</p>\n</li>\n<li>\n<p>Verifikation beantwortet das fraglich \"Sind wir der Entwicklung dieses Produkts durch festes folgenden alle Konstruktionsvorgaben?\"</p>\n</li>\n<li>\n<p>Verifikation konzentriert sich auf die Konstruktion und Systemspezifikationen.</p>\n</li>\n</ul>\n<p>Ziel des Tests -</p>\n<ul class=\"list\">\n<li>\n<p><strong>Fehler</strong> - Diese sind tats&auml;chliche Codierung Fehler, die von Entwicklern gemacht. Dar&uuml;ber hinaus gibt es einen Unterschied in der Leistung von Software und gew&uuml;nschte Ausgabe wird als Fehler betrachtet.</p>\n</li>\n<li>\n<p><strong>Verschulden</strong> - Wenn Fehler vorhanden Fehler auftritt. Eine St&ouml;rung, die auch als Fehler bezeichnet, ist eine durch einen Fehler, die dazu f&uuml;hren k&ouml;nnen System zu scheitern.</p>\n</li>\n<li>\n<p><strong>Ausfall</strong> - Ausfall wird gesagt, der Unf&auml;higkeit des Systems, um die gew&uuml;nschte Aufgabe durchf&uuml;hren zu k&ouml;nnen. Fehler auftritt, wenn Fehler im System vorhanden ist.</p>\n</li>\n</ul>\n<h2>Manuelle Vs Automatisiertes Testen</h2>\n<p>Die Pr&uuml;fung kann entweder manuell oder mit Hilfe eines automatisierten Testwerkzeug durchgef&uuml;hrt werden:</p>\n<ul class=\"list\">\n<li>\n<p><strong>Handbuch</strong> - Diese Pr&uuml;fung ist ohne die Hilfe von automatisierten Test-Tools durchgef&uuml;hrt. Die Software-Tester bereitet Testf&auml;lle f&uuml;r verschiedene Sektionen und Ebenen des Codes f&uuml;hrt die Tests und meldet das Ergebnis an den Manager.</p>\n<p>Handbuch testen ist zeitaufw&auml;ndig und ressourcen. Der Tester muss, um zu best&auml;tigen, ob rechts von Testf&auml;llen verwendet werden. Gro&szlig;teil der Tests beinhaltet die manuelle Pr&uuml;fung.</p>\n</li>\n<li>\n<p><strong>Automatische</strong> - Diese Tests ist ein Testverfahren mit Hilfe von automatisierten Test-Tools durchgef&uuml;hrt. Die Beschr&auml;nkungen, die mit manuellen Tests k&ouml;nnen mit automatisierten Testwerkzeugen &uuml;berwunden werden.</p>\n</li>\n</ul>\n<p>Ein Test muss &uuml;berpr&uuml;fen, ob eine Webseite in Internet Explorer ge&ouml;ffnet werden. Dies kann leicht mit Handpr&uuml;fung erfolgen. Aber um zu &uuml;berpr&uuml;fen, ob der Web-Server die Last von 1 Millionen Nutzer nehmen, ist es ganz unm&ouml;glich, manuell zu testen.</p>\n<p>Es gibt Software-und Hardware-Tools, die Tester bei der Durchf&uuml;hrung von Lasttests, Stresstests, Regressionstests hilft.</p>\n<h2>Testing Ans&auml;tze</h2>\n<p>Tests basierend auf zwei Ans&auml;tze durchgef&uuml;hrt werden -</p>\n<ul class=\"list\">\n<li>Testen der Funktionalit&auml;t,</li>\n<li>Umsetzung Pr&uuml;fung</li>\n</ul>\n<p>Wenn Funktionalit&auml;t wird ohne die tats&auml;chliche Umsetzung in Sorge es wird als Black-Box-Tests bekannt getestet. Die andere Seite wird als White-Box-Tests, wo nicht nur Funktionalit&auml;t getestet, aber die Art, wie sie umgesetzt wird, wird auch untersucht, bekannt.</p>\n<p>Ausf&uuml;hrliche Tests sind die am besten gew&uuml;nschte Methode f&uuml;r eine perfekte Test. Jeden m&ouml;glichen Wert in dem Bereich der Eingangs und Ausgangswerte getestet. Es ist nicht m&ouml;glich, jeden einzelnen Wert in der realen Welt Szenario zu testen, ob der Wertebereich ist gro&szlig;.</p>\n<h3>Black-Box-Testen</h3>\n<p>Es wird darauf Test Funktionalit&auml;t des Programms durchgef&uuml;hrt. Es wird auch als \"Behavioral 'Tests genannt. Der Tester in diesem Fall hat eine Gruppe von Eingabewerten und entsprechenden gew&uuml;nschten Ergebnisse. Auf die Bereitstellung von Input, wenn die Ausgabe mit den gew&uuml;nschten Ergebnissen &uuml;bereinstimmt, wird das Programm getestet, OK ', und sonst problematisch.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/black_box_testing.png\" alt=\"Black-box Testing\" /></p>\n<p>In diesem Testverfahren, das Design und die Struktur des Codes sind nicht zum Tester bekannt und testen Ingenieure und Anwender f&uuml;hren diesen Test auf der Software.</p>\n<p>Black-Box-Testtechniken:</p>\n<ul class=\"list\">\n<li>\n<p><strong>&Auml;quivalenzklassen</strong> - Die Eingabe wird in &auml;hnliche Klassen eingeteilt. Wenn ein Element einer Klasse den Test besteht, wird davon ausgegangen, dass alle die Klasse &uuml;bergeben.</p>\n</li>\n<li>\n<p><strong>Randwerte</strong> - Die Eingabe wird in h&ouml;here und niedrigere Endwerte unterteilt. Wenn diese Werte den Test, wird davon ausgegangen, dass alle Werte dazwischen kann auch passieren.</p>\n</li>\n<li>\n<p><strong>Ursache-Wirkung-Grafik</strong> - In beiden bisherigen Verfahren nur einen Eingabewert zu einem Zeitpunkt getestet wird. Ursache (Eingang) -. Effect (Ausgang) ist ein Testverfahren, bei dem Kombinationen der Eingangswerte werden in einer systematischen Art und Weise getestet.</p>\n</li>\n<li>\n<p><strong>Paarweise Testen</strong> - Das Verhalten der Software h&auml;ngt von mehreren Parametern. In paarweise Tests, werden die mehrere Parameter paarweise f&uuml;r ihre verschiedenen Werte getestet.</p>\n</li>\n<li>\n<p><strong>State-basierte Tests</strong> - Das System &auml;ndert den Zustand &uuml;ber die Bereitstellung von Input. Diese Systeme werden auf der Grundlage ihrer Staaten und Eingangs getestet.</p>\n</li>\n</ul>\n<h3>White-Box-Testen</h3>\n<p>Es wird durchgef&uuml;hrt, um Programm und seine Durchf&uuml;hrung zu testen, um Code-Effizienz oder die Struktur zu verbessern. Es wird auch als Test \"strukturellen\" bekannt.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/white_box_testing.png\" alt=\"White-box testing\" /></p>\n<p>In diesem Testverfahren werden das Design und die Struktur des Codes an den Tester bekannt. Programmierer des Codes f&uuml;hren diesen Test auf dem Code.</p>\n<p>Die unten sind einige White-Box-Testtechniken:</p>\n<ul class=\"list\">\n<li>\n<p><strong>kontroll Flow-Testen</strong> - Der Zweck der Steuerflusstests, Testf&auml;lle, die alle Aussagen und Verzweigungsbedingungen deckt einrichten. Die Zweigbedingungen sind f&uuml;r beide sind wahr und falsch, so dass alle Aussagen abgedeckt werden getestet.</p>\n</li>\n<li>\n<p><strong>Data-Flow-Test</strong> - Diese Testtechnik Schwerpunkt, um alle Daten Variablen im Programm enthalten sind. Es testet, wo die Variablen wurden erkl&auml;rt und definiert und wo sie verwendet oder ver&auml;ndert wurden.</p>\n</li>\n</ul>\n<h2>Teststufen</h2>\n<p>Pr&uuml;fung selbst kann auf verschiedenen Ebenen der SDLC definiert werden. Der Testprozess verl&auml;uft parallel zur Software-Entwicklung. Vor dem Sprung auf die n&auml;chste Stufe wird eine B&uuml;hne getestet, validiert und verifiziert.</p>\n<p>Testing getrennt wird getan um sicherzustellen, dass es keine versteckten Fehler oder Probleme in der Software &uuml;berlassen. Software wird auf verschiedenen Ebenen getestet -</p>\n<h3>Unit Testen</h3>\n<p>W&auml;hrend Codierung, f&uuml;hrt der Programmierer einige Tests auf dieser Einheit von Programm wissen, ob es fehlerfrei ist. Die Pr&uuml;fung erfolgt unter White-Box-Testansatz durchgef&uuml;hrt. Unit-Tests k&ouml;nnen Entwickler entscheiden, dass einzelne Einheiten des Programms werden je nach Anforderung arbeiten und sind fehlerfrei.</p>\n<h3>Integration Testen</h3>\n<p>Auch wenn die Einheiten der Software werden feine individuell arbeiten, gibt es eine Notwendigkeit, um herauszufinden, ob die Ger&auml;te, wenn sie zusammen integriert w&uuml;rde auch ohne Fehler zu arbeiten. Zum Beispiel, Argument&uuml;bergabe und Daten updation etc.</p>\n<h3>System Testen</h3>\n<p>Die Software wird als Produkt gesammelt und dann wird sie als Ganzes getestet. Dies kann mit einer oder mehreren der folgenden Tests durchgef&uuml;hrt werden:</p>\n<ul class=\"list\">\n<li>\n<p><strong>Testen der Funktionalit&auml;t,</strong> - Testet alle Funktionalit&auml;ten der Software gegen die Anforderung.</p>\n</li>\n<li>\n<p><strong>Leistungspr&uuml;fung</strong> - Dieser Test beweist, wie effizient die Software ist. Es pr&uuml;ft die Wirksamkeit und die durchschnittliche Zeit, die von der Software &uuml;bernommen, um die gew&uuml;nschte Aufgabe zu tun. Performance-Tests wird durch Lasttests und Stresstests, wo die Software unter Hoch Benutzer und Datenlast unter verschiedenen Umweltbedingungen gesetzt getan.</p>\n</li>\n<li>\n<p><strong>Sicherheit &amp; Wahrscheinlichkeit</strong> - Diese Tests werden durchgef&uuml;hrt, wenn die Software soll auf verschiedenen Plattformen arbeiten und nach der Anzahl der Personen zug&auml;nglich.</p>\n</li>\n</ul>\n<h3>Acceptance Testen</h3>\n<p>Wenn die Software bereit an den Kunden muss es durch letzte Phase der Pr&uuml;fung, wo es f&uuml;r Benutzer-Interaktion und Reaktion getestet zu Hand gehen. Dies ist wichtig, denn auch wenn die Software entspricht allen Anforderungen der Nutzer und wenn der Benutzer nicht die Art, wie es scheint, oder Werke, abgelehnt werden k&ouml;nnen.</p>\n<ul class=\"list\">\n<li>\n<p><strong>Alpha testen</strong> - Das Team der Entwickler selbst Alpha-Test durchf&uuml;hren, indem Sie das System, als ob es in Arbeitsumgebung verwendet. Sie versuchen, herauszufinden, wie Benutzer auf eine Aktion in der Software und wie das System auf Eingaben reagieren reagieren w&uuml;rde.</p>\n</li>\n<li>\n<p><strong>Beta testen</strong> - Nachdem die Software intern getestet wird, wird es &uuml;ber die Nutzer &uuml;bergeben, um es unter ihre Produktionsumgebung nur f&uuml;r Testzwecke zu verwenden. Dies ist noch nicht die gelieferte Ware. Entwickler erwarten, dass die Benutzer in dieser Phase wird Minute Probleme, die &uuml;bersprungen wurden zur Teilnahme zu bringen.</p>\n</li>\n</ul>\n<h3>Regression Testen</h3>\n<p>mmer, wenn ein Software-Produkt ist mit neuen Code-Funktion oder Funktionalit&auml;t aktualisiert, es wird gr&uuml;ndlich getestet, um festzustellen, ob es irgendwelche negativen Auswirkungen der Mehr Code. Dies wird als Regressionstests bekannt.</p>\n<h2>Test Dokumentation</h2>\n<p>Testing-Dokumente werden in verschiedenen Phasen vorbereitet -</p>\n<h3>Vor der Pr&uuml;fung</h3>\n<p>Test beginnt mit Testf&auml;llen Generation. Folgende Unterlagen sind f&uuml;r die Referenz ben&ouml;tigt.</p>\n<ul class=\"list\">\n<li>\n<p><strong>SRS-Dokument</strong> - Functional Requirements Dokument.</p>\n</li>\n<li>\n<p><strong>Testrichtliniendokument</strong> - Dieser beschreibt, wie weit Test sollte vor der Freigabe des Produkts nehmen.</p>\n</li>\n<li>\n<p><strong>Teststrategie Dokument</strong> - Dieses Detail erw&auml;hnt Aspekte des Testteams, Verantwortung Matrix und Rechte / Verantwortung der Testmanager und Testingenieur.</p>\n</li>\n<li>\n<p><strong>Traceability Matrix Dokument</strong> - Dies ist SDLC-Dokument, das auf Anforderung von Treffen verbunden ist. Als neue Anforderungen kommen, werden sie in dieser Matrix zugesetzt. Diese Matrizen helfen Tester wissen, die Quelle der Anforderung. Sie k&ouml;nnen vorw&auml;rts und r&uuml;ckw&auml;rts zur&uuml;ckverfolgt werden.</p>\n</li>\n</ul>\n<h3>W&auml;hrend getestet</h3>\n<p>Die folgenden Dokumente erforderlich sein, w&auml;hrend Test gestartet und wird getan:</p>\n<ul class=\"list\">\n<li>\n<p><strong>Testfall-Dokument</strong> - Dieses Dokument enth&auml;lt eine Liste der erforderlichen Tests durchgef&uuml;hrt werden. Es enth&auml;lt Unit-Test-Plan, Testplan Integration, Systemtest und Abnahmetest Plan Plan.</p>\n</li>\n<li>\n<p><strong>Test beschreibung</strong> - Dieses Dokument ist eine ausf&uuml;hrliche Beschreibung aller Testf&auml;lle und Verfahren, um sie auszuf&uuml;hren.</p>\n</li>\n<li>\n<p><strong>Testfallbericht</strong> - Dieses Dokument enth&auml;lt Testfall Bericht als Ergebnis des Tests.</p>\n</li>\n<li>\n<p><strong>Testprotokolle</strong> - Dieses Dokument enth&auml;lt Testprotokolle f&uuml;r jeden Testfall Bericht.</p>\n</li>\n</ul>\n<h3>Nach Pr&uuml;fung</h3>\n<p>Die folgenden Dokumente k&ouml;nnen nach der Pr&uuml;fung generiert werden:</p>\n<ul class=\"list\">\n<li>\n<p><strong>Test Zusammenfassung</strong> - Dieser Test Zusammenfassung ist kollektive Analyse aller Berichte und Protokolle. Er fasst und kommt zu dem Schluss, wenn die Software ist bereit, ins Leben gerufen werden. Die Software wird unter Versionskontrollsystem freigegeben, wenn sie bereit ist, zu starten ist.</p>\n</li>\n</ul>\n<h2>Testen vs Qualit&auml;tskontrolle, Qualit&auml;tssicherung und Pr&uuml;fung</h2>\n<p>Wir m&uuml;ssen verstehen, dass Software-Tests unterscheidet sich von Software-Qualit&auml;tssicherung, Software-Qualit&auml;tssicherung und Software-Auditing.</p>\n<ul class=\"list\">\n<li>\n<p><strong>Software Qualit&auml;tssicherung</strong> - Dies sind Software-Entwicklungsprozess &Uuml;berwachungseinrichtung, durch die sichergestellt ist, dass alle Ma&szlig;nahmen werden gem&auml;&szlig; den Standards der Organisation &uuml;bernommen. Diese &Uuml;berwachung wird getan, um sicherzustellen, dass die richtige Software-Entwicklungsmethoden wurden befolgt.</p>\n</li>\n<li>\n<p><strong>Software Qualit&auml;tskontrolle</strong> - Dies ist ein System, um die Qualit&auml;t von Software-Produkt halten. Es kann funktionale und nicht-funktionale Aspekte der Software-Produkt, das den guten Willen der Organisation zu verbessern sind. Dieses System stellt sicher, dass der Kunde erh&auml;lt Qualit&auml;tsprodukt f&uuml;r ihren Bedarf und das Produkt als \"fit f&uuml;r die Anwendung\" zertifiziert.</p>\n</li>\n<li>\n<p><strong>Software audit</strong> - Dies ist eine &Uuml;berpr&uuml;fung der Verfahren von der Organisation verwendet werden, um die Software zu entwickeln. Ein Team von Wirtschaftspr&uuml;fern, unabh&auml;ngig von Entwicklungsteam untersucht die Software-Prozess, Verfahren, Anforderungen und andere Aspekte der SDLC. Der Zweck von Software-Audits ist es, dass die Software und deren Entwicklungsprozess zu &uuml;berpr&uuml;fen, sowohl entsprechen Standards, Regeln und Vorschriften.</p>\n</li>\n</ul>"
          ]
        },
        {
          "tag_line": "Softwarewartung Übersicht",
          "details": [
            "<p>Software-Wartung ist weithin anerkannt, Teil SDLC jetzt Tage. Es steht f&uuml;r alle Modifizierung und updations nach der Lieferung der Software-Produkt. Es gibt eine Reihe von Gr&uuml;nden, warum Modifizierung erforderlich sind, einige von ihnen werden nachfolgend kurz erw&auml;hnt:</p>\n<ul class=\"list\">\n<li>\n<p><strong>Marktbedingungen</strong> - Richtlinien, die sich &uuml;ber die Zeit &auml;ndert, wie die Besteuerung und neu eingef&uuml;hrten Einschr&auml;nkungen wie, wie Buchf&uuml;hrung zu halten, kann Notwendigkeit von Modifizierung ausl&ouml;sen.</p>\n</li>\n<li>\n<p><strong>Client-Anforderungen</strong> - Im Laufe der Zeit kann der Kunde fragen f&uuml;r neue Features oder Funktionen in der Software.</p>\n</li>\n<li>\n<p><strong>Host &Auml;nderungen</strong> - Wenn einer der Hardware und / oder der Plattform (zB Betriebssystem) der Ziel-Host &Auml;nderungen, Software-&Auml;nderungen n&ouml;tig sind, um die Anpassungsf&auml;higkeit zu halten.</p>\n</li>\n<li>\n<p><strong>Organisation &auml;ndert</strong> - Wenn es irgendein Gesch&auml;ft Pegel&auml;nderung am Client-Seite, wie die Reduktion der Organisation Kraft, Erwerbs eines Unternehmens, einer Organisation Erschlie&szlig;ung neuer Gesch&auml;fts, m&uuml;ssen in der Original &auml;ndern Software entstehen k&ouml;nnen.</p>\n</li>\n</ul>\n<h2>Arten von Wartungs</h2>\n<p>In einem Software-Lebenszeit, kann Art der Wartung von seiner Art variieren. Es kann nur eine Routine-Wartungsaufgaben wie einige Fehler von einigen Benutzer entdeckt zu werden, oder es kann ein gro&szlig;es Ereignis an sich, basierend auf wartungs Gr&ouml;&szlig;e oder Natur. Im Folgenden sind einige Arten von Wartungs auf der Grundlage ihrer Eigenschaften:</p>\n<ul class=\"list\">\n<li>\n<p><strong>Instandsetzung</strong> - Dazu geh&ouml;ren Modifizierung und updations, um zu korrigieren oder zu beheben Probleme, die entweder vom Benutzer entdeckt oder durch Benutzerfehler Berichte abgeschlossen sind.</p>\n</li>\n<li>\n<p><strong>Adaptive Wartung</strong> - Dazu geh&ouml;ren Modifizierung und updations angewendet, um das Software-Produkt auf dem neuesten Stand und zu halten, um den sich st&auml;ndig &auml;ndernden Welt der Technologie und gesch&auml;ftlichen Umfeld abgestimmt.</p>\n</li>\n<li>\n<p><strong>perfektiv Wartung</strong> - Dies schlie&szlig;t Modifikationen und Aktualisierungen, um die Software &uuml;ber lange Zeit nutzbar zu halten getan. Es enth&auml;lt neue Features, neue Anforderungen der Anwender f&uuml;r die Verfeinerung der Software und die Verbesserung ihrer Zuverl&auml;ssigkeit und Leistung.</p>\n</li>\n<li>\n<p><strong>Vorbeugende Wartung</strong> - Dies schlie&szlig;t Modifikationen und updations, um k&uuml;nftige Probleme der Software zu verhindern. Es zielt darauf ab, zu besuchen Probleme, welche nicht in diesem Moment signifikant, aber kann ernsthafte Probleme in der Zukunft f&uuml;hren.</p>\n</li>\n</ul>\n<h2>Kosten f&uuml;r Wartung</h2>\n<p>Berichte deuten darauf hin, dass die Kosten f&uuml;r die Wartung ist hoch. Eine Studie zur Sch&auml;tzung Software Wartung festgestellt, dass die Kosten f&uuml;r die Wartung ist so hoch wie 67% der Kosten der gesamten Software-Prozesszyklus.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/maintenance_cost_chart.png\" alt=\"Wartungskosten Tabelle\" /></p>\n<p>Im Durchschnitt sind die Kosten der Software-Wartung mehr als 50% aller SDLC-Phasen. Es gibt verschiedene Faktoren, welche Triggern Wartungskosten gehen hoch, wie zB:</p>\n<h3>Echt Welt Faktoren,r&uuml;hrend die Wartungskosten</h3>\n<ul class=\"list\">\n<li>\n<p>Die Regelalters von Software ist betrachtet bis zu 10 bis 15 Jahren.</p>\n</li>\n<li>\n<p>Older softwares, which were meant to work on slow machines with less memory and storage capacity cannot keep themselves challenging against newly coming enh&Auml;ltere Software, die dazu bestimmt waren, auf langsamen Maschinen mit weniger Speicher und Speicherkapazit&auml;t arbeiten nicht halten kann selbst eine Herausforderung gegen neu kommen verbesserte Software auf moderner Hardwareanced softwares on modern hardware.</p>\n</li>\n<li>\n<p>Die Entwicklung schreitet voran, teuer wird es, um alte Software zu erhalten.</p>\n</li>\n<li>\n<p>Die meisten Wartungstechniker sind Neuling und Nutzung Versuch und Irrtum Methode, um Problem zu l&ouml;sen.</p>\n</li>\n<li>\n<p>Oft machte &Auml;nderungen der urspr&uuml;nglichen Struktur der Software leicht verletzt, so dass es schwer f&uuml;r sp&auml;tere &Auml;nderungen.</p>\n</li>\n<li>\n<p>&Auml;nderungen werden oft ohne Papiere verlassen die mehr Konflikte in Zukunft f&uuml;hren kann.</p>\n</li>\n</ul>\n<h3>Software-End-Faktoren, die Wartungskosten</h3>\n<ul class=\"list\">\n<li>Struktur der Software-Programm</li>\n<li>Programming Language</li>\n<li>Abh&auml;ngigkeit von externen Umfeld</li>\n<li>Mitarbeiter die Zuverl&auml;ssigkeit und Verf&uuml;gbarkeit</li>\n</ul>\n<h2>Wartung Aktivit&auml;ten</h2>\n<p>IEEE bietet einen Rahmen f&uuml;r die sequentielle Wartungsprozess Aktivit&auml;ten. Es kann in iterativer Weise verwendet werden und kann verl&auml;ngert werden, so dass ma&szlig;geschneiderte Produkte und Verfahren k&ouml;nnen sein inbegriffen.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/maintenance_activities.png\" alt=\"Wartung T&auml;tigkeiten\" /></p>\n<p>Diese Aktivit&auml;ten gehen Hand in Hand mit jeder der folgenden Phase:</p>\n<ul class=\"list\">\n<li>\n<p><strong>Identifikation &amp; Tracing</strong> - Es geht um T&auml;tigkeiten im Zusammenhang mit der Identifizierung der Anforderung Modifikation oder Wartung. Es wird von Benutzer oder System erzeugt werden, k&ouml;nnen selbst berichten via Protokolle oder Fehler messages. Here, wird die Wartung Typ Auch klassifiziert.</p>\n</li>\n<li>\n<p><strong>Analyse</strong> - Die Modifikation ist f&uuml;r seine Auswirkungen auf das System einschlie&szlig;lich der Sicherheit und Auswirkungen auf die Sicherheit analysiert. Wenn wahrscheinlichen Auswirkungen schwerwiegend ist, wird alternative L&ouml;sung gesucht. Eine Set von erforderlich Modifikation wird dann materialisiert in Pflichtenheften. Die Kosten f&uuml;r die &Auml;nderung / Wartung analysiert und Sch&auml;tzung abgeschlossen ist.</p>\n</li>\n<li>\n<p><strong>Design</strong> - Neue Module, die ersetzt oder ge&auml;ndert werden m&uuml;ssen, werden konzipiert gegen Erfordernis Pflichtenheft gesetzt in der vorherigen Stufe. Testf&auml;lle werden f&uuml;r die Validierung und Verifizierung erstellt.</p>\n</li>\n<li>\n<p><strong>Umsetzung</strong> - Die neuen Module werden codiert mit Hilfe von strukturierten Design erstellt in der Design step. Every Programmierer wird erwartet, zu tun Unit-Testen parallel.</p>\n</li>\n<li>\n<p><strong>Systemtest</strong> - Integrationstest ist bei neu erstellten Module getan. Integrationstests wird auch zwischen den neuen Modulen und dem System durchgef&uuml;hrt. Schlie&szlig;lich wird das System ist getestet als Ganzes, folgende regressive Testen Verfahren.</p>\n</li>\n<li>\n<p><strong>Acceptance Test</strong> - Nach dem Test des System intern, ist es f&uuml;r die Akzeptanz mit der Hilfe von Anwendern getestet. Wenn in diesem Zustand, Beschwerden von Benutzern einige Fragen, die sie adressiert sind oder bemerkt in n&auml;chste Iteration anzugehen.</p>\n</li>\n<li>\n<p><strong>Lieferung</strong> - Nach Abnahme, ist das System in der ganzen Organisation entweder durch kleine Update-Paket oder frische Installation des Systems im Einsatz. Die letzte Pr&uuml;fung bei Client-Seite erfolgt, nachdem die Software geliefert wird.</p>\n<p>Training-Betrieb ist gegeben, wenn erforderlich, zus&auml;tzlich zu der Fest Kopie der Bedienungsanleitung.</p>\n</li>\n<li>\n<p><strong>Instandhaltungsmanagement</strong> - Konfigurationsmanagement ist ein wesentlicher Bestandteil der Wartung des Systems. Es ist mit Versionskontrollwerkzeuge, um Versionen, semi-Version oder Patch-Management- unterst&uuml;tzt.</p>\n</li>\n</ul>\n<h2>Software Re-engineering</h2>\n<p>Wenn wir sie brauchen, um die Software zu aktualisieren, um sie auf den aktuellen Markt zu halten, ohne Auswirkungen auf die Funktionalit&auml;t, wird es als Software-Re-Engineering. Es ist ein Prozess, bei dem gr&uuml;ndlichen das Design der Software ge&auml;ndert und Programme werden neu geschrieben.</p>\n<p>Legacy-Software kann nicht halten Abstimmung mit der neuesten Technologie auf dem Markt verf&uuml;gbar. Da die Hardware veraltet, Aktualisierung von Software wird ein Kopfschmerz. Auch wenn Software altert mit der Zeit, hat seine Funktionalit&auml;t nicht.</p>\n<p>Beispiel zun&auml;chst Unix wurde in Assembler Sprache entwickelt. Wenn die Sprache C kommen in die Existenz, Unix wurde neu entwickelt, in C, weil die Arbeit in Assembler Sprache war schwierig.</p>\n<p>Andere als diese, manchmal Programmierer feststellen, dass einige Teile der Software brauchen mehr Pflege als andere, und sie m&uuml;ssen auch Re-Engineering.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/reengineering_process.png\" alt=\"Prozess der Re-Engineering\" /></p>\n<h3>Re-Engineering-Prozess</h3>\n<ul class=\"list\">\n<li>\n<p><strong>Entscheiden</strong> - Was zu re-engineer. Ist es ganze Software oder ein Teil davon?</p>\n</li>\n<li>\n<p><strong>F&uuml;hren</strong> - Reverse Engineering, um Spezifikationen der vorhandenen Software zu erhalten.</p>\n</li>\n<li>\n<p><strong>Restrukturierung Programm</strong> - wenn erforderlich. Werden beispielsweise wechselnden die funktionsorientierte Programme in objektorientierten Programmen.</p>\n</li>\n<li>\n<p><strong>Re-Struktur-Daten</strong> - nach Bedarf.</p>\n</li>\n<li>\n<p><strong>&Uuml;bernehmen Forward Engineering</strong> - Konzepte, um re-engineered Software zu erhalten.</p>\n</li>\n</ul>\n<p>Es gibt einige wichtige Begriffe in Software-Reengineering verwendet.</p>\n<h3>Reverse Engineering</h3>\n<p>Es ist ein Prozess, System-Spezifikation von einer gr&uuml;ndlichen Analyse, das Verst&auml;ndnis der bestehenden System zu erreichen. Dieser Prozess kann als Reverse SDLC-Modell gesehen werden, also versuchen wir zu h&ouml;heren Abstraktionsebene durch die Analyse von niedrigeren Abstraktionsebenen zu erhalten.</p>\n<p>Ein bestehendes System wird vorher Design implementiert, &uuml;ber die wir nichts wissen. Designer dann nicht durch Reverse Engineering Blick auf den Code und versuchen, den Entwurf zu erhalten. Mit Design in der Hand, versuchen sie, die Spezifikationen zu schlie&szlig;en. So gehen in umgekehrter von Code-System-Spezifikation.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/reverse_engineering.png\" alt=\"Reverse Engineering\" /></p>\n<h3>Programm Restrukturierung</h3>\n<p>Es ist ein Prozess neu zu Re-strukturieren und neu zu bauen die vorhandene Software. Es geht um die Wieder Anordnung der Source-Code, entweder in derselben Programmiersprache oder von einer Programmiersprache zu einer anderen. Umstrukturierung kann entweder Quellcode-Restrukturierung und Daten-Umstrukturierung oder beides.</p>\n<p>Re-Strukturierung hat keinen Einfluss auf die Funktionalit&auml;t der Software, sondern erh&ouml;hen die Zuverl&auml;ssigkeit und Wartbarkeit. Programmteile, die zu Fehlern f&uuml;hren sehr h&auml;ufig ge&auml;ndert werden kann, oder mit aktualisierten Umstrukturierung.</p>\n<p>Die Zuverl&auml;ssigkeit der Software auf veraltete Hardware-Plattform kann &uuml;ber Umstrukturierung entfernt werden.</p>\n<h3>Forward Engineering</h3>\n<p>Forward Engineering ist ein Prozess der Erlangung der gew&uuml;nschten Software aus den Spezifikationen in der Hand, die nach unten durch Reverse Engineering gebracht wurden. Er geht davon aus, dass es einige Software-Engineering bereits in der Vergangenheit getan.</p>\n<p>Forward Engineering ist die gleiche wie Software-Engineering-Prozess mit nur einem Unterschied. es wird immer nach Reverse Engineering durchgef&uuml;hrt.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/forward_engineering.png\" alt=\"Forward Engineering\" /></p>\n<h2>Komponente Wiederverwendbarkeit</h2>\n<p>Eine Komponente ist ein Teil der Software-Programmcode, der eine unabh&auml;ngige Task im System f&uuml;hrt. Es kann ein kleines Modul oder Untersystem selbst sein.</p>\n<h3>Beispiel</h3>\n<p>Die Login-Verfahren, die im Internet verwendet werden, k&ouml;nnen als Bestandteile gezogen werden, k&ouml;nnen Drucksystem in Software als Komponent Bestandteil der Software gesehen werden. ent of the software.</p>\n<p>Komponenten haben eine hohe Koh&auml;sion der Funktionalit&auml;t und unteren Kopplungsrate, dh sie arbeiten unabh&auml;ngig und k&ouml;nnen Aufgaben ohne Abh&auml;ngigkeit von anderen Modulen durchzuf&uuml;hren.</p>\n<p>In OOP, sind die Objekte sind so konzipiert, sehr spezifisch f&uuml;r ihre Sorge und haben weniger Chancen, in einer anderen Software verwendet werden.</p>\n<p>In modulare Programmierung, die Module sind codiert, um bestimmte Aufgaben, die sich &uuml;ber mehrere andere Softwareprogramme verwendet werden k&ouml;nnen, durchzuf&uuml;hren.</p>\n<p>Es ist eine ganz neue vertikalen, die &uuml;ber die Weiterverwendung der Software-Komponente basiert, und ist als Component Based Software Engineering (CBSE).</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/components.png\" alt=\"Komponenten\" /></p>\n<p>Wiederverwendung kann auf verschiedenen Ebenen erfolgen</p>\n<ul class=\"list\">\n<li>\n<p><strong>Anwendungsebene</strong> - Wo eine gesamte Anwendung wird als Sub-System der neuen Software verwendet.</p>\n</li>\n<li>\n<p><strong>Komponentenebene</strong> - Wo Subsystem von einer Anwendung verwendet wird.</p>\n</li>\n<li>\n<p><strong>Module Ebene</strong> - Wo Funktionsmodule werden wieder verwendet.</p>\n<p>Software-Komponenten bieten Schnittstellen, die verwendet werden k&ouml;nnen, um die Kommunikation zwischen den verschiedenen Komponenten zu etablieren.</p>\n</li>\n</ul>\n<h3>Wiederverwendung Prozess</h3>\n<p>Zwei Arten von Verfahren verabschiedet werden kann. entweder, indem sie Anforderungen und Einstellen derselben Komponenten oder Bauteile, indem sie dieselben Anforderungen und Modifizieren Anforderungen.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/software_engineering/images/reuse_process.png\" alt=\"Wiederverwendung Prozess\" /></p>\n<ul class=\"list\">\n<li>\n<p><strong>Requirement Specification</strong> - Die funktionalen und nicht-funktionalen Anforderungen sind angegebenen, welche ein Software-Produkt muss erf&uuml;llen, mit Hilfe von bestehenden Systems, Benutzereingaben oder beides.</p>\n</li>\n<li>\n<p><strong>Design</strong> - Dies ist auch ein Standard-SDLC Prozessschritt, in denen die Anforderungen in Bezug auf Software-Sprachgebrauch definiert. Grundlegende Architektur des Systems als Ganzes und seine Teilsysteme erstellt.</p>\n</li>\n<li>\n<p><strong>Geben Komponenten</strong> - Durch das Studium der Software-Design, die Designer trennt, das gesamte System in kleinere Komponenten oder Teilsystemen. Ein kompletter Software-Design verwandelt sich in eine Sammlung von einem riesigen Satz von Komponenten arbeiten zusammen.</p>\n</li>\n<li>\n<p><strong>Suchen geeignete Komponenten</strong> - Die Softwarekomponente Repository wird von Designern bezeichnet, f&uuml;r die passende Komponente zu suchen, auf der Basis von Funktionalit&auml;t und Software-Anforderungen bestimmt.</p>\n</li>\n<li>\n<p><strong>Bestandteile enthalten</strong> - Alle abgestimmte Komponenten zusammengepackt, um sie zu gestalten als komplette Software.</p>\n</li>\n</ul>"
          ]
        },
        {
          "tag_line": "Software Engineering Interview Fragen",
          "details": [
            "<p>Liebe Leser, diese <strong>Software Engineering Interview-Fragen</strong> haben gewesen entworfen vor allem zu bekommen Sie bekannt mit der Art der Fragen, Sie k&ouml;nnen Begegnung w&auml;hrend Ihres Interviews f&uuml;r das Gegenstand von <strong>Software Engineering</strong>. Wie pro meine exprience, gute Interviewer kaum geplant, jeder bestimmte Frage w&auml;hrend Ihren Interview zu bitten, Normalerweise Fragen beginnen mit einigen grundlegenden Konzept des Subjekts und sp&auml;ter sie weiter basierend auf die weitere Diskussion und was Sie antwort:</p>\n<p><strong>F.Was ist Computer-Software?</strong></p>\n<p><strong>A.</strong> Computer-Software ist ein komplettes Paket, welche beinhaltet Software-Programm, deren Dokumentation und Bedienungsanleitung herunter, wie Sie die Software verwenden.</p>\n<p><strong>F.K&ouml;nnen Sie Computer-Software und Computer-Programm unterscheiden?</strong></p>\n<p><strong>A.</strong> Ein Computerprogramm ist St&uuml;ck des Programmierung code, welche eine gut definierte Aufgabe, bei der als Software beinhaltet Programmcode, dessen Dokumentation und Bedienungsanleitung herunter f&uuml;hrt.</p>\n<p><strong>F.Was ist Software-Engineering?</strong></p>\n<p><strong>A.</strong> Software-Engineering ist ein Maschinenbaubranche mit Software-System-Entwicklung verbunden.</p>\n<p><strong>F.Wenn Sie mit der Programmierung wissen, was ist die Notwendigkeit, Software-Engineering-Konzepte zu lernen?</strong></p>\n<p><strong>A.</strong> Eine Person, die wei&szlig;, wie zu errichten man eine Mauer kann nicht sein gut bei Geb&auml;ude ein gesamte Haus. Ebenfalls, eine Person die k&ouml;nnen schreiben Programme k&ouml;nnen nicht haben Kenntnis von anderen Konzepten des Software Engineering. Die Software-Engineering-Konzepte F&uuml;hrung Programmierer auf wie zu beurteilen Erfordernis von Endbenutzer zu entwerfen, design die Algorithmen vor der eigentlichen Codierung beginnt, erstellen Programme durch Codierung, Test der Code und seine Dokumentation.</p>\n<p><strong>F.Was ist Software-Prozess-oder Software Development Life Cycle (SDLC)?</strong></p>\n<p><strong>A.</strong> Software Development Life Cycle, oder Software-Prozess ist die systematische Entwicklung von Software, indem folgende jeder B&uuml;hne in Entwicklungsprozesses, n&auml;mlich Voraussetzung Beisammensein, Systemanalyse, Design, Programmierung, Test, Wartung und Dokumentation in dass Reihenfolge.</p>\n<p><strong>F.Was sind SDLC-Modelle verf&uuml;gbar?</strong></p>\n<p><strong>A.</strong> Es gibt mehrere SDLC Modelle verf&uuml;gbar wie Wasserfall-Modell, Iterative Modell, Spiralmodell, V-Modell-und Big-Bang-Modell etc.</p>\n<p><strong>F.Was sind verschiedenen Phasen des SDLC?</strong></p>\n<p><strong>A.</strong> Die generischen Phasen des SDLC sind : Voraussetzung Beisammensein, Systemanalyse und Design, Programmierung, Testen und Implementierung. Die Phasen abh&auml;ngen auf dem Modell wir w&auml;hlen, um Software zu entwickeln.</p>\n<p><strong>F.Welche SDLC-Modell ist das beste?</strong></p>\n<p><strong>A.</strong> SDLC Modelle sind angenommen wie pro den Anforderungen der Entwicklungsprozess. Es kann sehr Software-zu-Software, zu sicherzustellen, welches Modell ist geeignet.</p>\n<p>Wir k&ouml;nnen ausw&auml;hlen die beste SDLC-Modell, wenn folgende Antworten zufrieden sind -</p>\n<ul class=\"list\">\n<li>Ist SDLC geeignet f&uuml;r ausgew&auml;hlte technologie zu implementieren die Software?</li>\n<li>Ist SDLC angemessen, f&uuml;r Klienten Anforderungen und Priorit&auml;ten?</li>\n<li>Ist SDLC Modell f&uuml;r Gr&ouml;&szlig;e und Komplexit&auml;t der Software?</li>\n<li>Ist die SDLC-Modell geeignet f&uuml;r Art der Projekte und Engineering wir tun?</li>\n<li>Ist die SDLC angemessen f&uuml;r die geographisch co-located oder dispergiert Entwicklern?</li>\n</ul>\n<p><strong>F.Was ist Software-Projektmanagement?</strong></p>\n<p><strong>A.</strong> Software-Projektmanagement ist der Prozess von Verwaltung aller Aktivit&auml;ten wie Zeit, Kosten und Qualit&auml;tsmanagement in der Software-Entwicklung beteiligt.</p>\n<p><strong>F.Wer ist Software-Projekt-Manager?</strong></p>\n<p><strong>A.</strong> Ein Software-Projekt-Manager ist eine Person, die die Verantwortung f&uuml;r die Durchf&uuml;hrung der Software-Projekt verpflichtet.</p>\n<p><strong>Q.Was tut Software-Projekt-Manager tun?</strong></p>\n<p><strong>A.</strong> Software-Projekt-Manager ist verlobt mit Software-Management-T&auml;tigkeiten. Er ist f&uuml;r die Projektplanung, die &Uuml;berwachung der Fortschritte, die Kommunikation unter den Beteiligten, das verwaltend Risiken und Ressourcen, reibungslosen Ausf&uuml;hrung von Entwicklung und Liefern Projekts innerhalb der Zeit, Kosten und Qualit&auml;t contraints.</p>\n<p><strong>F.Was ist Software-Umfang?</strong></p>\n<p><strong>A.</strong> Software Anwendungsbereich ist eine gut definierte Grenze welche umgreift alle Aktivit&auml;ten die sind fertig zu entwickeln und zu liefern, das Softwareprodukt.</p>\n<p>Die Software Umfang klar definiert alle Funktionalit&auml;ten und Artefakte als Teil der Software geliefert werden. Der Umfang identifiziert, was das Produkt werden tun und was es werden nicht tun, was das Endprodukt werden enthalten wird und was es werden nicht enth&auml;lt.</p>\n<p><strong>F.Was ist Projektsch&auml;tzung?</strong></p>\n<p><strong>A.</strong> Es ist ein Prozess zu Sch&auml;tzung verschiedene Aspekte der Software-Produkt in Ordnung zu berechnen Kosten der Entwicklung in Begriffe von bem&uuml;hungen, Zeit und Ressourcen. Diese Einsch&auml;tzung kann abgeleitet werden aus Vergangenheit Erfahrung, von Beratungsexperten oder durch Verwendung von vordefinierten Formeln.</p>\n<p><strong>F.Wie k&ouml;nnen wir die Gr&ouml;&szlig;e der Software-Produkt ableiten?</strong></p>\n<p><strong>A.</strong> Gr&ouml;&szlig;e der Software-Produkt kann werden berechnet unter Verwendung eines von zwei Verfahren -</p>\n<ul class=\"list\">\n<li>Z&auml;hlen der Zeilen von ausgeliefert Code</li>\n<li>Z&auml;hlen ausgeliefert Funktionspunkte</li>\n</ul>\n<p><strong>F.Was sind Funktionspunkte?</strong></p>\n<p><strong>A.</strong> Funktionspunkte sind die verschiedenen Features vorgesehen durch die das Softwareprodukt. Es wird als Ma&szlig;einheit f&uuml;r die Software-Gr&ouml;&szlig;e ber&uuml;cksichtigt.</p>\n<p><strong>F.Was sind Software-Projekt Sch&auml;tzverfahren zur Verf&uuml;gung?</strong></p>\n<p><strong>A.</strong> Es gibt viele Sch&auml;tzTechniken zur Verf&uuml;gung. Das meisten weithin verwendet sind -</p>\n<ul class=\"list\">\n<li>Zerlegungstechnik (Z&auml;hlen Lines of Code und Function Points).</li>\n<li>Empirische Technik (Putnam und COCOMO).</li>\n</ul>\n<p><strong>F.Was ist Baseline?</strong></p>\n<p><strong>A.</strong> Grundlinie ist eine Mess dass definiert Vollst&auml;ndigkeit von einer Phase. Nach alle Aktivit&auml;ten assoziiert mit einer bestimmten Phase sind bewerkstelligt, ist die Phase abgeschlossen und wirkt als Grundlinie f&uuml;r die n&auml;chste Phase.</p>\n<p><strong>F.Was ist Software-Konfigurationsmanagement?</strong></p>\n<p><strong>A.</strong> Software-Konfigurationsmanagement ist ein Prozess der Verfolgung und Steuerung der &Auml;nderungen in der Software im Hinblick auf die Anforderungen, Design, funktionen und Entwicklung von des Produkts.</p>\n<p><strong>F.Was ist Change Control?</strong></p>\n<p><strong>A.</strong> &Auml;nderungskontrolle ist Funktion von Konfigurationsmanagement, die daf&uuml;r sorgt, dass alle &Auml;nderungen Gemacht zu Softwaresystem sind konsequent und Gemacht wie pro organisatorischen Regelungen und Vorschriften.</p>\n<p><strong>F.Wie k&ouml;nnen Sie der Projektausf&uuml;hrung zu messen?</strong></p>\n<p><strong>A.</strong> Wir k&ouml;nnen messen Projektabwicklung durch Mittel of Activity Monitoring, Statusberichte und Milestone Checklisten.</p>\n<p><strong>F.Erw&auml;hnen einige Projektmanagement-Tools.</strong></p>\n<p><strong>A.</strong> Es gibt verschiedene Projektmanagement-Tools Gebrauchte wie pro den Anforderungen der Software-Projekt und Organisation Politiken. Sie umfassen Gantt-Diagramm, PERT-Diagramm, Ressourcen Histogramm, Critical Path Analysis, Statusberichte, Milestone Checklisten usw.</p>\n<p><strong>F.Was sind Software-Anforderungen?</strong></p>\n<p><strong>A.</strong> Software-Anforderungen sind funktionale Beschreibung der vorgesehenen Software-System. Anforderungen sind ausgegangen zu die Beschreibung des Zielsystems, seine Funktionen und Merkmale. Anforderungen vermitteln die Erwartungen von Benutzer aus dem System.</p>\n<p><strong>F.Was ist Durchf&uuml;hrbarkeitsstudie?</strong></p>\n<p><strong>A.</strong> Es ist eine Ma&szlig;nahme, um zu beurteilen, wie praktisch und vorteilhaft die Software der Projektentwicklung wird f&uuml;r eine Organisation sein. Die Software Analyzer f&uuml;hrt eine gr&uuml;ndliche zu verstehen Untersuchung der wirtschaftlichen, technischen und betrieblichen Machbarkeit des Projekts.</p>\n<ul class=\"list\">\n<li>\n<p><strong>Wirtschaftlichen</strong> - Ressourcen Transportation, Kosten f&uuml;r Ausbildung, Kosten f&uuml;r zus&auml;tzliche Dienstprogramme und Tools und Gesamt sch&auml;tzung von Kosten und Nutzen des Projekts.</p>\n</li>\n<li>\n<p><strong>Technische</strong> - Ist es m&ouml;glich, dieses System zu entwickeln? Beurteilung Eignung der Maschine (n) und Betriebssystem (e), auf welche Software werden ausf&uuml;hren, das vorhandene Entwickler Wissen der und F&auml;higkeiten, Training, Dienstprogramme oder Tools f&uuml;r die Projekt.</p>\n</li>\n<li>\n<p><strong>Operative</strong> - Kann die Organisation reibungslos einstellen, um die Ver&auml;nderungen gemacht wie pro der Nachfrage der Projekt? Ist das Problem l&ouml;sen wert?</p>\n</li>\n</ul>\n<p><strong>F.Wie k&ouml;nnen Sie Anforderungen sammeln?</strong></p>\n<p><strong>A.</strong> Anforderungen k&ouml;nnen versammelt von Nutzern &uuml;ber Interviews, Umfragen, Aufgabenanalyse, Brainstorming, Bereichsanalyse, Prototyping werden, studium vorhandenen nutzbaren Version von Software und durch Beobachtung.</p>\n<p><strong>F.Was ist SRS?</strong></p>\n<p><strong>A.</strong> SRS oder Software Requirement Specification ist eine Dokument produziert zum Zeitpunkt der Anforderung Versammlung Prozess. Es kann sein auch sehen als ein Prozess zum Frischen Anforderungen und dokumentiere sie.</p>\n<p><strong>F.Was sind funktionale Anforderungen?</strong></p>\n<p><strong>A.</strong> Funktionale Anforderungen sind funktionelle Features und Spezifikationen erwartet von den Benutzern aus der vorgeschlagenen Software-Produkt.</p>\n<p><strong>F.Was sind nicht-funktionale Anforderungen?</strong></p>\n<p><strong>A.</strong> Nicht-funktionale Anforderungen sind implizite und sind verwandten f&uuml;r die Sicherheit, leistung, Look und Feel der Benutzeroberfl&auml;che, Interoperabilit&auml;t, Kosten usw.</p>\n<p><strong>F.Was ist Software-Ma&szlig;nahme?</strong></p>\n<p><strong>A.</strong> Software Ma&szlig;nahmen k&ouml;nnen als einen Prozess der Quantifizierung und als Symbol f&uuml;r verschiedene Attribute und Aspekte der Software zu verstehen.</p>\n<p><strong>F.Was ist Software-Metrik?</strong></p>\n<p><strong>A.</strong> Software Metriken stellt Ma&szlig;nahmen f&uuml;r verschiedene Aspekte der Software-Prozess und Software-Produkt. Sie sind unterteilt in &ndash;</p>\n<ul class=\"list\">\n<li>\n<p><strong>Erfordernis Metriken</strong> : L&auml;ngenanforderungen, Vollst&auml;ndigkeit.</p>\n</li>\n<li>\n<p><strong>Produkt-Metriken</strong> : Lines of Code, Objektorientierte Metriken, Design und Test-Metriken.</p>\n</li>\n<li>\n<p><strong>Prozessmetriken</strong> : Bewerten und verfolgen Budget, Zeitplan, Human Resource.</p>\n</li>\n</ul>\n<p><strong>F.Was ist Modularisierung?</strong></p>\n<p><strong>A.</strong> Modularisierung ist eine Technik zu divide um ein Softwaresystem in mehrere diskrete Module, welche sind voraussichtlich zu Durchf&uuml;hrung Aufgabe (n) unabh&auml;ngig voneinander.</p>\n<p><strong>F.Was ist die Parallelit&auml;t und wie es ist erreicht in der Software?</strong></p>\n<p><strong>A.</strong> Parallelit&auml;t ist die Tendenz von Ereignissen oder Handlungen zu passieren gleichzeitig. In Software, wenn zwei oder mehr Prozesse gleichzeitig ausf&uuml;hren, werden sie namens konkurrierende Prozesse.</p>\n<h3>Beispiel</h3>\n<p>W&auml;hrend Sie initiieren Druckbefehl und Drucken beginnt, k&ouml;nnen Sie eine neue Anwendung zu &ouml;ffnen.</p>\n<p>Parallelit&auml;t, ist implementiert durch Aufteilung der Software in mehrere unabh&auml;ngige Einheiten Ausf&uuml;hrungs n&auml;mlich Prozesse und Threads, und ausf&uuml;hrung sie in parallel.</p>\n<p><strong>F.Was ist Zusammenhalt?</strong></p>\n<p><strong>A.</strong> Zusammenhalt ist ein Ma&szlig;, dass definiert den Grad der intra Zuverl&auml;ssigkeit unter den Elementen des Moduls.</p>\n<p><strong>F.Was ist Kupplung?</strong></p>\n<p><strong>A.</strong> Kupplung ist eine Ma&szlig;nahme, die das Niveau der inter Verl&auml;sslichkeit zwischen den Modulen eines Programms definiert.</p>\n<p><strong>F.Erw&auml;hnt einige Software-Analyse und-Design-Tools?</strong></p>\n<p><strong>A.</strong> Dies k&ouml;nnen sein : DFDs (Datenflussdiagramme), Strukturierte Charts, Strukturierte Englisch, Data Dictionary, HIPO (Hierarchical Eingangsprozess Output)-Diagramme, ER (Entity Relationship) Diagramme und Entscheidungstabellen.</p>\n<p><strong>F.Was ist Level-0 DFD?</strong></p>\n<p><strong>A.</strong> H&ouml;chsten Abstraktionsebene DFD wird bekannt als Ebene 0 DFD auch namens als Kontextebene DFD, die das darstellen gesamte Informationssystem als eine Diagramm verbergen alle Zugrunde liegenden Details.</p>\n<p><strong>F.Was ist der Unterschied zwischen strukturierten Englisch und Pseudo-Code?</strong></p>\n<p><strong>A.</strong> Strukturierte Englisch ist Ureinwohner Englisch Sprache als verwendet, um die Struktur eines Programm-Modul durch unter Verwendung Programmier Sprache Stichworte, w&auml;hrend, ist Pseudo-Code mehr in der N&auml;he Programmiersprache und verwendet native englischen Sprache Worte oder S&auml;tze, um Teile des Codes zu schreiben.</p>\n<p><strong>F.Was ist Daten W&ouml;rterbuch?</strong></p>\n<p><strong>A.</strong> Datenw&ouml;rterbuch wird als Meta-Daten bezeichnet. Bedeutet, es ist eine Repository von Daten &uuml;ber Daten. Datenw&ouml;rterbuch wird verwendet, zu organisieren um die Namen und ihren Referenzen verwendet in System wie Objekte und Dateien zusammen mit ihren Namenskonventionen .</p>\n<p><strong>F.Was ist strukturierte Design?</strong></p>\n<p><strong>A.</strong> Strukturierte Design ist eine Begriffsbildung von Problem in mehrere gut organisierte Elemente der L&ouml;sung. Es wird Sorge, mit der L&ouml;sung Design und basierend auf \"Teile und Herrsche\"-Strategie.</p>\n<p><strong>F.Was its die unterschied zwischen funcktion orientierte und objekt oriented design?</strong></p>\n<p><strong>A.</strong> Funktion-orientierte design ist Umfasste von viele kleiner unter-system bekannten als funktionen. Jeder funktion ist f&auml;hig von Darstellende signifikant aufgabe in die system. Objekt orientierte design werke um die real welt objekts (unternehmen), ihre Klasses (kategorien) und Verfahren Betriebs auf objekts (funktionen).</p>\n<p><strong>F.Kurz define top-down und von unten nach oben design modell.</strong></p>\n<p><strong>A.</strong> Top-down modell Beginnt mit Generali Blick von system und Zersetzt es zu Mehr spezifisch ones, w&auml;hrend von unten nach oben modell beginnt mit h&ouml;chst spezifisch und Grund Komponenten Erste und H&auml;lt Komponieren die komponenten zu Erhalten h&ouml;her Ebene von abstraktion.</p>\n<p><strong>F.Was ist die Basis von Halstead&rsquo;s komplexit&auml;t Ma&szlig;nahme?</strong></p>\n<p><strong>A.</strong> Halstead&rsquo;s komplexit&auml;t Ma&szlig;nahme H&auml;ngt nach oben auf die aktuell implementatierung von die programm und es betrachten tokens Bentzt in die programm als basis von Ma&szlig;nahme.</p>\n<p><strong>F.Erw&auml;hung die formel zu Berechnen Zyklomatische komplexit&auml;t von ein programm?</strong></p>\n<p><strong>A.</strong> Zyklomatische komplexit&auml;t Anwendungen graph theory&rsquo;s formula : V(G) = e &ndash; n + 2</p>\n<p><strong>F.Was ist funktions programmierung?</strong></p>\n<p><strong>A.</strong> Funktions programmierung ist stil von programmierung sprache, welche Anwendungen die konzepte von mathematisch funktion. Es Bietet Mittel von Berechnung als mathematisch funktions, welche produziert Ergebnisse Unabh&auml;ngig von programm Zustand.</p>\n<p><strong>F.Unterscheiden G&uuml;ltigkeitsekl&auml;rung und verifikation?</strong></p>\n<p><strong>A.</strong> G&uuml;ltigkeitsekl&auml;rung pr&uuml;fen wenn die produkt ist Gemacht wie pro Benutzer Bedarf w&auml;hrend verifikation pr&uuml;fen wenn richtig Treppe sind Gefolgt zu entwickeln die produkt.</p>\n<p>G&uuml;ltigkeitsekl&auml;rung Best&auml;tigt die Recht produkt and verifikation Best&auml;tigt wenn die produkt ist Erbaut in ein Recht weg.</p>\n<p><strong>F.Was ist black-box und white-box testen?</strong></p>\n<p><strong>A.</strong> Black-box testing pr&uuml;fen wenn die Erw&uuml;nscht Ausgang sind produziert wenn G&uuml;ltig Eignung Werte sind gegeben. Es tut Nicht &Uuml;berpr&uuml;fen die aktuell implementierung von die programm.</p>\n<p>White-box testen Nicht nur pr&uuml;fen von Erw&uuml;nscht und G&uuml;ltig Ausgang wenn G&uuml;ltig Eignung ist Versehen aber aunch es pr&uuml;fen wenn die code ist implementieren richtig.</p>\n<table class=\"table table-bordered\">\n<tbody>\n<tr>\n<th>Kriterien</th>\n<th>Black Box Testen</th>\n<th>White Box Testen</th>\n</tr>\n<tr>\n<td>Wissen auf software programm, design und structure Wesentilch</td>\n<td>Nicht</td>\n<td>Ja</td>\n</tr>\n<tr>\n<td>Wissen auf Software Implementierung Wesentilch</td>\n<td>Nicht</td>\n<td>Ja</td>\n</tr>\n<tr>\n<td>Wer Leitet dies test auf software</td>\n<td>Software Testen Mitarbeiter</td>\n<td>Software Entwickler</td>\n</tr>\n<tr>\n<td>Grundlinie referenz von tester</td>\n<td>Bedarf Technische Daten</td>\n<td>Design und structure details</td>\n</tr>\n</tbody>\n</table>\n<p><strong>F.Qualit&auml;t Sicherheit vs. Qualit&auml;t Kontroll?</strong></p>\n<p><strong>A.</strong> Qualit&auml;t Sicherheit monitore zu pr&uuml;fen wenn richtig prozess ist gefolgt W&auml;hrend software Entwicklung die software.</p>\n<p>Qualit&auml;t Kontroll Angebote mit Aufrechterhaitung die Qualit&auml;t auf software produkt.</p>\n<p><strong>F.Was sind Verschiedene typen auf software Wartung?</strong></p>\n<p><strong>A.</strong> Wartung typen sind : Korrektur, adaptiv, perfective und pr&auml;ventiv.</p>\n<ul class=\"list\">\n<li><strong>Korrektur</strong>\n<p>Entfernen fehler spotted durch Benutzer</p>\n</li>\n<li><strong>adaptiv</strong>\n<p>Bek&auml;mpfung die &Auml;nderungen in die hardware und software Umwelt wo die software Werke</p>\n</li>\n<li><strong>Perfective Wartung</strong>\n<p>implementieren &Auml;nderungen in Vorhanden oder neu bedarf von Benutzer</p>\n</li>\n<li><strong>pr&auml;ventiv Wartung</strong>Einahme Angemessen Ma&szlig;nahmen zu vermeiden Zukunft probleme\n<p>&nbsp;</p>\n</li>\n</ul>\n<p><strong>F.Was ist software re-engineering?</strong></p>\n<p><strong>A.</strong> Software re-engineering ist prozess zu upgrade die technologie auf welche die software ist erbaut ohne &Auml;ndern die funktionalit&auml;t von die software. Dies ist fertig Damit halten die software Abgestimmt mit die neueste technologie.</p>\n<p><strong>F.Was sind CASE tools?</strong></p>\n<p><strong>A.</strong> CASE st&auml;nde von Computer Aided Software Maschinenbau. CASE tools sind setzen von automatisiert software Anwendung programms, welche sind Benutzt zu Unterst&uuml;tzung, Beschleunigen und Gl&auml;tten die SDLC aktivities.</p>\n<h2>Was ist N&auml;chste?</h2>\n<p>Weiter, sie kann gehen durch ihre Vergangenheit zuweisungen sie haben fertig mit die subjekt und machen sicher sie sind f&auml;hig zu sprechen selbstbewusst auf Sie. Wenn sie sind frisher dann interviewer tut nicht Erwarten sie werden antwort Sehr Komlex Fragen, Eher sie haben zu Machen ihre Wesentilche koncepts sehr sta.</p>\n<p>Zweite es wirklich Nicht matter viel wenn sie kann nicht antwort wenige fragen aber es matters die was auch immer sie Beantwortet, sie muss haben Beantwortet mit vertrauen. So nur f&uuml;hlen vertrauen W&auml;hrend ihre interview. Sie bei tutorialspoint wollen sie beste Gl&uuml;ck zu haben ein gut interviewer und alle die sehr beste f&uuml;r ihre Zukunft Bem&uuml;hung. Prost :-)</p>"
          ]
        },
        {
          "tag_line": "Software CASE-Tool Überblick",
          "details": [
            "<h2>CASE Tools</h2>\n<p>CASE-Tools sind set von software-anwendungs programme, welche sind verwendet, um aktivit&auml;ten zu automatisieren SDLC. CASE-Tools werden durch Software-projekt-manager, analysten und ingenieure verwendet, um software-system zu entwickeln.</p>\n<p>Es gibt eine reihe von CASE-Tools zur Verf&uuml;gung, um verschiedene stadien der Software Development Life Cycle, wie Analyse-Tools, Design-Tools, Projektmanagement -Tools, Datenbank-Management-Tools zu vereinfachen, Dokumentationswerkzeuge sind einige zu nennen.</p>\n<p>Einsatz von CASE-Tools beschleunigt die entwicklung von projekt, um die gew&uuml;nschte Ergebnis zu produzieren und hilft zu aufzudecken m&auml;ngel vor bewegend voraus mit n&auml;chste b&uuml;hne in sofware entwicklung.</p>\n<h2>Komponenten von CASE-Tools</h2>\n<p>CASE-Tools k&ouml;nnen breit geteilt in der folgende teile basierend auf ihren verwendung bei ein sonderlich SDCL b&uuml;hne.</p>\n<ul class=\"list\">\n<li>\n<p><strong>Zentrales Repository</strong> - CASE-Tools erfordern ein zentrales Repository, das als Quelle der gemeinsamen, integrierten und konsistenten Informationen dienen kann. Zentralen Repository ist ein zentraler ort der lagerung, wo produkt-spezifikationen, anforderungs dokumente, einschl&auml;gigen berichten und diagrammen, andere n&uuml;tzliche Informationen &uuml;ber management wird gespeichert. Zentrales Repository dient auch als datenw&ouml;rterbuch.</p>\n<img src=\"https://www.tutorialspoint.com/de/software_engineering/images/CASEtools.png\" alt=\"Case Tools\" /></li>\n<li>\n<p><strong>Ober CASE-Tools</strong> - Ober CASE-Tools sind in Planung, Analyse und Konzeption von SDLC verwendet.</p>\n</li>\n<li>\n<p><strong>Kleinbuchstaben Werkzeuge</strong> - Kleinbuchstaben werkzeuge werden verwendet in implementierung, test und wartung</p>\n</li>\n<li>\n<p><strong>Integrierte CASE-Tools</strong> - Integrierte CASE-Tools sind hilfreich in allen stufen des SDLC, aus anforderung versammeln, um pr&uuml;fung und dokumentation.</p>\n</li>\n</ul>\n<p>CASE-Tools k&ouml;nnen in Gruppen zusammengefasst werden, wenn sie eine &auml;hnliche funktionalit&auml;t, prozessaktivit&auml;ten und die F&auml;higkeit, des erhaltens integriert haben mit anderen Werkzeugen.</p>\n<h2>Umfang der CASE-Tools</h2>\n<p>Der Umfang der CASE-Tools geht im gesamten SDLC.</p>\n<h2>CASE-Tools Typen</h2>\n<p>Jetzt sind wir kurz &uuml;ber verschiedene CASE-Tools gehen.</p>\n<h3>Diagramm-Tools</h3>\n<p>Diese Werkzeuge werden verwendet, um Systemkomponenten, Daten-und Steuerungsfluss unter verschiedenen Softwarekomponenten und Systemstruktur in graphischer Form vertreten. Zum Beispiel, Flussdiagramm Maker-Tool f&uuml;r die erstellung von State-of-the-Art-Flussdiagramme.</p>\n<h3>Prozessmodellierungswerkzeuge</h3>\n<p>Prozess modellierung ist Methode, zu erstellen Software-Prozess-Modell, das ist verwendet, um die Software zu entwickeln, Prozess modellierungs werkzeuge Hilfe, die Manager, zu w&auml;hlen eine Prozess-Modell oder modifizieren es wie pro die anforderung der Software-Produkt. Zum Beispiel, EPF Composer.</p>\n<h3>Projektmanagementtools</h3>\n<p>Diese werkzeuge sind gebrauchte f&uuml;r die projektplanung, kosten und aufwandssch&auml;tzung, projekt Ablaufplanung und Ressourcenplanung. Manager m&uuml;ssen streng nachzukommen Projektausf&uuml;hrung an jedem genannten Schritt in der Software-Projektmanagement. Projektmanagement-Tools helfen in Speicherung und den teilen von Projektinformationen in Echtzeit in durch heraus Organisation. Zum Beispiel, kreativen Pro Office, Trac Project, Basecamp.</p>\n<h3>Dokumentationswerkzeuge</h3>\n<p>Dokumentation in einem Software-Projekt beginnt vorausgehend der Software-Prozess, geht &uuml;berall in allen phasen des SDLC und nach dem Abschluss des Projekts.</p>\n<p>Dokumentationswerkzeuge generieren Dokumente f&uuml;r technische Anwender und Endverbraucher. Technische Anwender sind meist in-house-Profis des Entwicklungsteams, wer verweisen die im Systemhandbuch, Handbuch, Lehrbuch, Einbauanleitungen usw. Die Endbenutzer Dokumente beschreiben die Funktionierens und wie Sie des Systems wie Bedienungsanleitung. Zum Beispiel, Doxygen, DrExplain, Adobe RoboHelp f&uuml;r die Dokumentation.</p>\n<h3>Analyse-Tools</h3>\n<p>Diese Werkzeuge helfen, Anforderungen zu sammeln, automatisch &Uuml;berpr&uuml;fen Sie f&uuml;r jeden Inkonsequenz, Ungenauigkeiten in den Diagrammen, Datenredundanzen oder fehlerhafte Auslassungen. Zum Beispiel, akzeptieren 360, beglau, CaseComplete f&uuml;r Anforderungsanalyse, Visible Analyst f&uuml;r die gesamt analyse.</p>\n<h3>Design-Tools</h3>\n<p>Diese Tools helfen Software-Designer, um die Blockstruktur der Software, die weiter unten in kleinere Module unter Verwendung Verfeinerung techniken gebrochen werden kann entwerfen. Diese Tools bietet Detaillierung der einzelnen Module und Wechselwirkungen unter den Modulen. Zum Beispiel, Animierte Software Design.</p>\n<h3>Configuration Management Tools</h3>\n<p>Eine Instanz der Software wird unter einer Version freigegeben. Configuration Management-Tools befassen sich mit &ndash;</p>\n<ul class=\"list\">\n<li>Version und Revisionsmanagement</li>\n<li>Baseline-Konfigurationsmanagement</li>\n<li>Ver&auml;nderung Kontrolle Management</li>\n</ul>\n<p>CASE-Tools helfen hierin durch automatisch Tracking, Versionsmanagement und Release-Management. Zum Beispiel, Fossil, Git, Accu REV.</p>\n<h3>&Auml;ndern Control Tools</h3>\n<p>Diese Tools werden als Teil der Konfigurationsmanagement-Tools ber&uuml;cksichtigt. sie Deal mit &Auml;nderungen gemacht zum Software nach seine Grundlinie ist fest oder wann die Software ist erste freigegeben. CASE-Tools automatisieren &Auml;nderungsverfolgung, Dateiverwaltung, Code-Management und mehr. Es hilft auch bei der Durchsetzung Wechsel Politik der Organisation.</p>\n<h3>Programmierwerkzeuge</h3>\n<p>Diese Werkzeuge bestehen aus Programmierumgebungen wie IDE (Integrierte Entwicklungsumgebung), in-built-Modulen Bibliothek und Simulationswerkzeuge. Diese Tools bieten umfassende Zuhilfenahme beim Aufbau Software-Produkt und umfassen Features f&uuml;r die Simulation und Pr&uuml;fung. Zum Beispiel Cscope zu Suchcode in C, Eclipse.</p>\n<h3>Prototyping-Werkzeuge</h3>\n<p>Software-Prototyp ist simuliert Version des beabsichtigten Software-Produkt. Prototyp liefert erste blick und das Gef&uuml;hl des Produkts und simuliert wenige aspekt der tats&auml;chlichen Produkt.</p>\n<p>Prototyping CASE-Tools im wesentlichen mit grafischer Bibliotheken kommen. Sie k&ouml;nnen Hardware-unabh&auml;ngige Benutzeroberfl&auml;chen und Design zu erstellen. Diese Werkzeuge helfen uns, schnelle Prototypen auf Basis vorhandener Informationen zu bauen. Dar&uuml;ber hinaus bieten sie Simulation von Software-Prototyp. Zum Beispiel, Serena Prototyp Komponist, Mockup Builder.</p>\n<h3>Web-Entwicklungstools</h3>\n<p>Diese Tools assistieren bei der Gestaltung von Web-Seiten mit allen verb&uuml;ndet Elemente wie Formen, Text, Skript, Grafik und so weiter. Web-Tools bieten auch Live-Vorschau von dem, was entwickelt wird und wie wird es nach Fertigstellung aussehen. Zum Beispiel Fontello, Adobe Edge-Inspect-Stiftung 3, Klammern.</p>\n<h3>Qualit&auml;tssicherungswerkzeuge</h3>\n<p>Qualit&auml;tssicherung in einem Software-Organisation &uuml;berwacht den Engineering-Prozess und Methoden angenommen, um das Software-Produkt, um die Konformit&auml;t der Qualit&auml;t als pro Organisation Standards sicherzustellen. QA-Tools bestehen aus Konfiguration und Change Control-Tools und Software-Test-Tools. Zum Beispiel, Soaptest, AppsWatch, JMeter.</p>\n<h3>Wartung Tools</h3>\n<p>Software-Wartung umfasst &Auml;nderungen an der Software, nachdem es geliefert wird. Automatische Protokollierung und Fehlerberichtstechniken, automatische Fehlerticket Erzeugung und Ursachenanalyse sind einige CASE-Tools, die Software-Organisation in Erhaltungsphase der SDLC helfen. Zum Beispiel Bugzilla zur Fehlerverfolgung, HP Quality Center.</p>"
          ]
        }
      ]
    },    {
      "title": "Softwarewartung Übersicht",
      "content": [
        {
          "tag_line": "",
          "details": [
            ""
          ]
        }
      ]
    }, {
    "title": "Computer Grundlagen",
      "content": [
        {
          "tag_line": "Computer Anwendungen",
          "details": [
            "<h2>Unternehmen</h2>\n<p>Ein Computer hat eine hohe Rechen geschwindigkeit, Flei&szlig;, Genauigkeit, Zuverl&auml;ssigkeit oder Vielseitigkeit welche gemacht es ein integrierter Bestandteil in allen Gesch&auml;fts Organisationen.</p>\n<p>Computer wird in Unternehmensorganisation eingesetzt f&uuml;r::</p>\n<ul class=\"list\">\n<li>Payroll Berechnungen</li>\n<li>Budgetierung</li>\n<li>Verkaufsanalyse</li>\n<li>Finanzprognosen</li>\n<li>Verwalten von Mitarbeiter-Datenbank</li>\n<li>Haltung der Stamm etc.</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/computer_business.jpg\" alt=\"Computer-Grundlagen\" /></p>\n<h2>Bankwesen</h2>\n<p>Heute- Bankwesen ist fast v&ouml;llig abh&auml;ngig von Computer.</p>\n<p>Banken liefern folgende Ausstattung:</p>\n<ul class=\"list\">\n<li>\n<p>Banken liefern Online-Accounting, welche die aktuellen Salden, Einlagen, &Uuml;berziehungskredite, Zinss&auml;tze, Aktien, und Treuh&auml;nder Datens&auml;tze beinhaltet.</p>\n</li>\n<li>\n<p>Geldautomaten sind machen es noch einfacher f&uuml;r Kunden mit Banken umzugehen.</p>\n</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/computer_banking.jpg\" alt=\"Computer Banking\" /></p>\n<h2>Versicherung</h2>\n<p>Versicherungen werden mit Hilfe von Computern zu halten alle Rekorde up-to-date. Die Versicherungsunternehmen, Finanzh&auml;user und Wertpapiermakler Firmen sind weit verbreitet, die Computer f&uuml;r ihre Anliegen.</p>\n<p>Versicherungsunternehmen sind Aufrechterhaltung eine Datenbank mit allen Kunden mit Informationen zeigt</p>\n<ul class=\"list\">\n<li>Verfahren, um mit der Politik fortsetzen</li>\n<li>beginnend Datum der Politik</li>\n<li>n&auml;chsten f&auml;lligen Tranche eines Politik</li>\n<li>F&auml;lligkeitstag</li>\n<li>Interessen aufgrund</li>\n<li>&Uuml;berlebensvorteile</li>\n<li>Bonus</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/computer_insurance.jpg\" alt=\"Computer Versicherungs\" /></p>\n<h2>Bildung</h2>\n<p>Der Computer hat versehen eine Menge von Einrichtungen im Bildungssystem.</p>\n<ul class=\"list\">\n<li>\n<p>Der Computer stellt ein Werkzeug in das Bildungssystem bekannt als CBE (Computer Based Education).</p>\n</li>\n<li>\n<p>CBE beinhaltet Kontrolle, Lieferung und Evaluierung von Lern\u200B\u200B.</p>\n</li>\n<li>\n<p>Der Computer-Ausbildung steigt rasant der Graph von Anzahl der Computer-Studenten.</p>\n</li>\n<li>\n<p>Es gibt eine Reihe von Verfahren, in denen Bildungseinrichtungen k&ouml;nnen Computer verwenden, um die Sch&uuml;ler zu erziehen.</p>\n</li>\n<li>\n<p>Es wird verwendet, um eine Datenbank &uuml;ber die Leistung eines Sch&uuml;lers und Analyse vorzubereiten, ist auf dieser Basis durchgef&uuml;hrt.</p>\n</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/computer_education.jpg\" alt=\"Computer Bildung\" /></p>\n<h2>Marketing</h2>\n<p>Im Marketing, nutzt von Computer sind folgende:</p>\n<ul class=\"list\">\n<li>\n<p><strong>Werbung -</strong> Mit Computer, Werbefachleuten erstellen, Kunst und Grafiken, schreiben und &uuml;berarbeiten kopieren und drucken und zu verbreiten, Anzeigen Inserate mit dem Ziel, mehr Produkte zu verkaufen.</p>\n</li>\n<li>\n<p><strong>Bei Home Shopping -</strong> Home-Shopping hat sich m&ouml;glich durch den Einsatz von EDV-Kataloge, die Zugang zu Produktinformationen bieten und erlauben eine direkte Eingabe von Auftr&auml;gen, die von den Kundschaft ausgef&uuml;llt werden gemacht.</p>\n</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/computer_marketing.jpg\" alt=\"Computer-Marketing\" /></p>\n<h2>Gesundheitspflege</h2>\n<p>Computer sind wichtiger Teil in Krankenh&auml;usern, Labors, Apotheken und. Die Computer werden in Krankenh&auml;usern verwendet werden, um den Rekord von Patienten und Medikamenten zu halten. Es wird auch in Scannen und Diagnose verschiedener Krankheiten verwendet. EKG, EEG, Ultraschall-und CT-Scans usw., werden auch von computergesteuerten Maschinen erfolgen.</p>\n<p>Einige wichtige Felder der Gesundheitsversorgung, in welche Computer verwendet werden, sind:</p>\n<ul class=\"list\">\n<li>\n<p><strong>Diagnostic System -</strong> Computer werden verwendet, um Daten zu sammeln und die Ursache der Krankheit zu identifizieren.</p>\n</li>\n<li>\n<p><strong>Lab-Diagnose-system -</strong> Alle Tests kann getan werden, und Berichte werden vom Computer vorbereitet.</p>\n</li>\n<li>\n<p><strong>Patient Monitoring System -</strong> Diese werden verwendet zu &uuml;berpr&uuml;fen Patienten Abnormalit&auml;t um Anzeichen f&uuml;r wie Herzstillstand , EKG etc.</p>\n</li>\n<li>\n<p><strong>Pharma Information System -</strong> Computer pr&uuml;ft Drug-Labels, Verfallsdaten, sch&auml;dliche Nebenwirkungen Medikament etc.</p>\n</li>\n<li>\n<p><strong>Surgery -</strong> Heute sind Computer auch in der Chirurgie verwendet.</p>\n</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/computer_healthcare.jpg\" alt=\"Computer Healthcare\" /></p>\n<h2>Engineering Design</h2>\n<p>Computer sind weit verbreitet in der Maschinenbau Zweck verwendet.</p>\n<p>Einer der Dur Bereiche ist CAD (Computer Aided Design). Das stellt die Erstellung und &Auml;nderung von Bildern. Einige Felder sind:</p>\n<ul class=\"list\">\n<li>\n<p><strong>Bautechnik -</strong> Ben&ouml;tigt Spannungsanalyse f&uuml;r die Gestaltung von Schiffen, Geb&auml;uden, Budgets, Flugzeuge etc.</p>\n</li>\n<li>\n<p><strong>Industrial Engineering -</strong> Computer Deal mit Design, Implementierung und Verbesserung von integrierten Systemen von Menschen, Materialien und Ausr&uuml;stungen.</p>\n</li>\n<li>\n<p><strong>Architectural Engineering -</strong> Computer helfen bei der Planung St&auml;dte, die Gestaltung von Geb&auml;uden, Bestimmung einer Reihe von Geb&auml;uden auf einer Website sowohl mit 2D-und 3D-Zeichnungen</p>\n</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/computer_engineering.jpg\" alt=\"Computer Engineering\" /></p>\n<h2>Milit&auml;r</h2>\n<p>Computer sind weitgehend in der Abwehr eingesetzt. Moderne Panzer, Raketen, Waffen usw. Milit&auml;r besch&auml;ftigt auch computerisierte Steuerungssysteme. Einige Milit&auml;r Bereichen, wo ein Computer verwendet wurde, sind:</p>\n<ul class=\"list\">\n<li>Missile Kontrolle</li>\n<li>Milit&auml;r Kommunikation</li>\n<li>Military Operation und Planung</li>\n<li>Smart Waffen zu</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/computer_military.jpg\" alt=\"Computer Milit&auml;r\" /></p>\n<h2>Kommunikation</h2>\n<p>Kommunikation bedeutet zu vermitteln eine Nachricht, eine Idee, ein Bild oder Rede, die empfangen wird, und klar und richtig verstanden von der Person, f&uuml;r die es f&uuml;r gemeint . Einige Schwerpunkte in dieser Kategorie sind:</p>\n<ul class=\"list\">\n<li>E-mail</li>\n<li>im Chat</li>\n<li>Usenet</li>\n<li>FTP</li>\n<li>Telnet</li>\n<li>Video-conferencing</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/computer_communication.jpg\" alt=\"Computer-Kommunikation\" /></p>\n<h2>Regierung</h2>\n<p>Computer spielen eine wichtige Rolle in der Regierung. Einige wichtige Felder in dieser Kategorie sind:</p>\n<ul class=\"list\">\n<li>Haushalts</li>\n<li>Umsatzsteuer-Abteilung</li>\n<li>Einkommenssteuerabteilung</li>\n<li>M&auml;nner / Frauen-Verh&auml;ltnis</li>\n<li>Informatisierung der W&auml;hler-Listen</li>\n<li>Informatisierung der Fahrlizenzsystem</li>\n<li>Informatisierung der PAN Karte</li>\n<li>Wettervorhersage</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/computer_government.jpg\" alt=\"Computer Regierung\" /></p>"
          ]
        },        {
          "tag_line": "Computer Generationen",
          "details": [
            "Generation in Computer-Terminologie ist ein Technologiewechsel ein Computer ist / verwendet wurde. Anfänglich die generation begriff wurde verwendet, um zwischen unterschiedlichen Hardwaretechnologien unterscheiden. Aber heutzutage,Generation beinhaltet Hardware und Software, die zusammen Make-up ein ganzes Computersystem.\n\nes gibt Insgesamt fünf Computergenerationen bis heute bekannt. Jede Generation wurde im Detail zusammen mit ihrer Zeit Periode und Charakteristik diskutiert. Hier ungefähre Daten gegen jeder Generationen wurden erwähnt, die in der Regel akzeptiert werden.\n\nIm Folgenden sind die wichtigsten fünf Generationen of computers\nS.N. \tGeneration & Beschreibung\n1 \t\n\nersten generation\n\nDie periode der ersten Generation: 1946-1959. Vakuumröhre basiert.\n2 \t\n\nzweite Generation\n\nDie periode der zweiten Generation: 1959-1965. Transistor basierend.\n3 \t\n\nDrittel Generation\n\nDie periode der dritten Generation: 1965-1971. Integrated Circuit basierend.\n4 \t\n\nVierte Generation\n\nDer Zeitraum der vierten Generation: 1971-1980. VLSI-Mikroprozessor basierend\n5 \t\n\nfünfte Generation\n\nDer Zeitraum der fünften Generation: 1980-ab. ULSI auf Mikroprozessorbasis"
          ]
        },
        {
          "tag_line": "Computer-Komponenten",
          "details": [
            "<p>Alle Arten von Computern folgen einer gleichen Grund logische Struktur und die folgenden f&uuml;nf Grundverfahren zur Umwandlung von Roh-Eingangsdaten in n&uuml;tzliche Informationen f&uuml;r ihre Nutzer.</p>\n<table class=\"table table-bordered\">\n<tbody>\n<tr>\n<th style=\"width: 10%;\">Sr.No.</th>\n<th>Betrieb</th>\n<th>Beschreibung</th>\n</tr>\n<tr>\n<td>1</td>\n<td>Nehmen Eingang</td>\n<td>Das prozess von Eingabe von Daten und instruktionen in das Computersystem</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Store Data</td>\n<td>Einsparung von Daten und Instruktionen, so dass sie sind verf&uuml;gbar f&uuml;r die Verarbeitung als und bei Bedarf.</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Verarbeitung Daten</td>\n<td>Darstellende arithmetische und logische Operationen auf Daten in Ordnung zu ihnen in n&uuml;tzliche Informationen umzuwandeln.</td>\n</tr>\n<tr>\n<td>4</td>\n<td>Ausgabe Informationen</td>\n<td>Das prozess der Herstellung n&uuml;tzliche Informationen oder Ergebnisse f&uuml;r den Benutzer, wie ein gedruckter Bericht oder visuelle Anzeige.</td>\n</tr>\n<tr>\n<td>5</td>\n<td>Kontroll die Workflow</td>\n<td>lenkt die Weise und Reihenfolge, in der alle oben genannten Operationen durchgef&uuml;hrt werden.</td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/computer_architecture.jpg\" alt=\"Computer-Architekturen\" /></p>\n<h2>Eingabeeinheit</h2>\n<p>Dieses Ger&auml;t enth&auml;lt Ger&auml;te mit Hilfe von denen wir Daten in den Computer eingeben. Dieses Einheit macht link zwischen Benutzer und Computer. Die Eingabeger&auml;te &uuml;bersetzen die Informationen in Form von Computer verst&auml;ndlich.</p>\n<h2>CPU (Central Processing Unit)</h2>\n<p>CPU als das Gehirn des Computers ber&uuml;cksichtigt. CPU f&uuml;hrt alle Arten von Datenverarbeitungsvorg&auml;ngen. Es speichert Daten, Zwischenergebnisse und Anweisungen (Programm). Es steuert den Betrieb aller Teile des Computers.</p>\n<p>CPU selbst hat folgende drei Komponenten</p>\n<ul class=\"list\">\n<li>ALU(Arithmetic Logic Unit)</li>\n<li>Speichereinheit</li>\n<li>kontroll Unit</li>\n</ul>\n<h2>Ausgabeeinheit</h2>\n<p>Ausgabeeinheit Ausgabeeinheit besteht aus Vorrichtungen mit die Hilfe welche wir bekommen die Informationen vom Computer. Dieses Ger&auml;t ist eine link zwischen Computer und Benutzer. Ausgabeger&auml;te &uuml;bersetzen Ausgang des Computers in Form verst&auml;ndlich durch Nutzern.</p>"
          ]
        },
        {
          "tag_line": "Computer - CPU(Central Processing Unit)",
          "details": [
            "<p>CPU besteht aus den folgenden features:</p>\n<ul class=\"list\">\n<li>\n<p>CPU ist betrachtet wie das Gehirn des Computers.</p>\n</li>\n<li>\n<p>CPU f&uuml;hrt alle Arten von Datenverarbeitungsvorg&auml;ngen.</p>\n</li>\n<li>\n<p>Es speichert Daten, Zwischenergebnisse und Anweisungen (Programm).</p>\n</li>\n<li>\n<p>Es steuert den Betrieb aller Teile des Computers.</p>\n</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/cpu.jpg\" alt=\"CPU\" /></p>\n<p>CPU selbst hat folgende drei Komponenten.</p>\n<ul class=\"list\">\n<li>Speicher oder Speichereinheit</li>\n<li>kontroll einheit</li>\n<li>ALU(Arithmetic Logic Unit)</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/computer_architecture.jpg\" alt=\"Computer-Architekturen\" /></p>\n<h2>Speicher oder Speichereinheit</h2>\n<p>Dieses Ger&auml;t kann Anweisungen, Daten und Zwischenergebnisse zu speichern. Dieses Ger&auml;t liefert Informationen zu den anderen Einheiten des Computers wenn n&ouml;tig. Es ist auch bekannt als interne Speichereinheit oder Hauptspeicher oder Prim&auml;rspeicher oder Direktzugriffsspeicher (RAM).</p>\n<p>es Gr&ouml;&szlig;e wirkt sich auf Geschwindigkeit, Leistung und F&auml;higkeit. Prim&auml;r speicher und Sekund&auml;r speicher gibt zwei Typen von Speichern in dem Computer. Funktionen der Speichereinheit sind:</p>\n<ul class=\"list\">\n<li>\n<p>Es speichert alle Daten und Informationen f&uuml;r die Verarbeitung erforderlich.</p>\n</li>\n<li>\n<p>Es speichert Zwischenergebnisse der Verarbeitung.</p>\n</li>\n<li>\n<p>Es speichert endg&uuml;ltigen Ergebnisse der Verarbeitung vor diese Ergebnisse sind an ein Ausgabeger&auml;t freigegeben.</p>\n</li>\n<li>\n<p>Alle Eing&auml;nge und Ausg&auml;nge sind durch Hauptspeicher &uuml;bertragen.</p>\n</li>\n</ul>\n<h2>kontroll einheit</h2>\n<p>Diese Einheit steuert den Betrieb alle Teile des Computers aber nicht f&uuml;hren Sie keine tats&auml;chlichen Datenverarbeitungsvorg&auml;nge.</p>\n<p>Funktionen dieses Ger&auml;ts sind:</p>\n<ul class=\"list\">\n<li>\n<p>Es ist verantwortlich zum Steuern der &Uuml;bertragung von Daten und instruktionen unter den anderen Einheiten eines Computer.</p>\n</li>\n<li>\n<p>Es verwaltet und koordiniert alle Einheiten des Computers.</p>\n</li>\n<li>\n<p>Es erhalten die Befehle aus dem Speicher, interpretiert ihnen und leitet den Betrieb des Computers.</p>\n</li>\n<li>\n<p>Es kommuniziert mit Input / Output-Ger&auml;te f&uuml;r den Transfer von Daten oder Ergebnisse aus der Lagerung.</p>\n</li>\n<li>\n<p>Es muss nicht verarbeiten oder speichern Daten.</p>\n</li>\n</ul>\n<h2>ALU(Arithmetic Logic Unit)</h2>\n<p>Das Ger&auml;t besteht aus zwei Unterabschnitten n&auml;mlich</p>\n<ul class=\"list\">\n<li>Arithmetic Abschnitt</li>\n<li>Logik Abschnitt</li>\n</ul>\n<h3>Arithmetic Abschnitt</h3>\n<p>Funktion von arithmetischen Abschnitts ist es durchgef&uuml;hrt Rechenoperationen wie Addition, Subtraktion, Multiplikation und Division. Alle komplexen Gesch&auml;ftst&auml;tigkeit sind done durch wiederholte Verwendung von oben genannten Operationen.</p>\n<h3>Logik Abschnitt</h3>\n<p>Funktion der Logik Abschnitts ist es, logische Operationen wie Vergleichen, Ausw&auml;hlen, Matching und Zusammenf&uuml;hrung von Daten durchzuf&uuml;hren.</p>"
          ]
        },
        {
          "tag_line": "Computer Eingabegeräte",
          "details": [
            "<p>Im Folgenden sind einige der wichtigsten Eingabeger&auml;te, die in einem Computer verwendet werden:</p>\n<ul class=\"list\">\n<li>Tastatur</li>\n<li>Maus</li>\n<li>Joy Stick</li>\n<li>Lichtstift</li>\n<li>Track Ball</li>\n<li>Scanner</li>\n<li>Grafik-Tablet</li>\n<li>Mikrofon</li>\n<li>Magnetic Ink-Kartenleser (MICR)</li>\n<li>Optische Charakter Leser</li>\n<li>Bar Code Reader</li>\n<li>Optical Mark Reader(OMR)</li>\n</ul>\n<h2>Tastatur</h2>\n<p>Tastatur ist die h&auml;ufigste und sehr beliebt Eingabevorrichtung die in der Eingeben von Daten an den Computer hilft. Das Layout der Tastatur ist wie die von herk&ouml;mmlichen Schreibmaschine, obwohl da sindzus&auml;tzliche Tasten zum Ausf&uuml;hren von Zusatzfunktionen vorgesehen.</p>\n<p>Tastaturen von zwei Gr&ouml;&szlig;en 84 Tasten oder 101/102 Tasten, aber jetzt Tastaturen mit 104 Tasten oder 108-Tasten sind auch f&uuml;r Windows und Internet.</p>\n<p>&nbsp;</p>\n<p>Die Tasten auf die Tastatur sind wie folgt:</p>\n<table class=\"table table-bordered\">\n<tbody>\n<tr>\n<th style=\"width: 10%;\">Sr.No</th>\n<th style=\"width: 23%;\">Schl&uuml;ssel</th>\n<th>Beschreibung</th>\n</tr>\n<tr>\n<td>1</td>\n<td>Typisierung Schl&uuml;ssel</td>\n<td>Diese Tasten umfassen die Buchstaben-Tasten (A-Z) und Zifferntasten (0-9), die in der Regel geben gleiche Layout wie die von Schreibmaschinen.</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Ziffernblock</td>\n<td>Es wird verwendet, um numerische Daten oder Cursor-Bewegung geben. Im allgemeinen besteht es aus einer Reihe von 17 Tasten dass sind zurechtlegen in der gleichen Konfiguration von den meisten Rechenmaschinen und Taschenrechnern.</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Funktionstasten</td>\n<td>Die zw&ouml;lf Funktionstasten sind vorhanden auf der Tastatur, die in einer Reihe an Oberseite der Tastatur angeordnet. Jede Funktionstaste hat einzigartige Bedeutung und wird f&uuml;r einen bestimmten Zweck verwendet wird.</td>\n</tr>\n<tr>\n<td>4</td>\n<td>Steuertasten</td>\n<td>Diese Tasten bieten Cursor und Bildschirmkontrolle. Es umfasst vier Richtungspfeiltasten. Steuertasten sind auch umfasst Start, Ende, Einf&uuml;gen, L&ouml;schen, Page Up, Page Down, Control (Strg), Alternative (Alt), Escape (ESC).</td>\n</tr>\n<tr>\n<td>5</td>\n<td>SpezialZwecktasten</td>\n<td>Keyboard enth&auml;lt auch einige spezielle Zwecke Tasten wie Enter, Shift, Caps Lock, Num Lock, Leertaste, Tab, und Print Screen.</td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/keyboard.jpg\" alt=\"Tastatur\" /></p>\n<h2>Maus</h2>\n<p>Maus ist am beliebtesten Zeigeger&auml;t. Es ist ein sehr ber&uuml;hmter Cursor-Steuerger&auml;t mit einer kleinen Palme Gr&ouml;&szlig;e Box mit einem runden Ball an seiner Basis, die die Bewegung der Maus erkennt und sendet entsprechende Signale an die CPU, wenn die Maustasten gedr&uuml;ckt werden.</p>\n<p>Generell ist es verf&uuml;gt &uuml;ber zwei Tasten genannt linken und rechten Taste und ein Rad zwischen den Tasten vorhanden ist. Maus kann verwendet werden, um die Position des Cursors auf dem Bildschirm zu steuern, aber es kann nicht verwendet werden, um Text in den Computer einzugeben.</p>\n<h3>Vorteile</h3>\n<ul class=\"list\">\n<li>Einfach zu bedienen</li>\n<li>nicht sehr teuer</li>\n<li>Bewegt den Cursor schneller als den Pfeiltasten der Tastatur.</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/mouse.jpg\" alt=\"Maus\" /></p>\n<h2>Joystick</h2>\n<p>Joystick ist auch ein Zeigeger&auml;t, das verwendet wird, um Cursor-Position auf einem Bildschirm zu bewegen. Es ist ein Stab mit einer sph&auml;rischen Kugel an ihren beiden unteren und oberen Enden. Die untere Kugel Ball bewegt sich in eine Steckdose. Der Joystick kann in alle vier Richtungen bewegt werden.</p>\n<p>Die Funktion des Joysticks ist &auml;hnlich einer Maus. Es ist vor allem in Computer Aided-Design (CAD) und Computerspielen verwendet.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/joystick.jpg\" alt=\"Joystick\" /></p>\n<h2>Leuchtstift</h2>\n<p>Licht Stift ist ein Zeigeger&auml;t, das &auml;hnlich wie ein Stift ist. Es wird verwendet, um einen angezeigten Men&uuml;punkt auszuw&auml;hlen oder zeichnen Bilder auf dem Bildschirm. Es besteht aus einer Photozelle und einem optischen System in ein R&ouml;hrchen gegeben. Wenn die Spitze eines Lichtstift &uuml;ber den Bildschirm bewegt und Stifttaste gedr&uuml;ckt wird, erkennt seine Lichtschranke Sensorelement die Bildschirmposition und sendet das entsprechende Signal an die CPU.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/light_pen.jpg\" alt=\"Leuchtstift\" /></p>\n<h2>Track Ball</h2>\n<p>Track Ball ist eine Eingabevorrichtung, die haupts&auml;chlich in Notebook-oder Laptop-Computer verwendet wird, statt einer Maus. Dies ist eine Kugel, die H&auml;lfte eingef&uuml;hrt wird und durch Bewegen Finger auf die Kugel, kann Zeiger bewegt werden. Da das ganze Ger&auml;t nicht bewegt wird, erfordert ein Trackball weniger Platz als eine Maus. Ein Trackball ist in verschiedenen Formen wie eine Kugel, ein Knopf und ein Quadrat.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/track_ball.jpg\" alt=\"Track Ball\" /></p>\n<h2>Scanner</h2>\n<p>Scanner ist ein Eingabeger&auml;t, das mehr wie ein Fotokopieren Maschine funktioniert. Es wird verwendet, wenn einige Informationen auf einem Papier,transferierten und auf der Festplatte des Computers zur weiteren Bearbeitung &uuml;bergeben werden, ist. Scanner erfasst Bilder von der Quelle, die dann in der digitalen Form, die auf der Platte gespeichert werden k&ouml;nnen, umgesetzt werden. Diese Bilder k&ouml;nnen bearbeitet werden, bevor sie gedruckt werden werden.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/scanner.jpg\" alt=\"Scanner\" /></p>\n<h2>Digitizer</h2>\n<p>Digitizer ist ein Eingabeger&auml;t, das analoge Informationen in digitale Form umwandelt. Digitalisierer kann ein Signal von der Fernsehen Oder Kamera in eine Reihe von Zahlen, die in einem Computer gespeichert werden k&ouml;nnen konvertieren. Sie k&ouml;nnen durch den Computer verwendet werden, um ein Bild von was auch immer die Kamera hatte darauf hingewiesen worden zu erstellen. Digitizer ist auch als Tablet oder Grafiktablett bekannt, weil es wandelt Grafiken und Bilddaten in bin&auml;re Eing&auml;nge. Ein Grafiktablett als Digitalisierer wird es gut f&uuml;r Werke von Zeichnung und Bildbearbeitungsanwendungen verwendet.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/graphic_tablet.jpg\" alt=\"Graphic Tablet\" /></p>\n<h2>Mikrofon</h2>\n<p>Mikrofon Mikrofon ist ein Eingabeger&auml;t zur Eingabe Klang, dann in digitaler Form gespeichert ist. Das Mikrofon ist f&uuml;r verschiedene Anwendungen wie das Hinzuf&uuml;gen von Sound zu einer Multimedia-Pr&auml;sentation oder zum Mischen Musik verwendet.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/microphone.jpg\" alt=\"Mikrofon\" /></p>\n<h2>Magnetic Ink-Kartenleser (MICR)</h2>\n<p>MICR-Eingabevorrichtung in der Regel ist Verwendet in Banken wegen einer gro&szlig;en Anzahl von Schecks, um jeden Tag verarbeitet. Codenummer und Pr&uuml;fziffer der Bank werden &uuml;ber die Kontrollen mit einer speziellen Art von Tinte, die Partikel aus magnetischem Material, die Maschine lesbar sind enth&auml;lt gedruckt. Dieser Prozess wird als Lese Magnetic Ink Character Recognition (MICR). Die Hauptvorteile der MICR ist, dass es schnell ist und weniger fehleranf&auml;llig.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/micr.jpg\" alt=\"Magnetic Ink-Kartenleser (MICR)\" /></p>\n<h2>Optische Charakter Leser (OCR)</h2>\n<p>OCR ist eine Eingabevorrichtung verwendet, um einen gedruckten Text zu lesen. OCR Scannen von Text optisch Zeichen f&uuml;r Zeichen, wandelt sie in einen maschinenlesbaren Code und speichert den Text auf den Systemspeicher.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/ocr.jpg\" alt=\"Optische Charakter Leser (OCR)\" /></p>\n<h2>Bar Code Leser</h2>\n<p>Bar Code Leser ist ein Ger&auml;t zum Lesen von Strichcode-Daten (Daten in Form von hellen und dunklen Linien) verwendet. Strichcode-Daten in der Regel in Warenkennzeichnung verwendet wird, die Numerierung der B&uuml;cher usw. Es kann ein Handscanner sein, oder kann in einem station&auml;ren Scanner eingebettet werden. Strichcodeleser scannt ein Strichcodebild, wandelt es in ein alphanumerischer Wert, der dann an den Computer, um die Strichcode-Leseger&auml;t angeschlossen ist, zugef&uuml;hrt.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/barcode_reader.jpg\" alt=\"Bar Code Leser\" /></p>\n<h2>Optical Mark Reader(OMR)</h2>\n<p>OMR ist eine spezielle Art von optischer Scanner verwendet, um die Art der Marke mit Stift oder Bleistift zu erkennen. Es wird verwendet, wenn man von ein paar Alternativen ausgew&auml;hlt und markiert werden. Es ist speziell f&uuml;r die &Uuml;berpr&uuml;fung der Antwortb&ouml;gen von Pr&uuml;fungen mit Multiple-Choice-Fragen verwendet.</p>"
          ]
        },
        {
          "tag_line": "Computer Ausgabegeräte",
          "details": [
            "<p>Im Folgenden sind einige der wichtigen Ausgangsvorrichtungen , die in einem Computer verwendet werden</p>\n<ul class=\"list\">\n<li>Monitore</li>\n<li>Grafik-Plotter</li>\n<li>Drucker</li>\n</ul>\n<h2>Monitore</h2>\n<p>Monitore, die gemeinhin als Visual Display Unit (VDU) genannt werden, sind die Hauptausgabeger&auml;t eines Computers. Es bildet Bilder von kleinen Punkten, auch Pixel genannt, die in einer rechteckigen Form angeordnet sind. Die Sch&auml;rfe des Bildes h&auml;ngt von der Anzahl der Pixel.</p>\n<p>Es gibt zwei Arten von Betrachtungs Sichtschirm verwendet f&uuml;r Monitore.</p>\n<ul class=\"list\">\n<li>Kathodenstrahlr&ouml;hre (CRT)</li>\n<li>Flat- Panel Display</li>\n</ul>\n<h3>Kathodenstrahlr&ouml;hre (CRT)-Monitor</h3>\n<p>Die CRT-Anzeige besteht aus kleinen Bildelementen, auch Pixel genannt. Je kleiner die Pixel, desto besser ist die Bildqualit&auml;t oder die Aufl&ouml;sung. Es braucht mehr als einen beleuchteten Pixel ganzen Charakter zu bilden, wie die Buchstaben \"e\" in der Word-Hilfe.</p>\n<p>eine endliche Anzahl von Zeichen auf einem Bildschirm gleichzeitig angezeigt werden. der Bildschirm kann in einer Serie charakter-Boxen aufgeteilt werden- Feste Stelle auf dem Bildschirm, wo ein Standard-Zeichen platziert werden k&ouml;nnen. Die meisten Bildschirme sind Anzeige von 80 Zeichen von daten horizontal und 25 Zeilen vertikal. Es gibt einige Nachteile der CRT:</p>\n<ul class=\"list\">\n<li>gro&szlig; in Gr&ouml;&szlig;e</li>\n<li>Hochstromverbrauch</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/crt_monitor.jpg\" alt=\"CRT Monitor\" /></p>\n<h3>Flat-Panel Display Monitor</h3>\n<p>Der Flachbild Anzeige bezieht sich auf eine Klasse von Video-Ger&auml;te dass haben reduziert die Volumen, Gewicht und Leistungsbedarf im Vergleich zur CRT. Sie k&ouml;nnen sie an W&auml;nden h&auml;ngen oder tragen Sie sie auf Ihre Handgelenke. Aktuelle Anwendungen von Flat-Panel-Displays zum Beispiel Taschenrechner, Videospiele, Monitore, Laptop-Computer, Grafik-Display.</p>\n<p>Der Flachbildschirm ist in zwei Kategorien aufgeteilt:</p>\n<ul class=\"list\">\n<li>\n<p><strong>emittierenden Displays - </strong>Die emittierenden Displays sind Ger&auml;te, die elektrische Energie in Licht umwandeln. Beispiel sind Plasma-Panel und LED (Light-Emitting Diodes).</p>\n</li>\n<li>\n<p><strong> nicht emittierenden Displays - </strong>das nicht emittierende Displays verwenden optische Effekte zu umzuwandeln Sonnenlicht oder Licht von einer anderen Quelle in Grafik-Muster. Beispiel ist LCD (Liquid-Crystal-Device)</p>\n</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/flat_monitor.jpg\" alt=\"flach-Monitor\" /></p>\n<h2>Drucker</h2>\n<p>Drucker ist ein Ausgabeger&auml;t, das verwendet wird, um Informationen auf Papier zu drucken</p>\n<p>Es gibt zwei Arten von Druckern:</p>\n<ul class=\"list\">\n<li>Stylus Drucker</li>\n<li>Non-Impact-Drucker</li>\n</ul>\n<h2>Stylus Drucker</h2>\n<p>Die Impact-Drucker drucken Sie die Zeichen, die durch markante sie auf dem Band, die dann auf dem Papier gedr&uuml;ckt wird.</p>\n<p>Charakteristik von Stylus Drucker sind die folgenden:</p>\n<ul class=\"list\">\n<li>Sehr niedrige Verbrauchsmaterialkosten</li>\n<li>Sehr laut</li>\n<li>N&uuml;tzlich f&uuml;r den Massendruck aufgrund der niedrigen Kosten</li>\n<li>Es gibt k&ouml;rperliche Kontakt mit dem Papier um ein Bild zu erzeugen</li>\n</ul>\n<p>Diese Drucker sind von zwei Typen</p>\n<ul class=\"list\">\n<li>Zeichendrucker</li>\n<li>Zeilendrucker</li>\n</ul>\n<h3>Zeichendrucker</h3>\n<p>Zeichendrucker sind die Drucker, die ein Zeichen in einer Zeit, zu drucken</p>\n<p>Diese sind weiter in zwei Typen unterteilt:</p>\n<ul class=\"list\">\n<li>Nadeldrucker (DMP)</li>\n<li>Daisy Rad</li>\n</ul>\n<h4>Nadeldrucker (DMP)</h4>\n<p>Auf dem Markt eines der beliebtesten Drucker ist f&uuml;r Matrixdrucker. Diese Drucker sind wegen ihrer leichten Druck und wirtschaftlichen Preis beliebt. Jeder Charakter ist in gedruckter Form und Muster von Punkten Kopf besteht aus einer Matrix von Pins der Gr&ouml;&szlig;e (5 * 7, 7 * 9, 9 * 7 oder 9 * 9), die kommen, um ein Zeichen, das, warum es aufgerufen wird, bilden</p>\n<p><strong>Vorteile</strong></p>\n<ul class=\"list\">\n<li>Preiswert</li>\n<li>weit verbreitete</li>\n<li>Andere Sprachzeichen kann gedruckt werden</li>\n</ul>\n<p><strong>Nachteile</strong></p>\n<ul class=\"list\">\n<li>langsame Geschwindigkeit</li>\n<li>schlechte Qualit&auml;t</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/dot_matrix_printer.jpg\" alt=\"Nadeldrucker\" /></p>\n<h4>Daisy Rad</h4>\n<p>Kopf ist auf einem Rad liegen und Stifte sind entsprechenden zu Charaktere sind wie Bl&uuml;tenbl&auml;tter von Daisy (Blumennamen), die, warum es hei&szlig;t Typenraddrucker. Diese Drucker sind in der Regel f&uuml;r Textverarbeitung in B&uuml;ros, welche erfordert die ein paar Briefe an hier und da mit sehr sch&ouml;ne Qualit&auml;t gesendet.</p>\n<p><strong>Vorteile</strong></p>\n<ul class=\"list\">\n<li>Zuverl&auml;ssiger als DMP</li>\n<li>Bessere Qualit&auml;t</li>\n<li>Die Schriftart des Charakters kann leicht ge&auml;ndert werden</li>\n</ul>\n<p><strong>Nachteile</strong></p>\n<ul class=\"list\">\n<li>Langsamer als DMP</li>\n<li>Laut</li>\n<li>Teurer als DMP</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/daisy_wheel_printer.jpg\" alt=\"Typenraddrucker\" /></p>\n<h3>Line Drucker</h3>\n<p>Zeilendrucker sind die Drucker, die eine Zeile auf einmal drucken.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/line_printer.jpg\" alt=\"Line Printer\" /></p>\n<p>Das sind weitere zwei Arten</p>\n<ul class=\"list\">\n<li>Drum Drucker</li>\n<li>Ketten Drucker</li>\n</ul>\n<h4>Drum Drucker</h4>\n<p>Dieser Drucker ist wie eine Trommel in Form, so hei&szlig;t es Trommeldrucker. Die Oberfl&auml;che der Trommel wird in Anzahl von Spuren unterteilt. Gesamtzahl der Tracks gleich Papiergr&ouml;&szlig;e, dh f&uuml;r eine Papierbreite von 132 Zeichen sind, Trommel Haben 132 Spuren. Ein Zeichensatz ist auf dem richtigen Weg eingepr&auml;gt. Die verschiedenen Zeichens&auml;tze auf dem Markt verf&uuml;gbar sind 48-Zeichensatz, 64 und 96 Zeichen gesetzt. Ein Drehung der Trommel druckt eine Zeile. Trommel-Drucker sind schnell in der Geschwindigkeit und kann 300 bis 2000 Zeilen pro Minute drucken.</p>\n<p><strong>Vorteile</strong></p>\n<ul class=\"list\">\n<li>Sehr hohe Geschwindigkeit</li>\n</ul>\n<p><strong>Nachteile</strong></p>\n<ul class=\"list\">\n<li>Sehr teuer</li>\n<li>Charaktere Schriften k&ouml;nnen nicht ge&auml;ndert werden</li>\n</ul>\n<h4>Ketten Drucker</h4>\n<p>In diesem Drucker ,Kette von Zeichens&auml;tzen verwendet werden, so hei&szlig;t es Kette Drucker. Eine Standard-Zeichensatz k&ouml;nnen 48, 64 oder 96 Zeichen.</p>\n<p><strong>Vorteile</strong></p>\n<ul class=\"list\">\n<li>Charakter-Schriften k&ouml;nnen leicht ge&auml;ndert werden.</li>\n<li>Verschiedene Sprachen k&ouml;nnen mit dem gleichen Drucker verwendet werden.</li>\n</ul>\n<p><strong>Nachteile</strong></p>\n<ul class=\"list\">\n<li>laut</li>\n</ul>\n<h2>Non-Impact-Drucker</h2>\n<p>Non-Impact-Drucker drucken die Zeichen, ohne mit Band. Diese Drucker drucken Sie eine komplette Seite auf einmal, so dass sie auch als Seitendrucker genannt.</p>\n<p>Diese Drucker sind von zwei Typen</p>\n<ul class=\"list\">\n<li>Laserdrucker</li>\n<li>Inkjet-Drucker</li>\n</ul>\n<h2>Charakteristik von Non-Impact-Drucker</h2>\n<ul class=\"list\">\n<li>Schneller als Impact-Drucker</li>\n<li>Sie sind nicht laut.</li>\n<li>hoch Qualit&auml;t.</li>\n<li>Support viele Schriften und unterschiedliche Zeichengr&ouml;&szlig;e.</li>\n</ul>\n<h3>Laserdrucker</h3>\n<p>Dies sind Non-Impact-Seitendrucker. Sie verwenden Laserlicht, um die Punkte produzieren, um die Zeichen zu bilden, die auf Seite gedruckt werden</p>\n<h4>Vorteile</h4>\n<ul class=\"list\">\n<li>Sehr hohe Geschwindigkeit</li>\n<li>Sehr hohe Ausgabequalit&auml;t</li>\n<li>geben gute Grafikqualit&auml;t</li>\n<li>Support viele Schriften und unterschiedliche Zeichengr&ouml;&szlig;e</li>\n</ul>\n<h4>Nachteile</h4>\n<ul class=\"list\">\n<li>\n<p>Expensive.</p>\n</li>\n<li>\n<p>Cannot be used to produce multiple copies of a document in a single printing.</p>\n</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/laser_printer.jpg\" alt=\"Laserdrucker\" /></p>\n<h3>Inkjet-Drucker</h3>\n<p>Tintenstrahldrucker sind Non-Impact-Zeichendrucker auf der Basis einer relativ neuen Technologie. Sie drucken Zeichen durch Spr&uuml;hen kleiner Tintentropfen auf das Papier. Inkjet-Drucker produzieren qualitativ hochwertige Ausgabe mit vorzeigbar Funktionen.</p>\n<p>Sie machen weniger L&auml;rm, weil kein H&auml;mmern ist getan, und diese haben viele Arten von DruckModi zur Verf&uuml;gung. Farbdruck ist ebenfalls m&ouml;glich. Einige Modelle der Inkjet-Drucker k&ouml;nnen mehrere Kopien von Druck auch produzieren.</p>\n<h4>Vorteile</h4>\n<ul class=\"list\">\n<li>Hohe Druckqualit&auml;t</li>\n<li>Mehr Sicherheit</li>\n</ul>\n<h4>Nachteile</h4>\n<ul class=\"list\">\n<li>teuer wie die Kosten pro Seite ist hoch</li>\n<li>Langsam im Vergleich zu Laserdrucker</li>\n</ul>"
          ]
        },
        {
          "tag_line": "Computer-Speicher",
          "details": [
            "<p>Ein Speicher ist wie ein menschliches Gehirn. Es wird zur Speicherung von Daten und Anweisungen verwendet. Computerspeicher ist der Lagerung platz im Computer wo Daten verarbeitet werden, und Anweisungen f&uuml;r die Verarbeitung erforderlichen gespeichert ist. Der Speicher ist in zahlreiche kleine Teile aufgeteilt, die Zellen genannt. Jede Zelle Standort oder Zelle eine eindeutige Adresse, die von Null bis Speichergr&ouml;&szlig;e minus eins variiert. Zum Beispiel, wenn der Computer &uuml;ber 64k Worten, dann wird diese Speichereinheit verf&uuml;gt &uuml;ber 64 * 1024 = 65536 Speicherpl&auml;tze. Die Adresse dieser Stellen variiert von 0 bis 65535.</p>\n<p>Der Speicher ist in erster Linie von drei Arten</p>\n<ul class=\"list\">\n<li>Cache-Speicher</li>\n<li>Prim&auml;rspeicher / Haupt-speicher</li>\n<li>Sekund&auml;rspeicher</li>\n</ul>\n<h2>Cache-Speicher</h2>\n<p>Cache-Speicher ist ein sehr hoher Geschwindigkeit Halbleiterspeicher welche CPU beschleunigen kann. Es wirkt als ein Puffer zwischen der CPU und dem Hauptspeicher. Es wird verwendet, um die Teile der Daten und Programme, die am h&auml;ufigsten von der CPU verwendet werden, zu halten. Die Teile der Daten und Programme von der Festplatte in den Cache-Speicher vom Betriebssystem &uuml;bertragen, von wo aus CPU auf sie zugreifen k&ouml;nnen.</p>\n<h3>Vorteile</h3>\n<p>Die Vorteile der Cache-Speicher sind wie folgt:</p>\n<ul class=\"list\">\n<li>\n<p>Der Cache-Speicher ist schneller als der Hauptspeicher.</p>\n</li>\n<li>\n<p>Es verbraucht weniger Zugriffszeit im Vergleich zu den Hauptspeicher.</p>\n</li>\n<li>\n<p>Es speichert das Programm, das in kurzer Zeit ausgef&uuml;hrt werden k&ouml;nnen.</p>\n</li>\n<li>\n<p>Es speichert Daten f&uuml;r den tempor&auml;ren Einsatz.</p>\n</li>\n</ul>\n<h3>Nachteile</h3>\n<p>Die Nachteile der Cache-Speicher sind wie folgt:</p>\n<ul class=\"list\">\n<li>Cache-Speicher hat eine begrenzte Kapazit&auml;t.</li>\n<li>Es ist sehr teuer</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/cache_memory.jpg\" alt=\"Cache-Speicher\" /></p>\n<h2>Prim&auml;rspeicher (Haupt-speicher)</h2>\n<p>Prim&auml;rspeicher h&auml;lt nur die Daten und Befehle auf dem Computer arbeitet derzeit. Es hat eine begrenzte Kapazit&auml;t und Daten ist verloren gehen, wenn der Strom abgeschaltet wird. Es wird im allgemeinen aus Halbleitervorrichtung hergestellt. Diese Erinnerungen sind nicht so schnell wie Register. Die Daten und Befehle ben&ouml;tigt, um weiterverarbeitet werden im Hauptspeicher befinden. Es ist in zwei Unterkategorien aufgeteilt RAM und ROM.</p>\n<h3>Charakteristik der Hauptspeicher</h3>\n<ul class=\"list\">\n<li>Dies sind Halbleiterspeicher</li>\n<li>Es ist, als Hauptspeicher bekannt.</li>\n<li>Normalerweise fl&uuml;chtigen Speicher.</li>\n<li>Die Daten werden f&uuml;r den Fall, Macht verloren ist ausgeschaltet.</li>\n<li>Es wird Arbeitsspeicher des Computers.</li>\n<li>Schneller als Sekund&auml;rspeicher.</li>\n<li>Ein Computer kann nicht ohne Prim&auml;rspeicher laufen.</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/primary_memory.jpg\" alt=\"Prim&auml;rspeicher\" /></p>\n<h2>Sekund&auml;rspeicher</h2>\n<p>Dieser Speichertyp wird auch als externer Speicher oder nicht fl&uuml;chtigen bekannt. Sie ist langsamer als der Hauptspeicher. Diese sind zum Speichern von Daten / Information dauerhaft eingesetzt. CPU direkt greift nicht auf diese Erinnerungen, sondern werden sie &uuml;ber Input-Output-Routinen abgerufen. Inhalt der Sekund&auml;rspeicher werden zuerst in den Hauptspeicher &uuml;bertragen und dann kann die CPU zugreifen k&ouml;nnen es. Zum Beispiel: Festplatte, CD-ROM, DVD etc.</p>\n<h3>Charakteristik der Sekund&auml;rspeicher</h3>\n<ul class=\"list\">\n<li>Dies sind magnetische und optische Speicher</li>\n<li>Es ist, als Backup-Speicher bekannt</li>\n<li>Es ist nicht-fl&uuml;chtigen Speicher</li>\n<li>Daten dauerhaft gespeichert, auch wenn die Stromversorgung ausgeschaltet wird.</li>\n<li>Es wird zur Speicherung von Daten in einem Computer.</li>\n<li>Computer ohne Sekund&auml;rspeicher laufen</li>\n<li>Langsamer als Prim&auml;rspeicher</li>\n</ul>"
          ]
        },
        {
          "tag_line": "Computer - Random Access Memory",
          "details": [
            "<p>RAM (Random Access Memory) ist der interne Speicher der CPU zum Speichern von Daten, Programm und Programm Ergebnis. Es wird Lese / Schreibspeicher, der Daten speichert, bis die Maschine arbeitet. Sobald die Maschine ausgeschaltet ist, werden die Daten gel&ouml;scht.</p>\n<p>Zugriffszeit im RAM ist unabh&auml;ngig von der Adresse, die ist, ist jede Speicherstelle innerhalb der Speicher so leicht wie andere Orte zu erreichen, und nimmt die gleiche Menge an Zeit. Daten im RAM kann wahlfrei zugegriffen werden, aber es ist sehr teuer.</p>\n<p>RAM ist fl&uuml;chtig, dh Daten, die darin gespeichert ist verloren, wenn wir den Computer ausschalten oder wenn es einen Stromausfall. Daher ist eine Sicherung unterbrechungsfreie Stromversorgung (USV) ist oft mit Computern verwendet. RAM klein ist, sowohl in Bezug auf ihre physikalischen Gr&ouml;&szlig;e und der Menge an Daten, die sie halten k&ouml;nnen.</p>\n<p>RAM ist von zwei Arten</p>\n<ul class=\"list\">\n<li>Static RAM (SRAM)</li>\n<li>Dynamic RAM (DRAM)</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/primary_memory.jpg\" alt=\"Prim&auml;rspeicher\" /></p>\n<h2>Static RAM (SRAM)</h2>\n<p>Die wort <strong>static</strong> zeigt an, dass der Speicher beh&auml;lt seinen Inhalt so lange Strom ist versorgt. Allerdings, gehen Daten verloren, wenn der Strom wird nach unten durch fl&uuml;chtige Natur. SRAM-Chips verwenden eine Matrix von 6-Transistoren und keine Kondensatoren. Transistoren ben&ouml;tigen keine Strom um Leckage zu verhindern, so SRAM mu&szlig; nicht regelm&auml;&szlig;ig aktualisiert werden.</p>\n<p>Wegen der zus&auml;tzlichen Platz verwendet in der Matrix, SRAM Verwendungen mehr Chips als DRAM f&uuml;r die gleiche Menge an Speicherplatz,so die Herstellungskosten h&ouml;her. So SRAM als Cache-Speicher verwendet und hat einen sehr schnellen Zugriff.</p>\n<h3>Charakteristisch f&uuml;r die Static RAM</h3>\n<ul class=\"list\">\n<li>Es hat lange Lebensdauer</li>\n<li>Es hat lange Lebensdauer</li>\n<li>Schnellere</li>\n<li>Wird als Cache-Speicher</li>\n<li>Gro&szlig;e Gr&ouml;&szlig;e</li>\n<li>Teure</li>\n<li>Hochstromverbrauch</li>\n</ul>\n<h2>Dynamic RAM (DRAM)</h2>\n<p>DRAM ,anders als SRAM, muss st&auml;ndig <strong>frischt</strong> um die Daten zu halten. Dies wird durch Anordnen des Speichers auf einer Auffrisch-Schaltung, die Daten mehrere hundert mal pro Sekunde neu geschrieben wurde. DRAM ist f&uuml;r die meisten Systemspeicher verwendet, weil es billig und klein ist. Alle DRAMs werden von Speicherzellen, die aus einem Kondensator und einem Transistor zusammengesetzt sind.</p>\n<h3>Charakteristisch f&uuml;r die Dynamic RAM</h3>\n<ul class=\"list\">\n<li>Er hat kurze Lebensdauer Daten</li>\n<li>Brauchen Sie, um kontinuierlich aufgefrischt werden</li>\n<li>Langsamer im Vergleich zu SRAM</li>\n<li>Wird als RAM</li>\n<li>Klein Gr&ouml;&szlig;e</li>\n<li>Weniger teure</li>\n<li>Weniger Stromverbrauch</li>\n</ul>"
          ]
        },
        {
          "tag_line": "Computer - Read Only Memory",
          "details": [
            "<p>ROM steht f&uuml;r Read Only Memory. Der Speicher, von dem k&ouml;nnen wir nur lesen, aber nicht darauf schreiben. Diese Art von Speicher ist nichtfl&uuml;chtig. Die Informationen werden in solchen Speichern w&auml;hrend der Herstellung gespeichert. Ein ROM, speichert solche Anweisungen, die erforderlich sind, um einen Computer zu starten. Dieser Vorgang wird als Bootstrap bezeichnet. ROM-Chips sind nicht nur in der Computer, sondern auch in anderen elektronischen Ger&auml;ten wie Waschmaschine und Mikrowelle verwendet.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/rom.jpg\" alt=\"ROM\" /></p>\n<p>Im Folgenden sind die verschiedenen Arten von ROM</p>\n<h2>MROM (Masked ROM)</h2>\n<p>Die ersten ROMs waren fest verdrahtet Ger&auml;te, die eine vorprogrammierte Gruppe von Daten oder Anweisungen enthalten sind. Diese Art von ROMs sind als maskierte ROMs, die preiswert sind bekannt.</p>\n<h2>PROM (Programmable Read only Memory)</h2>\n<p>PROM ist Festwertspeicher, der nur einmal durch den Benutzer ge&auml;ndert werden kann. Der Anwender kauft ein leeres PROM und gibt die gew&uuml;nschten Inhalte mit einem PROM-Programm. Im Inneren der PROM-Chip gibt es kleine Sicherungen, die bei der Programmierung offen verbrannt werden. Es kann nur einmal programmiert werden und ist nicht l&ouml;schbar.</p>\n<h2>EPROM (l&ouml;schbaren und programmierbaren Nur-Lese-Speicher)</h2>\n<p>Der EPROM kann, indem es ultraviolettem Licht f&uuml;r eine Dauer von bis zu 40 Minuten gel&ouml;scht. Normalerweise erreicht ein EPROM Radiergummi diese Funktion. W&auml;hrend der Programmierung wird eine elektrische Ladung in einem isolierten Gate-Bereich gefangen. Die Ladung wird f&uuml;r mehr als zehn Jahre aufbewahrt, weil die Ladung hat keine Leckagepfad. Zum L&ouml;schen diese Geb&uuml;hr wird UV-Licht durch ein Quarzkristall-Fenster (Deckel) &uuml;bergeben. Diese Exposition zu UV-Licht leitet die Ladung. W&auml;hrend der normalen Nutzung der Quarz Deckel ist mit einem Aufkleber versiegelt.</p>\n<h2>EEPROM (elektrisch l&ouml;schbarer und programmierbarer Nur-Lese-Speicher)</h2>\n<p>Der EEPROM programmiert ist und elektrisch gel&ouml;scht. Es kann etwa zehntausend mal gel&ouml;scht und neu programmiert werden. Sowohl L&ouml;schen und Programmieren dauert etwa 4 bis 10 ms (Millisekunde). EEPROM kann jede Lage selektiv gel&ouml;scht und programmiert werden. EEPROMs k&ouml;nnen ein Byte zu einem Zeitpunkt gel&ouml;scht werden, anstatt das L&ouml;schen des gesamten Chips. Daher ist der Prozess der Re-Programmierung flexibel, aber langsam.</p>\n<h2>Vorteile von ROM</h2>\n<p>Die Vorteile der ROM sind wie folgt:</p>\n<ul class=\"list\">\n<li>Nichtfl&uuml;chtiger in der Natur</li>\n<li>Diese k&ouml;nnen nicht versehentlich ver&auml;ndert werden</li>\n<li>Billiger als RAMs</li>\n<li>Leicht zu testen</li>\n<li>Zuverl&auml;ssiger als RAMs</li>\n<li>Diese sind statisch und nicht aufgefrischt werden m&uuml;ssen</li>\n<li>Die Inhalte sind immer bekannt und &uuml;berpr&uuml;ft werden k&ouml;nnen</li>\n</ul>"
          ]
        },
        {
          "tag_line": "Computer - Motherboard",
          "details": [
            "<p>Die Hauptplatine dient als Single Plattform, um alle Teile eines Computers miteinander verbinden. Ein Motherboard verbindet CPU, Speicher, Festplatten, optische Laufwerke, Grafikkarte, Soundkarte und andere Anschl&uuml;sse und Erweiterungskarten direkt oder &uuml;ber Kabel. Es kann als das R&uuml;ckgrat eines Computers betrachtet werden.</p>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/mother_board.jpg\" alt=\"Mother Board\" /></p>\n<h2>Features von Motherboard</h2>\n<p>Ein Motherboard ist mit folgenden Features:</p>\n<ul class=\"list\">\n<li>\n<p>Mainboard ist sehr unterschiedlich bei der Unterst&uuml;tzung der verschiedenen Arten von Komponenten.</p>\n</li>\n<li>\n<p>Normalerweise wird ein Motherboard unterst&uuml;tzt eine einzige Art von CPU und einige Arten von Erinnerungen.</p>\n</li>\n<li>\n<p>Videokarten, Festplatte, Soundkarten Haben zu sein kompatibel mit Motherboard zu funktioniert richtig.</p>\n</li>\n<li>\n<p>F&auml;lle</p>\n</li>\n</ul>\n<h2>Beliebte Hersteller</h2>\n<ul class=\"list\">\n<li>Intel</li>\n<li>ASUS</li>\n<li>AOpen</li>\n<li>ABIT</li>\n<li>Biostar</li>\n<li>Gigabyte</li>\n<li>MSI</li>\n</ul>\n<h2>Beschreibung von Motherboard</h2>\n<p>Das Motherboard ist im Inneren des F&auml;lle angebracht und wird sicher &uuml;ber kleine Schrauben durch vorgebohrte L&ouml;cher angebracht. Motherboard enth&auml;lt Ports, um alle internen Komponenten zu verbinden. Es bietet eine einzige Steckdose f&uuml;r CPU, w&auml;hrend f&uuml;r Speicher, in der Regel eine oder mehrere Steckpl&auml;tze zur Verf&uuml;gung. Mainboards bieten Ports- zu befestigen Diskettenlaufwerk, Festplatte, optische Laufwerke und &uuml;ber Flachbandkabel. Motherboard tr&auml;gt Fans und einen speziellen Port konzipiert f&uuml;r die Stromversorgung.</p>\n<p>Da ist ein Peripheriekartenschlitz in Front von dem Motherboard unter Verwendung Welche videokarten, Soundkarten und andere kann sein Erweiterungskarten Hauptplatine verbunden.</p>\n<p>Auf der linken Seite, Motherboards tragen eine Reihe von Ports zu verbinden Monitor, Drucker, Maus, Tastatur, Lautsprecher und Netzwerkkabel anschlie&szlig;en. Mainboards bieten auch USB-Anschl&uuml;sse, welche erlaubt die kompatible Ger&auml;te in werden angeschlossen Plug-in /-out-Stecker Mode zum Beispiel, Pen-Stick, Digitalkameras usw.</p>"
          ]
        },
        {
          "tag_line": "Computer - Ports",
          "details": [
            "<h2>Was ist ein Port?</h2>\n<p>Ein Port:</p>\n<ul class=\"list\">\n<li>\n<p>ist eine physikalische Andockstelle mit deren Hilfe ein externes Ger&auml;t an den Computer angeschlossen werden.</p>\n</li>\n<li>\n<p>kann auch programmatische Docking Punkt, durch welche Informationsfluss aus ein Programm zu den Computer oder &uuml;ber das Internet .</p>\n</li>\n</ul>\n<h3>Charakteristik</h3>\n<p>Ein Port hat die folgenden Charakteristik:</p>\n<ul class=\"list\">\n<li>\n<p>Externe Ger&auml;te werden an einen Computer &uuml;ber Kabel und Ports angeschlossen.</p>\n</li>\n<li>\n<p>Ports sind Steckpl&auml;tze auf dem Mainboard, in die ein Kabel von externen Ger&auml;t eingesteckt ist.</p>\n</li>\n<li>\n<p>Beispiele f&uuml;r externe Ger&auml;te &uuml;ber Ports angeschlossen sind Maus, Tastatur, Monitor, Mikrofon, Lautsprecher etc.</p>\n</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/computer_ports.jpg\" alt=\"Computer Ports\" /></p>\n<p>Im Folgenden sind einige wichtige Arten von Ports:</p>\n<h3>Serial Port</h3>\n<ul class=\"list\">\n<li>Wird f&uuml;r externe Modems und &auml;ltere Computer-Maus</li>\n<li>Zwei Versionen: 9-polig, 25 Pin-Modell</li>\n<li>Daten f&auml;hrt bei 115 Kilobit pro Sekunde</li>\n</ul>\n<h3>Parallel Port</h3>\n<ul class=\"list\">\n<li>Daten f&auml;hrt bei 115 Kilobit pro Sekunde</li>\n<li>Auch als Druckeranschluss</li>\n<li>25 Pin-Modell</li>\n<li>auch bekannt als IEEE 1284-kompatible Centronics-Schnittstelle</li>\n</ul>\n<h3>PS/2 Port</h3>\n<ul class=\"list\">\n<li>\n<p>Gebraucht f&uuml;r alte Computer-Tastatur und Maus</p>\n</li>\n<li>\n<p>Auch als Maus-Port</p>\n</li>\n<li>\n<p>Die meisten der alten Computer bieten zwei PS / 2, die jeweils f&uuml;r Maus und Tastatur</p>\n</li>\n<li>\n<p>Auch bekannt als IEEE 1284-kompatible Centronics-Schnittstelle</p>\n</li>\n</ul>\n<h3>Universal Serial Bus (or USB) Port</h3>\n<ul class=\"list\">\n<li>\n<p>Es k&ouml;nnen verbinden alle Arten von externen USB-Ger&auml;te wie externe Festplatten, Drucker, Scanner, Maus, Tastatur etc.</p>\n</li>\n<li>\n<p>Es wurde 1997 eingef&uuml;hrt.</p>\n</li>\n<li>\n<p>Die meisten Computer verf&uuml;gen &uuml;ber zwei USB-Ports als Minimum.</p>\n</li>\n<li>\n<p>Daten f&auml;hrt mit 12 Megabit pro Sekunden</p>\n</li>\n<li>\n<p>USB-kompatible Ger&auml;te k&ouml;nnen Strom aus einem USB-Anschluss zu bekommen</p>\n</li>\n</ul>\n<h3>VGA Port</h3>\n<ul class=\"list\">\n<li>\n<p>verbinden Monitor zu Computers an die Grafikkarte.</p>\n</li>\n<li>\n<p>hat 15 L&ouml;cher.</p>\n</li>\n<li>\n<p>&Auml;hnlich wie bei seriellen Anschluss, aber seriellen Anschluss hat Stifte, es L&ouml;cher hat</p>\n</li>\n</ul>\n<h3>Stromanschl&uuml;sse</h3>\n<ul class=\"list\">\n<li>\n<p>Drei-S&auml;ulen-Stecker</p>\n</li>\n<li>\n<p>Anschluss zu Computers das Netzkabel des, dass Stecker in eine Stromleiste oder Steckdose</p>\n</li>\n</ul>\n<h3>Firewire Port</h3>\n<ul class=\"list\">\n<li>\n<p>Transfers gro&szlig;e Menge an Daten mit sehr hoher Geschwindigkeit.</p>\n</li>\n<li>\n<p>Verbindet Camcorder und Videoger&auml;ten an den Computer</p>\n</li>\n<li>\n<p>Daten f&auml;hrt mit 400 bis 800 Megabit pro Sekunden</p>\n</li>\n<li>\n<p>von Apple erfunden</p>\n</li>\n<li>\n<p>Drei Varianten: 4-Pin FireWire 400-Anschluss, 6-poligen FireWire 400-Anschluss und 9-Pin FireWire 800-Anschluss</p>\n</li>\n</ul>\n<h3>Modem Port</h3>\n<ul class=\"list\">\n<li>Anschluss eines PC-Modem an das Telefonnetz</li>\n</ul>\n<h3>Ethernet Port</h3>\n<ul class=\"list\">\n<li>\n<p>Verbindung zu einem Netzwerk und High-Speed-Internet.</p>\n</li>\n<li>\n<p>verbinden Netzwerkkabel mit einem Computer.</p>\n</li>\n<li>\n<p>Dieser Port befindet sich auf einer Ethernet-Karte.</p>\n</li>\n<li>\n<p>Daten f&auml;hrt mit 10 Megabit bis 1000 Megabit pro Sekunde, abh&auml;ngig von der Netzwerkbandbreite.</p>\n</li>\n</ul>\n<h3>Game Port</h3>\n<ul class=\"list\">\n<li>Schlie&szlig;en Sie einen Joystick, um einen PC</li>\n<li>Jetzt durch USB ersetzt.</li>\n</ul>\n<h3>Digital Video Interface, DVI port</h3>\n<ul class=\"list\">\n<li>\n<p>Verbindet Flat Panel LCD-Monitor, um High-End-Video-Grafikkarten des Computers.</p>\n</li>\n<li>\n<p>Sehr beliebt bei den Grafikkartenherstellern.</p>\n</li>\n</ul>\n<h3>Steckdosen</h3>\n<ul class=\"list\">\n<li>\n<p>Verbindet Mikrofon, Lautsprecher zur Soundkarte des Computers</p>\n</li>\n</ul>"
          ]
        },
        {
          "tag_line": "Computer - Software",
          "details": [
            "<p>Software ist ein satz von Programmen, welche dazu ausgelegt ist, eine gut definierte Funktion auszuf&uuml;hren. Ein Programm ist eine Folge von Befehlen geschrieben um ein bestimmtes Problem zu l&ouml;sen.</p>\n<p>gibt es zwei Arten von Software</p>\n<ul class=\"list\">\n<li>System Software</li>\n<li>Application Software</li>\n</ul>\n<h2>System Software</h2>\n<p>Die Systemsoftware ist eine Sammlung von Programmen entworfen f&uuml;r den Betrieb, Kontrolle und erweitern die Verarbeitungsm&ouml;glichkeiten der Computer selbst. System-Software werden im allgemeinen durch Computer herstellt. Diese Softwareprodukte umfassen von Programmen geschrieben in Low-Level-Sprachen welche mit der Hardware interagieren auf einer sehr grundlegenden Ebene. System-Software dient als Schnittstelle zwischen Hardware und den Endverbraucher.</p>\n<p>Einige Beispiele f&uuml;r Systemsoftware sind Betriebssystem, Compiler, Interpreter, Monteure etc</p>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/system_software.jpg\" alt=\"System Software\" /></p>\n<p>Features der System-Software sind wie folgt:</p>\n<ul class=\"list\">\n<li>Schlie&szlig;en, um System</li>\n<li>schnell in der Geschwindigkeit</li>\n<li>schwierig zu gestalten</li>\n<li>Schwer zu verstehen</li>\n<li>weniger interaktiv</li>\n<li>kleiner</li>\n<li>Schwer zu manipulieren</li>\n<li>Allgemein in Low-Level-Sprache geschrieben</li>\n</ul>\n<h2>Application Software</h2>\n<p>Anwendungssoftwareprodukte sind so konzipiert, um einen bestimmten Bedarf an einer bestimmten Umgebung zu erf&uuml;llen. Alle Software-Anwendungen in der Computer-Labor hergestellt werden, k&ouml;nnen unter die Kategorie der Anwendungssoftware kommen.</p>\n<p>Anwendungssoftware kann kann besteht von einem einzigen Programm aus, wie ein Microsoft-Notizblock zum Schreiben und Bearbeiten von einfachen Text. Es kann auch aus einer Sammlung von Programmen bestehen, die oft ein Software-Paket, die zusammenarbeiten, um eine Aufgabe zu erledigen, wie zum Beispiel ein TabellenkalkulationsPaket.</p>\n<p>EBeispiele aus der Anwendungssoftware sind folgende:xamples of Application software are following:</p>\n<ul class=\"list\">\n<li>Payroll Software</li>\n<li>Student Record Software</li>\n<li>Inventory Management Software</li>\n<li>Income Tax Software</li>\n<li>Railways Reservation Software</li>\n<li>Microsoft Office Suite Software</li>\n<li>Microsoft Word</li>\n<li>Microsoft Excel</li>\n<li>Microsoft Powerpoint</li>\n</ul>\n<p><img src=\"https://www.tutorialspoint.com/de/computer_fundamentals/images/application_software.jpg\" alt=\"Application Software\" /></p>\n<p>Features von Anwendungssoftware sind wie folgt:</p>\n<ul class=\"list\">\n<li>Schlie&szlig;en, um Benutzer</li>\n<li>Einfach zu entwerfen</li>\n<li>Weitere interaktive</li>\n<li>Langsam in Geschwindigkeit</li>\n<li>Allgemein in Hochsprache geschrieben</li>\n<li>Leicht zu verstehen</li>\n<li>Einfach zu manipulieren und zu verwenden</li>\n<li>Bigger in Gr&ouml;&szlig;e und erfordert gro&szlig;en Stauraum</li>\n</ul>"
          ]
        }
      ]
    },
    {
      "title": "Bildverarbeitung",
      "content": [
        {
          "tag_line": "Anwendungsbeispiele der Bildverarbeitung",
          "details": [
            "<p>Bildverarbeitung wird mittlerweile in nahezu allen Wissenschafts- und Ingenieursdisziplinen eingesetzt, wie beispielsweise in der modernen Mikroskopie, medizinischen Diagnostik, Astronomie, Maschinenbau und in der Fernerkundung (Umweltbeobachtung, Spionage). Mit Methoden der Bildverarbeitung werden in Maschinen Objekte gezählt, vermessen, Objekte inspiziert oder codierte Informationen gelesen. Röntgen- und Ultraschallgeräte liefern mit der Bildverarbeitung Bilder, die der Arzt einfacher deuten kann. Röntgengeräte in Sicherheitszonen untersuchen Gepäck und Kleidung automatisch nach gefährlichen Objekten (Waffen etc.). Ein weiteres Feld ist die <a href=\"/wiki/Qualit%C3%A4tssicherung\" title=\"Qualitätssicherung\">Qualitätssicherung</a> in <a href=\"/wiki/Fertigungsprozess\" class=\"mw-redirect\" title=\"Fertigungsprozess\">Fertigungs-</a> und <a href=\"/wiki/Produktionsprozess\" title=\"Produktionsprozess\">Produktionsprozessen</a>. Der in der Robotik so genannte <a href=\"/wiki/Griff_in_die_Kiste\" title=\"Griff in die Kiste\">Griff in die Kiste</a> wird ebenfalls durch Bildverarbeitung unterstützt.\n</p>\n<h3><span class=\"mw-headline\" id=\"Inspektion_und_Vermessung_von_Objekten\">Inspektion und Vermessung von Objekten</span></h3>"
          ]
        },
        {
          "tag_line": "Objekte der Bildverarbeitung",
          "details": [
            "Verfahren der Bildverarbeitung erwarten generell <i>Bilddaten</i> als Eingabe. Diese Bilddaten können sowohl in der <i>Art ihrer Entstehung</i>, als auch in ihrer <i>Kodierung</i> unterschieden werden. Die Art der Entstehung beschreibt, über welches technische Prinzip das Bild erzeugt wurde. Am weitesten verbreitet sind hier <i>Reflexionsbilder</i>, wie sie bei einer Kamera oder beim Ultraschall entstehen. Darüber hinaus existieren <i>Projektionsbilder</i>, wie zum Beispiel Röntgenaufnahmen, sowie <i>Schematisierte Bilder</i>, wie Karten und Dokumente. Bei der Kodierung ist die <a href=\"/wiki/Rastergrafik\" title=\"Rastergrafik\">Rastergrafik</a> die verbreitetste Form, in der die Bilddaten durch ein zweidimensionales Raster von Pixeln dargestellt werden. Eine weitere Form sind <a href=\"/wiki/Vektorgrafik\" title=\"Vektorgrafik\">Vektorgrafiken</a>, die nicht aus einem Raster bestehen, sondern Anweisungen dazu enthalten, wie ein Bild aus geometrischen Primitiven zu erzeugen ist.\n"
          ]
        },
        {
          "tag_line": "Abgrenzung zu verwandten Gebieten",
          "details": [
            "Verwandte Gebiete der Bildverarbeitung sind die <a href=\"/wiki/Bildbearbeitung\" title=\"Bildbearbeitung\">Bildbearbeitung</a>, das <a href=\"/wiki/Maschinelles_Sehen\" title=\"Maschinelles Sehen\">Maschinelle Sehen</a> und die <a href=\"/wiki/Computergrafik\" title=\"Computergrafik\">Computergrafik</a>. Mit <i>Bildbearbeitung</i> wird eine eher abstraktere Sicht auf die Änderung von Bildern gelegt, während die Bildverarbeitung hierfür die mathematischen und algorithmischen Grundlagen liefert, welche dann bei der Implementierung von <a href=\"/wiki/Grafiksoftware\" title=\"Grafiksoftware\">Grafiksoftware</a> zur Bildverarbeitung verwendet werden. Dies liefert die Bildverarbeitung auch für das <i>maschinelle Sehen</i>. Während die Bildverarbeitung aus Bilddaten wiederum Bilddaten oder einfache Informationen erzeugt, erzeugt das Maschinelle Sehen aus Bilddaten Bildbeschreibungen. Die <i>Computergrafik</i> wiederum erzeugt aus Bildbeschreibungen Bilddaten.\n"
          ]
        },
        {
          "tag_line": "Operationen der Bildverarbeitung",
          "details": [
            "<p>Bei den Operationen zur Bildverarbeitung ist zunächst zu unterscheiden zwischen Verfahren, die ein neues Bild erzeugen, und solchen, die Informationen über das Bild liefern. Die Verfahren, die ein neues Bild erzeugen, können anhand der Größe der Region der Eingangsdaten unterschieden werden. Darüber hinaus ist zu unterscheiden, ob das Verfahren die grundlegende Struktur des Bildes erhält oder diese verändert.\n</p><p>Ein verbreitetes Verfahren, um aus einem Bild eine Information zu erzeugen, ist die Berechnung des <a href=\"/wiki/Histogramm\" title=\"Histogramm\">Histogramms</a>, welches Aufschluss über die statistische Helligkeitsverteilung im Bild gibt. Solch ein Histogramm kann zum Beispiel als Konfiguration für weitere Bildverarbeitungschritte oder als Information für einen menschlichen Benutzer einer Software dienen. Weitere berechenbare Informationen eines Bildes sind zum Beispiel seine <a href=\"/wiki/Entropie_(Informationstheorie)\" title=\"Entropie (Informationstheorie)\">Entropie</a> oder mittlere Helligkeit.\n</p><p>Verfahren, die ein neues Bild erzeugen, lassen sich aufgrund ihrer Eingangsdaten in <i><a href=\"/wiki/Punktoperator_(Bildverarbeitung)\" title=\"Punktoperator (Bildverarbeitung)\">Punktoperationen</a></i>, <i><a href=\"/wiki/Nachbarschaft_(Bildverarbeitung)\" title=\"Nachbarschaft (Bildverarbeitung)\">Nachbarschaftsoperationen</a></i> und <i>globale Operationen</i> unterscheiden. Die <i>Punktoperationen</i> verwenden die Farb- oder Helligkeitsinformationen an einem gegebenen Punkt des Bildes als Eingabe, errechnen einen neuen Helligkeitswert als Ergebnis und speichern dieses an denselben Punkt im Zielbild. Typische Anwendungsfälle von Punktoperationen sind zum Beispiel die Korrektur von Kontrast und Helligkeit, eine Farbkorrektur durch Drehen des Farbraums oder die Anwendung verschiedener <a href=\"/wiki/Schwellenwertverfahren\" title=\"Schwellenwertverfahren\">Schwellenwertverfahren</a>. Eine Punktoperation kann entweder <i>homogen</i> sein, was bedeutet, dass die Koordinate der Quelldaten bei der Berechnung nicht berücksichtigt wird, oder sie können <i>inhomogen</i> sein, was zum Beispiel eine adaptive Tonwertkorrektur ermöglicht. <i>Nachbarschaftsoperationen</i> verwenden sowohl einen Punkt als auch eine bestimmte Menge seiner Nachbarn als Eingabe, errechnen aus ihnen ein Ergebnis und schreiben dieses an die Koordinate des Referenzpunktes in das Zielbild. Eine sehr verbreitete Art von Nachbarschaftsoperationen sind die <i><a href=\"/wiki/Faltung_(Mathematik)\" title=\"Faltung (Mathematik)\">Faltungsfilter</a></i>. Hierbei werden die Helligkeit- oder Farbwerte gemäß einem <a href=\"/wiki/Filterkern\" class=\"mw-redirect\" title=\"Filterkern\">Filterkern</a> miteinander verrechnet um das Ergebnis zu bilden. Mit diesem Verfahren können zum Beispiel <a href=\"/wiki/Weichzeichnen\" title=\"Weichzeichnen\">Weichzeichnungsfilter</a> wie das Mittelwertfilter, <a href=\"/wiki/Gau%C3%9F-Filter\" title=\"Gauß-Filter\">Gauß-Filter</a> oder das Binomialfilter realisiert werden. Über Faltungsfilter können ebenso Kanten eines Bildes hervorgehoben werden mittels Ableitungsfilter oder <a href=\"/wiki/Laplace-Filter\" title=\"Laplace-Filter\">Laplace-Filter</a>. Die Nachbarschaftsoperationen sind jedoch nicht auf die Faltungsfilter begrenzt. Durch komplexere algorithmische Behandlung des Referenzpunktes und seiner Nachbarn können zum Beispiel weitere Verfahren zur Glättung wie das <a href=\"/wiki/Medianfilter\" class=\"mw-redirect\" title=\"Medianfilter\">Medianfilter</a>, oder zur Kantendetektion das <a href=\"/wiki/Extremalspannenfilter\" title=\"Extremalspannenfilter\">Extremalspannenfilter</a> oder der <a href=\"/wiki/Prewitt-Operator\" title=\"Prewitt-Operator\">Prewitt-Operator</a> realisiert werden. Aus <a href=\"/wiki/Morphologische_Bildverarbeitung\" class=\"mw-redirect\" title=\"Morphologische Bildverarbeitung\">morphologische Operatoren</a> wie zum Beispiel <i><a href=\"/wiki/Erosion_(Bildverarbeitung)\" title=\"Erosion (Bildverarbeitung)\">Erosion</a></i> und <i><a href=\"/wiki/Dilatation_(Bildverarbeitung)\" title=\"Dilatation (Bildverarbeitung)\">Dilatation</a></i>, lassen sich die Operationen <i><a href=\"/wiki/Opening_(Bildverarbeitung)\" title=\"Opening (Bildverarbeitung)\">Öffnen</a></i>, <i><a href=\"/wiki/Closing\" title=\"Closing\">Schließen</a></i> und somit eine <i>Morphologische Glättung</i> definieren. Während eine Glättung über relativ einfache Nachbarschaftsoperationen realisierbar ist, ist eine <a href=\"/wiki/Dekonvolution\" title=\"Dekonvolution\">Dekonvolution</a> und somit Schärfung des Bildes eine komplexere Aufgabe. Weder Punkt- noch Nachbarschaftsoperationen verändern ein Bild in seiner Größe oder seiner grundlegenden Struktur. Dies wird durch <i>geometrische Bilderoperationen</i> wie zum Beispiel der <a href=\"/wiki/Skalierung_(Computergrafik)\" title=\"Skalierung (Computergrafik)\">Skalierung</a>, Rotation oder Translation eines Bildes erreicht, wobei hier <a href=\"/wiki/Anisotropes_Filtern\" title=\"Anisotropes Filtern\">Anisotropes Filtern</a> notwendig ist und die <a href=\"/wiki/Interpolation_(Mathematik)\" title=\"Interpolation (Mathematik)\">Interpolation</a> ein entscheidendes Kriterium für die Bildqualität ist. Die geometrischen Bilderoperationen sind ein Teil der <i>globalen Bildoperationen</i>, welche das komplette Bild als Eingangsdaten verwenden. Ein weiterer Vertreter der globalen Bildoperationen ist die <a href=\"/wiki/Diskrete_Fourier-Transformation\" title=\"Diskrete Fourier-Transformation\">Fourier-Transformation</a>, wobei das Bild in dem Frequenzraum umgerechnet wird, in dem die Anwendung linearer Filter einen niedrigeren Aufwand bedeutet.\n</p><p>Der <a href=\"/wiki/Zeitkomplexit%C3%A4t\" title=\"Zeitkomplexität\">Zeitbedarf</a> der genannten Operationen ist ganz wesentlich von der <a href=\"/wiki/Bildaufl%C3%B6sung\" title=\"Bildauflösung\">Bildauflösung</a> abhängig.\n</p>"
          ]
        }
      ]
    },
    {
      "title": "HTML 5",
      "content": [
        {
          "tag_line": "Entstehung",
          "details": [
            "<p>Nach der Ver&ouml;ffentlichung der Spezifikation von HTML 4.0 im Dezember 1997 lag die Weiterentwicklung von HTML lange brach. Au&szlig;er der Version 4.01 im Dezember 1999, die lediglich Fehlerkorrekturen enth&auml;lt, gab es bis zum April 2009 keine Aktualisierungen der Auszeichnungssprache mehr. Das <a title=\"World Wide Web Consortium\" href=\"https://de.wikipedia.org/wiki/World_Wide_Web_Consortium\">World Wide Web Consortium</a> (W3C) setzte auf <a title=\"Extensible Markup Language\" href=\"https://de.wikipedia.org/wiki/Extensible_Markup_Language\">XML</a>, das zum Nachfolger von HTML werden sollte, und reformulierte HTML 4.01 zu der XML-basierten Auszeichnungssprache XHTML 1.0. Dabei blieb der Funktionsumfang von HTML 4.01 ohne &Auml;nderungen erhalten. Daraufhin begann das W3C mit der Entwicklung von XHTML 1.1 und sp&auml;ter von XHTML 2.0, das nicht mehr viel mit HTML 4.01 gemeinsam hatte. Dies f&uuml;hrte dazu, dass XHTML 1.1 und XHTML 2.0 durch diese Neuentwicklungen nicht mehr abw&auml;rtskompatibel waren. Au&szlig;erdem war die Erstellung von XHTML-2.0-Dokumenten in vielen Punkten im Vergleich zu HTML sehr schwer und erforderte viel Hintergrundwissen. Die Entwicklung von <a title=\"Cascading Style Sheets\" href=\"https://de.wikipedia.org/wiki/Cascading_Style_Sheets\">CSS</a> verlief zu diesem Zeitpunkt ebenfalls nur sehr langsam, weshalb das W3C immer mehr in die Kritik geriet.</p>\n<p>Um diesen Entwicklungen entgegenzuwirken, ver&ouml;ffentlichte die von mehreren Browserherstellern gegr&uuml;ndete <a title=\"Web Hypertext Application Technology Working Group\" href=\"https://de.wikipedia.org/wiki/Web_Hypertext_Application_Technology_Working_Group\">Web Hypertext Application Technology Working Group</a> (WHATWG) Mitte 2004 unter dem Namen <em>Web Applications 1.0</em> den ersten Vorschlag f&uuml;r HTML5.</p>\n<p>Am 27. Oktober 2006 k&uuml;ndigte <a title=\"Tim Berners-Lee\" href=\"https://de.wikipedia.org/wiki/Tim_Berners-Lee\">Tim Berners-Lee</a>, der Gr&uuml;nder und Vorsitzende des World Wide Web Consortiums, eine neue Arbeitsgruppe mit dem Ziel der Weiterentwicklung von HTML an.<sup id=\"cite_ref-4\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-4\">[4]</a></sup> Das W3C nutzte als Grundlage f&uuml;r seine Arbeit an HTML5 einen <a title=\"Abspaltung (Softwareentwicklung)\" href=\"https://de.wikipedia.org/wiki/Abspaltung_(Softwareentwicklung)\">Fork</a> der Version der WHATWG. Damit schuf sich das W3C Konkurrenz im eigenen Haus, da dieses ebenfalls schon die Entwicklung von <a title=\"Extensible Hypertext Markup Language\" href=\"https://de.wikipedia.org/wiki/Extensible_Hypertext_Markup_Language\">XHTML</a> 2.0, einem rein XML-basierten Format zur Webseitenauszeichnung, vorantrieb.</p>\n<p>Um die Konkurrenz innerhalb des W3C abzumildern, wurden zwischen November 2006 und M&auml;rz 2007 die vorhandenen Arbeitsgruppen beim W3C umgestaltet. HTML5 und XHTML 2.0 wurden als verwandte Sprachen mit unterschiedlichen Zielgruppen definiert.<sup id=\"cite_ref-ArchitecturalVision_5-0\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-ArchitecturalVision-5\">[5]</a></sup></p>\n<p>Im Mai 2007 entschieden die Mitglieder der HTML-Arbeitsgruppe in einer Abstimmung, dass der Web-Applications-1.0-Entwurf der WHATWG als Startpunkt zur Diskussion und Weiterentwicklung von <a title=\"Hypertext Markup Language\" href=\"https://de.wikipedia.org/wiki/Hypertext_Markup_Language\">HTML</a> verwendet werden soll.<sup id=\"cite_ref-6\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-6\">[6]</a></sup><sup id=\"cite_ref-7\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-7\">[7]</a></sup> Seitdem arbeiten das W3C und die WHATWG gemeinsam an der HTML5-Spezifikation.</p>\n<p>Mitte 2009 gab das W3C bekannt, dass die Entwicklung von XHTML 2.0 mit Ende desselben Jahres nicht mehr weitergef&uuml;hrt werde.<sup id=\"cite_ref-8\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-8\">[8]</a></sup> Die n&auml;chste Generation der Auszeichnungssprachen f&uuml;r das Web ist damit keine neue Variante von XHTML, sondern HTML5.</p>\n<h3><span id=\"Verschiedene_Arbeitsmodelle_von_W3C_und_WHATWG\" class=\"mw-headline\">Verschiedene Arbeitsmodelle von W3C und WHATWG</span></h3>\n<p>Die WHATWG verfolgt ein versionsloses Modell der Entwicklung. Sie arbeitet an einem sogenannten <em>Living Standard</em>, also einer Spezifikation, die einer st&auml;ndigen Korrektur und Erweiterung unterliegt.<sup id=\"cite_ref-9\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-9\">[9]</a></sup> Daher verzichtet die WHATWG auf die Versionsangabe &bdquo;5&ldquo; und spricht nur noch vom &bdquo;HTML-Standard&ldquo;.<sup id=\"cite_ref-10\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-10\">[10]</a></sup></p>\n<p>Ziel der HTML-Arbeitsgruppe des W3C ist es dagegen, eine stabile Momentaufnahme dieser Spezifikation unter dem Namen HTML5 zu publizieren. Dazu wird ein vordefiniertes Prozedere durchlaufen, bis die Spezifikation schlie&szlig;lich zu einer W3C-Empfehlung <em>(Recommendation)</em> heranreift.<sup id=\"cite_ref-11\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-11\">[11]</a></sup> Die Vorstufe davon, eine <em>Proposed Recommendation</em> wurde im September 2014 ver&ouml;ffentlicht<sup id=\"cite_ref-12\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-12\">[12]</a></sup>, die Empfehlung schlie&szlig;lich am 28. Oktober 2014.<sup id=\"cite_ref-:0_2-1\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-:0-2\">[2]</a></sup></p>\n<h3><span id=\"Verh.C3.A4ltnis_der_Spezifikationen_des_W3C_und_der_WHATWG\"></span><span id=\"Verh&auml;ltnis_der_Spezifikationen_des_W3C_und_der_WHATWG\" class=\"mw-headline\">Verh&auml;ltnis der Spezifikationen des W3C und der WHATWG</span></h3>\n<div class=\"thumbinner\" style=\"width: 222px;\"><a class=\"image\" href=\"https://de.wikipedia.org/wiki/Datei:HTML5-Spezifikations-%C3%9Cbersicht.svg\"><img class=\"thumbimage\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/19/HTML5-Spezifikations-%C3%9Cbersicht.svg/220px-HTML5-Spezifikations-%C3%9Cbersicht.svg.png\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/1/19/HTML5-Spezifikations-%C3%9Cbersicht.svg/330px-HTML5-Spezifikations-%C3%9Cbersicht.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/1/19/HTML5-Spezifikations-%C3%9Cbersicht.svg/440px-HTML5-Spezifikations-%C3%9Cbersicht.svg.png 2x\" alt=\"\" width=\"220\" height=\"179\" data-file-width=\"1280\" data-file-height=\"1040\" /></a>\n<div class=\"thumbcaption\">&nbsp;</div>\n</div>\n<div class=\"thumb tright\">\n<div class=\"thumbinner\" style=\"width: 222px;\">\n<div class=\"thumbcaption\">Verh&auml;ltnis von Webtechnologie-Spezifikationen im Umfeld von HTML5</div>\n</div>\n</div>\n<p>Der Verfasser (engl. <em>editor</em>) der Spezifikation ist <a class=\"new\" title=\"Ian Hickson (Seite nicht vorhanden)\" href=\"https://de.wikipedia.org/w/index.php?title=Ian_Hickson&amp;action=edit&amp;redlink=1\">Ian Hickson</a>,<sup id=\"cite_ref-13\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-13\">[13]</a></sup> Gr&uuml;nder der WHATWG und Angestellter von <a title=\"Google\" href=\"https://de.wikipedia.org/wiki/Google\">Google</a>.<sup id=\"cite_ref-14\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-14\">[14]</a></sup> Aus dem von ihm bearbeiteten Rohtext werden verschiedene Spezifikationen generiert, sowohl die auf Seiten der WHATWG als auch die W3C-Pendants.</p>\n<p>Die WHATWG-HTML-Spezifikation integriert mehrere verwandte Teilspezifikationen, welche seitens des W3C in einzelne Dokumente aufgeteilt werden.<sup id=\"cite_ref-15\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-15\">[15]</a></sup> Sie k&ouml;nnen damit unabh&auml;ngig von der HTML5-Hauptspezifikation den W3C-Entwicklungsprozess durchlaufen. Diese separaten Standards sind <a href=\"https://de.wikipedia.org/wiki/HTML5#HTML_Microdata\">Microdata</a>-Metadaten, der 2D-Zeichenkontext des <a title=\"Canvas (HTML-Element)\" href=\"https://de.wikipedia.org/wiki/Canvas_(HTML-Element)\">Canvas-Elementes</a> sowie dokument&uuml;bergreifende Nachrichten (HTML5 Web Messaging).</p>\n<h3><span id=\"W3C-Ver.C3.B6ffentlichungen\"></span><span id=\"W3C-Ver&ouml;ffentlichungen\" class=\"mw-headline\">W3C-Ver&ouml;ffentlichungen</span></h3>\n<p>Im Folgenden sind die Ver&ouml;ffentlichungen der HTML5-Entw&uuml;rfe durch das W3C aufgef&uuml;hrt. Neben den regelm&auml;&szlig;igen Arbeitsentw&uuml;rfen <em>(Working Drafts)</em> ver&ouml;ffentlicht das W3C in Abst&auml;nden von Tagen sogenannte <em>Editor&rsquo;s Drafts</em>. Die jeweils tagesaktuelle Fassung des Entwurfs &ndash;&nbsp;erweitert um WHATWG-spezifische Elemente&nbsp;&ndash; ist auf der Webseite der WHATWG verf&uuml;gbar.</p>\n<table class=\"wikitable zebra sortable jquery-tablesorter\">\n<thead>\n<tr>\n<th class=\"headerSort\" style=\"width: 10em;\" tabindex=\"0\" title=\"Aufsteigend sortieren\" role=\"columnheader button\">Datum</th>\n<th class=\"headerSort\" tabindex=\"0\" title=\"Aufsteigend sortieren\" role=\"columnheader button\">Ver&ouml;ffentlichung (und Hinweise)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\">22. Januar 2008</td>\n<td>1. &bdquo;Working Draft&ldquo; (Arbeitsentwurf)<sup id=\"cite_ref-16\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-16\">[16]</a></sup></td>\n</tr>\n<tr>\n<td align=\"right\">10. Juni 2008</td>\n<td>2. Arbeitsentwurf, in den der bis dahin separate Web-Forms-2.0-Entwurf eingearbeitet wurde.</td>\n</tr>\n<tr>\n<td align=\"right\">12. Februar 2009</td>\n<td>3. Arbeitsentwurf</td>\n</tr>\n<tr>\n<td align=\"right\">23. April 2009</td>\n<td>4. Arbeitsentwurf</td>\n</tr>\n<tr>\n<td align=\"right\">25. August 2009</td>\n<td>5. Arbeitsentwurf</td>\n</tr>\n<tr>\n<td align=\"right\">4. M&auml;rz 2010</td>\n<td>6. Arbeitsentwurf. HTML Canvas 2D<sup id=\"cite_ref-17\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-17\">[17]</a></sup> und HTML Microdata<sup id=\"cite_ref-18\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-18\">[18]</a></sup> als eigene Arbeitsentw&uuml;rfe ausgelagert. Neues Dokument &bdquo;HTML: The Markup Language&ldquo;.<sup id=\"cite_ref-19\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-19\">[19]</a></sup></td>\n</tr>\n<tr>\n<td align=\"right\">25. Juni 2010</td>\n<td>7. Arbeitsentwurf und &Uuml;berarbeitung der verwandten Spezifikationen und Dokumente. Neu hinzugef&uuml;gt wurden die unterst&uuml;tzenden Dokumente HTML5: Techniques for providing useful text alternatives<sup id=\"cite_ref-20\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-20\">[20]</a></sup> und Polyglot Markup: HTML-Compatible XHTML Documents.<sup id=\"cite_ref-21\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-21\">[21]</a></sup></td>\n</tr>\n<tr>\n<td align=\"right\">19. Oktober 2010</td>\n<td>8. Arbeitsentwurf</td>\n</tr>\n<tr>\n<td align=\"right\">18. November 2010</td>\n<td>1. Arbeitsentwurf von &bdquo;HTML5 Web Messaging&ldquo;.<sup id=\"cite_ref-22\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-22\">[22]</a></sup></td>\n</tr>\n<tr>\n<td align=\"right\">13. Januar 2011</td>\n<td>9. Arbeitsentwurf</td>\n</tr>\n<tr>\n<td align=\"right\">5. April 2011</td>\n<td>10. Arbeitsentwurf</td>\n</tr>\n<tr>\n<td align=\"right\">25. Mai 2011</td>\n<td>11. Arbeitsentwurf</td>\n</tr>\n<tr>\n<td align=\"right\">29. M&auml;rz 2012</td>\n<td>12. Arbeitsentwurf</td>\n</tr>\n<tr>\n<td align=\"right\">25. Oktober 2012</td>\n<td>13. Arbeitsentwurf</td>\n</tr>\n<tr>\n<td align=\"right\">17. Dezember 2012</td>\n<td>Candidate Recommendation (Empfehlungs-Kandidat)</td>\n</tr>\n<tr>\n<td align=\"right\">6. August 2013</td>\n<td>Candidate Recommendation (Empfehlungs-Kandidat)</td>\n</tr>\n<tr>\n<td align=\"right\">4. Februar 2014</td>\n<td>Candidate Recommendation (Empfehlungs-Kandidat)</td>\n</tr>\n<tr>\n<td align=\"right\">29. April 2014</td>\n<td>Candidate Recommendation (Empfehlungs-Kandidat)</td>\n</tr>\n<tr>\n<td align=\"right\">17. Juni 2014</td>\n<td>Letzter Arbeitsentwurf</td>\n</tr>\n<tr>\n<td align=\"right\">31. Juli 2014</td>\n<td>Candidate Recommendation (Empfehlungs-Kandidat)</td>\n</tr>\n<tr>\n<td align=\"right\">16. September 2014</td>\n<td>Proposed Recommendation (Empfehlungs-Vorschlag)</td>\n</tr>\n<tr>\n<td align=\"right\">28. Oktober 2014</td>\n<td>Recommendation (Empfehlung)<sup id=\"cite_ref-:0_2-2\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-:0-2\">[2]</a></sup></td>\n</tr>\n</tbody>\n<tfoot></tfoot>\n</table>\n<h3><span id=\"Fortschritt_in_der_Entwicklung\" class=\"mw-headline\">Fortschritt in der Entwicklung</span></h3>\n<p>In der Spezifikation der WHATWG wird darauf hingewiesen, dass bestimmte Abschnitte ausgereifter sind als andere. Von den reiferen Neuentwicklungen sind viele bereits in aktuellen Browserversionen enthalten und k&ouml;nnen verwendet werden.<sup id=\"cite_ref-23\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-23\">[23]</a></sup></p>\n<p>Im Mai 2011 erhielt HTML5 beim W3C den Status &bdquo;Last Call&ldquo;, der als letzte Aufforderung dienen sollte, Kommentare zum HTML5-Entwurf einzureichen.<sup id=\"cite_ref-24\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-24\">[24]</a></sup> Die WHATWG hat den Status &bdquo;Last Call&ldquo; bereits am 27. Oktober 2009 ausgerufen.<sup id=\"cite_ref-25\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-25\">[25]</a></sup> Am 28. Oktober 2014 hat die W3C die HTML5-Empfehlung ver&ouml;ffentlicht.<sup id=\"cite_ref-:0_2-3\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-:0-2\">[2]</a></sup> In den meisten Browsern ist HTML5 bereits (wenn auch unvollst&auml;ndig) implementiert.</p>"
          ]
        },
        {
          "tag_line": "Ziele",
          "details": [
            "<p>Die ersten wichtigen Ziele f&uuml;r HTML5 wurden von Tim Berners-Lee in dessen Blogeintrag &bdquo;Reinventing HTML&ldquo; (HTML neu erfinden) festgelegt:<sup id=\"cite_ref-26\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-26\">[26]</a></sup> An der Entwicklung sollen dabei vor allem auch die Gruppen beteiligt sein, die HTML verwenden (Webautoren, Hersteller von Browsern). Dabei muss HTML inkrementell, also durch &Uuml;berarbeitung und Erweiterung der Vorversion, entwickelt werden, und der &Uuml;bergang zu wohlgeformten Dokumenten soll dadurch weiter vorangetrieben werden. Die Entwicklung von Formularen in HTML soll erweitert werden und im Idealfall einen Schritt von der bestehenden Formularstruktur hin zu <a title=\"XForms\" href=\"https://de.wikipedia.org/wiki/XForms\">XForms</a> bilden.</p>\n<p>Im Zuge der Einrichtung der neuen HTML-Arbeitsgruppe<sup id=\"cite_ref-27\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-27\">[27]</a></sup> und als Teil der architektonischen Vision f&uuml;r HTML, XForms und XHTML 2.0<sup id=\"cite_ref-ArchitecturalVision_5-1\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-ArchitecturalVision-5\">[5]</a></sup> wurden diese Ziele detaillierter festgelegt, teilweise ver&auml;ndert und um weitere Punkte erg&auml;nzt:</p>\n<ul>\n<li>Im Gegensatz zur bisherigen Vorgehensweise, in jeder Spezifikation nur die Unterschiede zu einer alten Version abzubilden, soll eine vollst&auml;ndige Spezifikation geschrieben werden.</li>\n<li>Das Vokabular von HTML muss als klassisches HTML und als XML-Dialekt verfasst werden k&ouml;nnen. Unabh&auml;ngig von dieser Form muss das Vokabular in ein definiertes Infoset, das hei&szlig;t in eine <a title=\"Document Object Model\" href=\"https://de.wikipedia.org/wiki/Document_Object_Model\">DOM</a>-Abbildung des Quelltextes umgesetzt werden k&ouml;nnen.</li>\n</ul>\n<p>Zus&auml;tzlich wurden zum Aufgabenbereich der Arbeitsgruppe die Definition von DOM-Schnittstellen f&uuml;r die Arbeit mit dem HTML-Vokabular sowie eine separate mit eingebundenen Medien festgelegt. Die Arbeitsgruppe soll Formulare und allgemeine Benutzereingabeelemente wie Fortschrittsanzeigen oder Men&uuml;s entwickeln und Schnittstellen f&uuml;r benutzerdefinierte WYSIWYG-Bearbeitungsfunktionen definieren.</p>\n<p>Nach Gr&uuml;ndung der Arbeitsgruppe wurden die HTML-Gestaltungsprinzipien<sup id=\"cite_ref-28\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-28\">[28]</a></sup> als erstes Dokument ver&ouml;ffentlicht. Darin werden weitere Zielsetzungen ausf&uuml;hrlich erl&auml;utert. Dazu geh&ouml;ren etwa:</p>\n<dl>\n<dt>Kompatibilit&auml;t</dt>\n<dd>Bestehender Inhalt muss weiterhin unterst&uuml;tzt werden. Neue Elemente der Sprache d&uuml;rfen den bestehenden Inhalt nicht negativ beeinflussen.</dd>\n<dt>Verwendbarkeit</dt>\n<dd>Neue Funktionen sollen echte Probleme l&ouml;sen, und dies vorrangig f&uuml;r Autoren, dann Browserhersteller und zuletzt der &bdquo;reinen Lehre&ldquo; dienend; Funktionen jedoch, die bereits einen bestimmten Zweck erf&uuml;llen, sollen nicht neu erfunden werden.</dd>\n<dt>Sicherheit</dt>\n<dd>Bei der Entwicklung neuer Funktionen m&uuml;ssen Sicherheitsaspekte ber&uuml;cksichtigt werden.</dd>\n<dt>Konsistenz</dt>\n<dd>Teile aus XML, die in XHTML Anwendung finden, sollen auch in HTML erlaubt werden. HTML und XHTML besitzen eine gemeinsame DOM-Abbildung.</dd>\n<dt>Vereinfachung</dt>\n<dd>Durch genau definiertes Verhalten (auch in Fehlersituationen) und geringe Komplexit&auml;t soll HTML interoperabel implementiert werden k&ouml;nnen.</dd>\n<dt>Universalit&auml;t</dt>\n<dd>HTML soll auf allen Endger&auml;ten und mit Inhalt in allen Weltsprachen verwendbar sein.</dd>\n<dt>Barrierefreiheit</dt>\n<dd>Die <a title=\"Barrierefreiheit\" href=\"https://de.wikipedia.org/wiki/Barrierefreiheit\">Barrierefreiheit</a> von Inhalt und Funktion soll gew&auml;hrleistet sein.</dd>\n</dl>"
          ]
        },
        {
          "tag_line": "Aufbau",
          "details": [
            "<p>HTML5, so wie es das W3C definiert, besteht insgesamt aus mehreren Spezifikationen und Dokumenten, deren Inhalt im folgenden Abschnitt erl&auml;utert wird.</p>\n<h3><span id=\"HTML5_.E2.80.93_Ein_Vokabular_und_dazugeh.C3.B6rige_Schnittstellen_f.C3.BCr_HTML_und_XHTML\"></span><span id=\"HTML5_&ndash;_Ein_Vokabular_und_dazugeh&ouml;rige_Schnittstellen_f&uuml;r_HTML_und_XHTML\" class=\"mw-headline\">HTML5 &ndash; Ein Vokabular und dazugeh&ouml;rige Schnittstellen f&uuml;r HTML und XHTML</span></h3>\n<p>&bdquo;HTML5&ldquo; ist die Hauptspezifikation, in der die wichtigsten Grundlagen von HTML5 enthalten sind.</p>\n<h4><span id=\"Vokabular\" class=\"mw-headline\">Vokabular</span></h4>\n<p>Das Vokabular von HTML5 setzt sich aus dem Vokabular vorangehender HTML-Spezifikationen, bis dato propriet&auml;ren Bestandteilen sowie einigen neuen Elementen zusammen, darunter z.&nbsp;B. Teile der <a title=\"Ruby Annotation\" href=\"https://de.wikipedia.org/wiki/Ruby_Annotation\">Ruby</a>-Elementgruppe, die in XHTML 1.1 eingef&uuml;hrt wurden. Es umfasst dabei aber nur den Teil von HTML, den Autoren f&uuml;r das Erstellen von Dokumenten und Webanwendungen benutzen d&uuml;rfen.</p>\n<p>Neben dem Vokabular wird ein klares Strukturmodell definiert, also die Regeln, nach denen die verschiedenen Elemente ineinander verschachtelt werden d&uuml;rfen.</p>\n<h4><span id=\"HTML-Parser\" class=\"mw-headline\">HTML-Parser</span></h4>\n<p>Erstmals seit der Entstehung von HTML wird die Sprache nicht mehr als eine Anwendung von <a class=\"mw-redirect\" title=\"SGML\" href=\"https://de.wikipedia.org/wiki/SGML\">SGML</a>, sondern selbst als eine generalisierte Sprache in der Art von SGML definiert. Dies wird damit begr&uuml;ndet, dass moderne Browser HTML nicht mit einem SGML-Parser, sondern einem f&uuml;r das Web passenden <a title=\"Parser\" href=\"https://de.wikipedia.org/wiki/Parser\">Parser</a> verarbeiten.</p>\n<p>Wie diese Parser funktionieren, ist derzeit nicht definiert. HTML5 will dies durch die Definition eines HTML-Parsers &auml;ndern und so vermeiden, dass es Unterschiede zwischen den HTML-Parsern der verschiedenen Browserhersteller gibt.</p>\n<p>Das Besondere an dem in HTML5 enthaltenen Parser ist, dass er nicht nur das erlaubte Vokabular versteht, sondern auch alle anderen Elemente, die in fr&uuml;heren Versionen vorhanden waren oder nur als propriet&auml;re Elemente existierten. Durch diese genaue Definition will HTML5 sicherstellen, dass der Parser zu den im Web vorhandenen Dokumenten r&uuml;ckw&auml;rtskompatibel ist.</p>\n<h4><span id=\"HTML.2C_XHTML_und_DOM\"></span><span id=\"HTML,_XHTML_und_DOM\" class=\"mw-headline\">HTML, XHTML und DOM</span></h4>\n<p>Jedes Element und Attribut, das in HTML5 bekannt ist, ist in den Begriffen des Dokumentobjektmodells definiert. Das gilt unabh&auml;ngig davon, ob das Element oder Attribut ein erlaubter Sprachbestandteil ist. Das bedeutet, dass neben der strukturellen Bedeutung der Elemente auch deren DOM-Interface sowie die damit verbundenen Schnittstellen (Methoden und Eigenschaften) definiert werden.</p>\n<p>Auf Basis dieser Definition erlaubt HTML5 die Repr&auml;sentierung von Dokumenten in drei Varianten:</p>\n<ul>\n<li>Dokumente, die den Medientyp &bdquo;<code>text/html</code>&ldquo; besitzen, gelten als HTML-Dokumente. Sie werden mit dem HTML-Parser verarbeitet. Diese Variante wird umgangssprachlich als HTML5 bezeichnet.</li>\n<li>Dokumente, die einen XML-Medientyp &ndash;&nbsp;z.&nbsp;B. &bdquo;<code>application/xhtml+xml</code>&ldquo; oder &bdquo;<code>application/xml</code>&ldquo;&nbsp;&ndash; besitzen, gelten als XML-Dokumente, die von einem XML-Parser verarbeitet werden. Diese Variante wird umgangssprachlich als XHTML5 bezeichnet.</li>\n<li>Die vorherigen Dokumente besitzen ein gemeinsames Dokumentobjektmodell. Das <a title=\"Document Object Model\" href=\"https://de.wikipedia.org/wiki/Document_Object_Model\">DOM</a> wird in diesem Zusammenhang oft DOM5 genannt.</li>\n</ul>\n<p>HTML5 versucht, die Unterschiede zwischen diesen drei Varianten auf die der jeweiligen Form innewohnenden Beschr&auml;nkungen einzugrenzen. Beispielsweise ist die Zeichenkette &bdquo;<code>--&gt;</code>&ldquo; innerhalb von HTML und XML ung&uuml;ltig, im DOM kann sie jedoch dargestellt werden.</p>\n<p>Ein anderes Beispiel ist der Versuch, die Unterschiede zwischen HTML und XHTML zu verringern: Die Kernspezifikation des DOM sagt aus, dass HTML-Elemente im null-Namensraum enthalten sind (w&auml;hrend XHTML-Elemente dem Namensraum &bdquo;http://www.w3.org/1999/xhtml&ldquo; angeh&ouml;ren). HTML5 definiert jedoch, dass auch HTML-Elemente dem Namensraum &bdquo;http://www.w3.org/1999/xhtml&ldquo; zuzuordnen sind.</p>\n<h4><span id=\"Standarddarstellung\" class=\"mw-headline\">Standarddarstellung</span></h4>\n<p>HTML5 versucht, die Erwartung von Autoren an die Standarddarstellung der Elemente wiederzugeben. F&uuml;r alle Elemente und deren Attribute gibt es daher eine &bdquo;erwartete Darstellung&ldquo;, die durch CSS-Eigenschaften definiert wird. HTML5 unterscheidet dabei zwischen Darstellungseigenschaften, die bei der standardkonformen und der kompatibilit&auml;tsorientierten Verarbeitung von Webseiten angewendet werden sollen.</p>\n<h4><span id=\"Browserkontext\" class=\"mw-headline\">Browserkontext</span></h4>\n<p>HTML5 f&uuml;hrt das Konzept eines Browserkontextes ein: in jedem Browserkontext wird ein Dokument geladen bzw. weitere Browserkontexte (im Fall von Frames) erzeugt. Zu den Bestandteilen eines Browserkontextes geh&ouml;ren gro&szlig;teils JavaScript-Objekte, die zuvor keinem Standard angeh&ouml;rten, z.&nbsp;B. das History-Objekt, in dem die Abfolge der besuchten Webseiten gespeichert wird. Dadurch wird versucht, das Verhalten der Browser zu vereinheitlichen und einer gemeinsamen Definition zu unterwerfen.</p>\n<h3><span id=\"HTML_Microdata\" class=\"mw-headline\">HTML Microdata</span></h3>\n<p>Diese Spezifikation versucht, das Einbinden maschinenlesbarer Informationen in HTML-Dokumente zu definieren. Ziel dabei ist, dass dieser Mechanismus eindeutig definiert und zu anderen Formaten wie <a title=\"Resource Description Framework\" href=\"https://de.wikipedia.org/wiki/Resource_Description_Framework\">RDF</a> und <a title=\"JavaScript Object Notation\" href=\"https://de.wikipedia.org/wiki/JavaScript_Object_Notation\">JSON</a> kompatibel ist.</p>\n<h3><span id=\"HTML-Canvas-2D-Kontext\" class=\"mw-headline\">HTML-Canvas-2D-Kontext</span></h3>\n<p>In dieser Spezifikation werden Schnittstellen zum Zeichnen zweidimensionaler Formen festgelegt. Als Zeichenoberfl&auml;che dient das in der Hauptspezifikation eingef&uuml;hrte <a title=\"Canvas (HTML-Element)\" href=\"https://de.wikipedia.org/wiki/Canvas_(HTML-Element)\">Canvas-Element</a>.</p>\n<p>Gezeichnet werden k&ouml;nnen Linien, Schatten, einfache und komplexe Konturen (Pfade) sowie Texte und im Dokument enthaltene Bilder.</p>\n<h3><span id=\"HTML5-Nachrichten.C3.BCbermittlung\"></span><span id=\"HTML5-Nachrichten&uuml;bermittlung\" class=\"mw-headline\">HTML5-Nachrichten&uuml;bermittlung</span></h3>\n<p>Dieser Arbeitsentwurf definiert zwei Methoden, die es voneinander unabh&auml;ngigen Browserkontexten erlauben sollen, miteinander Daten auszutauschen:</p>\n<ul>\n<li>&bdquo;Cross-document messaging&ldquo;, das die Kommunikation von ineinander eingebetteten Dokumenten (z.&nbsp;B. &uuml;ber iframes) erm&ouml;glichen soll, und</li>\n<li>&bdquo;Channel messaging&ldquo;, das die Kommunikation f&uuml;r voneinander unabh&auml;ngige Dokumente (z.&nbsp;B. getrennt durch zwei verschiedene Browserfenster) erm&ouml;glichen will.</li>\n</ul>\n<h3><span id=\"HTML.2BRDFa_.E2.80.93_Ein_Mechanismus_zum_Einbetten_von_RDF_in_HTML\"></span><span id=\"HTML+RDFa_&ndash;_Ein_Mechanismus_zum_Einbetten_von_RDF_in_HTML\" class=\"mw-headline\">HTML+RDFa &ndash; Ein Mechanismus zum Einbetten von RDF in HTML</span></h3>\n<p>Das Dokument adaptiert die Einbettung von <a title=\"Resource Description Framework\" href=\"https://de.wikipedia.org/wiki/Resource_Description_Framework\">RDF</a> in XHTML f&uuml;r Dokumente, wie sie in HTML5 definiert sind.</p>\n<h3><span id=\"Unterst.C3.BCtzende_Dokumente\"></span><span id=\"Unterst&uuml;tzende_Dokumente\" class=\"mw-headline\">Unterst&uuml;tzende Dokumente</span></h3>\n<h4><span id=\"HTML:_Die_Auszeichnungssprache\" class=\"mw-headline\">HTML: Die Auszeichnungssprache</span></h4>\n<p>Bei &bdquo;HTML: Die Auszeichnungssprache&ldquo; handelt es sich um keine Spezifikation, sondern um ein unterst&uuml;tzendes Dokument, das die Auszeichnungssprache HTML genauer beschreibt. Es will Autoren Details &uuml;ber die korrekte Verwendung der Sprache n&auml;her bringen, dabei aber kein Tutorium oder Handbuch darstellen. Das Dokument macht keine Aussagen &uuml;ber Definitionen oder wie HTML verarbeitet werden sollte.</p>\n<h4><span id=\"Unterschiede_zwischen_HTML5_und_HTML4\" class=\"mw-headline\">Unterschiede zwischen HTML5 und HTML4</span></h4>\n<p>In diesem Dokument werden die Unterschiede zwischen HTML4 (genauer: HTML 4.01 und in Teilen XHTML 1.0 sowie DOM Level 2 HTML) und HTML5 aufgef&uuml;hrt und Begr&uuml;ndungen f&uuml;r die &Auml;nderungen gegeben. Das Dokument wird jeweils bei Ver&ouml;ffentlichung eines neuen Arbeitsentwurfs der Hauptspezifikation aktualisiert und ver&ouml;ffentlicht.</p>\n<h4><span id=\"HTML5-Techniken_f.C3.BCr_n.C3.BCtzliche_Textalternativen\"></span><span id=\"HTML5-Techniken_f&uuml;r_n&uuml;tzliche_Textalternativen\" class=\"mw-headline\">HTML5-Techniken f&uuml;r n&uuml;tzliche Textalternativen</span></h4>\n<p>Dieser entstehende Leitfaden f&uuml;r HTML-Autoren beschreibt, welche Alternativtexte f&uuml;r Bilder (vor allem im <code>alt</code>-Attribut des <code>img</code>-Elements) zu w&auml;hlen sind. Diese sind wichtig, damit die Inhalte, die durch Bilder transportiert werden, auch f&uuml;r beispielsweise blinde Webnutzer zug&auml;nglich sind.</p>\n<h4><span id=\".E2.80.9EPolyglottes.E2.80.9C_Markup:_HTML-kompatible_XHTML-Dokumente\"></span><span id=\"&bdquo;Polyglottes&ldquo;_Markup:_HTML-kompatible_XHTML-Dokumente\" class=\"mw-headline\">&bdquo;Polyglottes&ldquo; Markup: HTML-kompatible XHTML-Dokumente</span></h4>\n<p>Das Dokument beschreibt Regeln f&uuml;r HTML5-Dokumente, welche in XHTML-Syntax verfasst sind und somit sowohl von HTML5-Parsern als auch von XML-Parsern verarbeitet werden k&ouml;nnen.</p>"
          ]
        },
        {
          "tag_line": "Technische Neuerungen",
          "details": [
            "<p>Die nachfolgende &Uuml;bersicht der Neuerungen in HTML5 erhebt keinen Anspruch auf Vollst&auml;ndigkeit und unterliegt durch den Status der Spezifikationen bedingt Ver&auml;nderungen.</p>\n<p>Grundlegend l&auml;sst sich vorweg sagen, dass praktisch alle Elemente aus HTML 4.01 auch in HTML5 enthalten sind. HTML4 ist sogesehen eine Teilmenge von HTML5.</p>\n<h3><span id=\"Dokumenttypangabe\" class=\"mw-headline\">Dokumenttypangabe</span></h3>\n<p>Die Dokumenttypangabe in HTML5-Dokumenten besteht aus der Zeichenkette &bdquo;<code>&lt;!DOCTYPE html&gt;</code>&ldquo;,<sup id=\"cite_ref-diff_3-1\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-diff-3\">[3]</a></sup> wobei Gro&szlig;- und Kleinschreibung keine Rolle spielen. Diese Zeichenkette bewirkt in allen modernen Browsern das Verarbeiten des Quelltextes im standardkonformen Modus.</p>\n<p>Da ein Browser HTML-Dokumente nicht nach ihrer Version unterscheidet, wurde bewusst auf jede Art von Versionierung verzichtet. Auch hier zeigt sich, dass HTML5 sich als Obermenge von HTML 4.01 definiert.</p>\n<h3><span id=\"Einbindung_von_SVG_und_MathML\" class=\"mw-headline\">Einbindung von SVG und MathML</span></h3>\n<p>HTML5 erm&ouml;glicht das einfache Einbinden von <a class=\"mw-redirect\" title=\"SVG\" href=\"https://de.wikipedia.org/wiki/SVG\">SVG</a> und <a class=\"mw-redirect\" title=\"MathML\" href=\"https://de.wikipedia.org/wiki/MathML\">MathML</a> in den HTML-Quelltext. Es bestehen nur zwei Einschr&auml;nkungen:</p>\n<ul>\n<li>Die Elemente d&uuml;rfen keine Namensraumpr&auml;fixe enthalten.</li>\n<li>Der Namensraumpr&auml;fix f&uuml;r XLink (bei Attributen) muss &bdquo;xlink&ldquo; lauten.</li>\n</ul>\n<p>Als Nebeneffekt sind alle benannten Entit&auml;ten aus SVG und MathML als Teil von HTML erlaubt.</p>\n<h3><span id=\"Neue_Elemente\" class=\"mw-headline\">Neue Elemente</span></h3>\n<p>HTML5 f&uuml;hrt zahlreiche neue Elemente ein, die nachfolgend vorgestellt werden.</p>\n<h4><span id=\"Strukturierende_Elemente\" class=\"mw-headline\">Strukturierende Elemente</span></h4>\n<p>Die Elemente <code>section</code>, <code>nav</code>, <code>article</code>, <code>aside</code>, <code>header</code> und <code>footer</code> sollen eine bessere Strukturierung erm&ouml;glichen. Anders als <code>div</code>-K&auml;sten, die bislang zur Strukturierung von HTML-Dokumenten verwendet wurden, wird durch das Element hier auch definiert, welche Art von Inhalt sich in dem Element befindet. Zum Beispiel bezeichnet <code>section</code> einen Abschnitt eines durchg&auml;ngigen Textes, <code>nav</code> ein Men&uuml;, <code>article</code> einen Artikel oder <code>footer</code> einen Seitenfu&szlig;.</p>\n<p>In einer Untersuchung des Suchmaschinenanbieters Google wurde festgestellt, dass die am h&auml;ufigsten vergebenen Klassennamen in HTML-Dokumenten sich gut den jeweiligen neuen HTML-Elementen zuordnen lassen.<sup id=\"cite_ref-29\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-29\">[29]</a></sup></p>\n<p>Einige dieser Elemente (<code>section</code>, <code>nav</code>, <code>article</code> und <code>aside</code>) bringen auch eine Funktion in der Kombination mit den &Uuml;berschriftenelementen <code>h1</code> bis <code>h6</code>. Die &Uuml;berschriftenhierarchie wird nicht mehr nur allein anhand der &Uuml;berschriftenelemente bestimmt, sondern auch anhand derer Position innerhalb der neuen Elemente. Verwendet ein Dokument beispielsweise eine &Uuml;berschrift erster Ordnung und nutzt dann in einem Artikelelement ebenfalls eine &Uuml;berschrift erster Ordnung, so ist diese der nicht-verschachtelten &Uuml;berschrift untergeordnet. Das gilt selbst dann, wenn die nicht-verschachtelte &Uuml;berschrift niedrigerer Ordnung ist.</p>\n<p>Derartige neue Elemente werden von &auml;lteren Browsern (vor allem von Internet Explorer 6, aber auch von neueren Versionen des Internet Explorers bis IE8 inklusive) nicht erkannt. F&uuml;r diese Versionen wird JavaScript ben&ouml;tigt, damit der IE die neuen Elemente als solche erkennt und darstellt.</p>\n<h4><span id=\"Gruppierungselement_figure\" class=\"mw-headline\">Gruppierungselement <code>figure</code></span></h4>\n<p>Das <code>figure</code>-Element und das dazu passende &Uuml;berschriftenelement <code>figcaption</code> wurden hinzugef&uuml;gt, um die Auszeichnung zus&auml;tzlicher Inhalte, beispielsweise Abbildungen mit Bildunterschriften, zu vereinfachen.</p>\n<h4><span id=\"Elemente_zur_Textauszeichnung\" class=\"mw-headline\">Elemente zur Textauszeichnung</span></h4>\n<p>Auf Textauszeichnungsebene wurden die Elemente <code>time</code> f&uuml;r Zeitangaben, die dynamisch lokalisiert werden k&ouml;nnen; <code>mark</code> f&uuml;r hervorgehobene Textabschnitte; <code>ruby</code>, <code>rp</code> und <code>rt</code> f&uuml;r einfache <a title=\"Ruby Annotation\" href=\"https://de.wikipedia.org/wiki/Ruby_Annotation\">Ruby-Annotierungen</a> und das vormals propriet&auml;re <code>wbr</code>-Element, das Textumbruchsm&ouml;glichkeiten in langen W&ouml;rtern bietet, hinzugef&uuml;gt.</p>\n<h4><span id=\"Multimedia-Elemente\" class=\"mw-headline\">Multimedia-Elemente</span></h4>\n<p>HTML5 f&uuml;hrt spezifische Elemente zur Einbindung von Audio- und Videodateien ein. F&uuml;r diese k&ouml;nnen eine oder mehrere Quellen bzw. verschiedene Formate hinterlegt werden, aus denen ein Browser dann ein f&uuml;r ihn verst&auml;ndliches Format ausw&auml;hlt. Die Wiedergabe von <a title=\"5.1\" href=\"https://de.wikipedia.org/wiki/5.1\">5.1 Surround Sound</a> Content war bisher in HTML4 &uuml;ber das mehrkanaltonf&auml;hige <a title=\"VLC media player\" href=\"https://de.wikipedia.org/wiki/VLC_media_player\">VLC</a>-<a class=\"mw-redirect\" title=\"Browser-Plug-in\" href=\"https://de.wikipedia.org/wiki/Browser-Plug-in\">Browser-Plug-in</a> oder, in <a class=\"mw-redirect\" title=\"Dolby Pro Logic II\" href=\"https://de.wikipedia.org/wiki/Dolby_Pro_Logic_II\">Dolby Pro Logic II</a> codiert, &uuml;ber den <a title=\"Stereofonie\" href=\"https://de.wikipedia.org/wiki/Stereofonie\">Stereokanal</a> eines sonstigen, g&auml;ngigen Plug-ins und einen an die Soundkarte angeschlossenen <a title=\"AV-Receiver\" href=\"https://de.wikipedia.org/wiki/AV-Receiver#Mehrkanalton-Decoder\">Mehrkanalton-Decoder</a> m&ouml;glich.<sup id=\"cite_ref-30\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-30\">[30]</a></sup><sup id=\"cite_ref-31\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-31\">[31]</a></sup> Mit HTML5 ist es erstmals m&ouml;glich, 5.1 Surround Sound Content direkt aus dem Browser an entsprechende Soundkarten im <a title=\"Mehrkanal-Tonsystem\" href=\"https://de.wikipedia.org/wiki/Mehrkanal-Tonsystem\">Mehrkanalton</a> auszugeben, ohne dass ein Browser-Plug-in oder eine Codierung bei der Erstellung der Medien und eine anschlie&szlig;ende Decodierung beim Abspielen im Browser n&ouml;tig w&auml;ren. Die Mediendatei wird dabei per progressivem <a title=\"Download\" href=\"https://de.wikipedia.org/wiki/Download\">Download</a> in den <a title=\"Cache\" href=\"https://de.wikipedia.org/wiki/Cache\">Cache</a> des Browsers geladen.<sup id=\"cite_ref-32\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-32\">[32]</a></sup> F&uuml;r das Einbinden von Anwendungen oder interaktiven, nicht auf HTML basierenden Inhalten beschreibt HTML5 das vormals propriet&auml;re <code>embed</code>-Element.</p>\n<p>Zudem wurde eine Zeichenoberfl&auml;che (<a title=\"Canvas (HTML-Element)\" href=\"https://de.wikipedia.org/wiki/Canvas_(HTML-Element)\">Canvas-Element</a>) hinzugef&uuml;gt, auf der mit Hilfe von Skripten zweidimensionale Bilder gezeichnet werden k&ouml;nnen.</p>\n<h4><span id=\"Formularelemente_.28nach_WHATPAG_7.1324.29\"></span><span id=\"Formularelemente_(nach_WHATPAG_7.1324)\" class=\"mw-headline\">Formularelemente (nach WHATPAG 7.1324)</span></h4>\n<p>Das <code>input</code>-Element wurde um verschiedene Typen erweitert, z.&nbsp;B. zur Eingabe von Suchbegriffen, Telefonnummern, URL- und E-Mail-Adressen, Datums- und Zeitangaben, Zahlen sowie Farbangaben.</p>\n<p>Zum Entwurf wurden dar&uuml;ber hinaus folgende Elemente hinzugef&uuml;gt: <code>datalist</code>, mit dem beispielsweise Vervollst&auml;ndigungsvorschl&auml;ge angegeben werden; <code>output</code>, das Ergebnisse von Berechnungen darstellt; <code>progress</code>, das den Fortschritt einer Aktion abbildet; <code>meter</code>, das f&uuml;r messbare Wertebereiche (z.&nbsp;B. Speicherbelegung auf der Festplatte) gedacht ist und das vormals propriet&auml;re <code>keygen</code>-Element, das zur Erstellung von Identifikations-Schl&uuml;sselpaaren dienen soll.</p>\n<h4><span id=\"Interaktive_Elemente\" class=\"mw-headline\">Interaktive Elemente</span></h4>\n<p>Die <code>details</code>- und <code>summary</code>-Elemente &auml;hneln im Aufbau den <code>figure</code> und <code>figcaption</code>-Elementen. Der Inhalt des <code>summary</code>-Elements wird dabei st&auml;ndig angezeigt, der restliche Inhalt des <code>details</code>-Elements kann ein- und ausgeblendet werden.</p>\n<p>F&uuml;r das Erstellen von Werkzeugleisten und (Kontext-)Men&uuml;s werden das <code>menu</code>-Element als strukturierende Basis und das <code>command</code>-Element als Interaktionspunkt definiert.</p>\n<h3><span id=\"Elemente_mit_ge.C3.A4nderter_Bedeutung\"></span><span id=\"Elemente_mit_ge&auml;nderter_Bedeutung\" class=\"mw-headline\">Elemente mit ge&auml;nderter Bedeutung</span></h3>\n<p>Einigen, vormals nur der Darstellung dienenden Elementen (z.&nbsp;B. <code>b</code>, <code>i</code>, <code>hr</code> oder <code>small</code>) wurde eine <a title=\"Semantik\" href=\"https://de.wikipedia.org/wiki/Semantik\">Semantik</a> gegeben. Die jeweiligen Definitionen sind dabei relativ weit gefasst, wodurch sichergestellt werden soll, dass die neue Bedeutung nicht der Benutzung in existierenden Webseiten widerspricht.</p>\n<p>Im Gegensatz dazu werden einige Elemente (z.&nbsp;B. <code>cite</code>) umdefiniert. Dadurch ist unter anderem das direkte Portieren von &auml;lteren Standards nur noch bedingt m&ouml;glich.<sup id=\"cite_ref-33\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-33\">[33]</a></sup><sup id=\"cite_ref-34\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-34\">[34]</a></sup></p>\n<p>Aus dem Vokabular von HTML5 entfallen einige Elemente (z.&nbsp;B. <code>acronym</code>, <code>center</code>, <code>font</code>, <code>frame</code> etc.). Es wird jedoch weiterhin definiert, wie ein Browser mit diesen Elementen umzugehen hat. Dadurch wird die Kompatibilit&auml;t zu bestehenden Webseiten sichergestellt.</p>\n<h3><span id=\"Elemente_und_Attribute_in_HTML_und_XHTML\" class=\"mw-headline\">Elemente und Attribute in HTML und XHTML</span></h3>\n<p>Das <code>noscript</code>-Element ist zwar in HTML5, jedoch nicht in XHTML5 erlaubt, da das Elementmodell nicht mit den XML-Verarbeitungsregeln vereinbar ist.<sup id=\"cite_ref-35\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-35\">[35]</a></sup></p>\n<p>In HTML5 ist das <code>xml:base</code>-Attribut nicht erlaubt, da es dort keine Wirkung hat.</p>\n<h3><span id=\"Unterschiede_zu_DOM_HTML_Level_2\" class=\"mw-headline\">Unterschiede zu DOM HTML Level 2</span></h3>\n<p>HTML5 definiert einige DOM-Schnittstellen, die der Erstellung von Webanwendungen dienen sollen, dazu geh&ouml;ren unter anderem Schnittstellen f&uuml;r:</p>\n<ul>\n<li>die Kontrolle von Multimediaelementen,</li>\n<li>die Manipulation der History (feingradigere Vor- und Zur&uuml;cknavigation),</li>\n<li>Drag &amp; Drop,</li>\n<li>bearbeitbare Inhalte,</li>\n<li>Offlineanwendungen,</li>\n<li>das Speichern von Anwendungsdaten (&uuml;blicherweise 5 MB pro Domain).</li>\n</ul>\n<p>Einige vormals propriet&auml;re oder nur in Funktionssammlungen enthaltene Eigenschaften und Methoden wie <code>innerHTML</code> und <code>getElementsByClassName()</code> wurden der Spezifikation hinzugef&uuml;gt.</p>\n<p>Des Weiteren ist das Verhalten der Elemente in HTML dem Verhalten der Elemente in XHTML angepasst worden, d.&nbsp;h.:</p>\n<ul>\n<li><code>localName</code> gibt den Element- bzw. Attributnamen kleingeschrieben wieder.<sup id=\"cite_ref-36\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-36\">[36]</a></sup></li>\n<li><code>namespaceURI</code> jedes Elements lautet \"<a class=\"external free\" href=\"http://www.w3.org/1999/xhtml\" rel=\"nofollow\">http://www.w3.org/1999/xhtml</a>\"<sup id=\"cite_ref-37\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-37\">[37]</a></sup></li>\n</ul>\n<h3><span id=\"Media_Source_Extensions\" class=\"mw-headline\">Media Source Extensions</span></h3>\n<p><em>Media Source Extensions</em> (MSE) ist eine vom W3C definierte <a title=\"Programmierschnittstelle\" href=\"https://de.wikipedia.org/wiki/Programmierschnittstelle\">Programmierschnittstelle</a>, die es erm&ouml;glicht, durch <a title=\"JavaScript\" href=\"https://de.wikipedia.org/wiki/JavaScript\">JavaScript</a> generierte Video-<a title=\"Datenstrom\" href=\"https://de.wikipedia.org/wiki/Datenstrom\">Datenstr&ouml;me</a> im <a title=\"Webbrowser\" href=\"https://de.wikipedia.org/wiki/Webbrowser\">Webbrowser</a> wiederzugeben.<sup id=\"cite_ref-38\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-38\">[38]</a></sup></p>"
          ]
        },
        {
          "tag_line": "Kritik",
          "details": [
            "<p>HTML5 ist ein langj&auml;hriges, umfangreiches Projekt, zu dem es auch viele kritische Stimmen gibt.</p>\n<h3><span id=\"Kritik_an_der_Weiterentwicklung_von_HTML\" class=\"mw-headline\">Kritik an der Weiterentwicklung von HTML</span></h3>\n<p>Joe Clark, Autor und Webaktivist f&uuml;r <a title=\"Barrierefreies Internet\" href=\"https://de.wikipedia.org/wiki/Barrierefreies_Internet\">Zug&auml;nglichkeit</a>, gesteht zwar der Vorversion HTML 4.01 Probleme zu, ist aber nicht der Meinung, dass die Sprache bez&uuml;glich bereits vorhandener Elemente weiterentwickelt werden m&uuml;sse. Selbst sehr schlecht geschriebener Code f&uuml;hre demnach bereits heute in allen Browsern zu einem zufriedenstellenden Ergebnis. Clark kritisiert, dass die Weiterentwicklung von HTML in die falsche Richtung verlaufe. Das W3C habe an wichtigeren Baustellen zu arbeiten, beispielsweise dem in der Szene umstrittenen <a class=\"mw-redirect\" title=\"WCAG\" href=\"https://de.wikipedia.org/wiki/WCAG\">WCAG</a>-2.0-Standard.<sup id=\"cite_ref-39\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-39\">[39]</a></sup></p>\n<p>Shane McCarron, der als Editor f&uuml;r zahlreiche XHTML-Spezifikationen mitverantwortlich ist, vermutet, dass HTML weiterentwickelt werde, weil die gro&szlig;en Browserhersteller der Herausforderung, die in der Implementierung des <a title=\"Semantic Web\" href=\"https://de.wikipedia.org/wiki/Semantic_Web\">Semantic Web</a> liegt, nicht gewachsen seien. Daraus folgert er, dass das W3C auf Druck dieser Hersteller das Ziel eines XML-basierten &Ouml;kosystems aufgegeben habe.<sup id=\"cite_ref-40\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-40\">[40]</a></sup></p>\n<h3><span id=\"Kritik_am_Entstehungsprozess_von_HTML5\" class=\"mw-headline\">Kritik am Entstehungsprozess von HTML5</span></h3>\n<h4><span id=\"Alleiniges_Schreibrecht_von_Ian_Hickson\" class=\"mw-headline\">Alleiniges Schreibrecht von Ian Hickson</span></h4>\n<p><a class=\"new\" title=\"Ian Hickson (Seite nicht vorhanden)\" href=\"https://de.wikipedia.org/w/index.php?title=Ian_Hickson&amp;action=edit&amp;redlink=1\">Ian Hickson</a> war von Anfang an eine der treibenden Kr&auml;fte hinter HTML5. Er schrieb 2004 die Entw&uuml;rfe f&uuml;r Web Forms 2.0 und Web Applications 1.0 und wurde 2005 von <a title=\"Google\" href=\"https://de.wikipedia.org/wiki/Google\">Google</a> angestellt, um sich auf die Weiterf&uuml;hrung dieser Arbeit konzentrieren zu k&ouml;nnen. Durch dieses Engagement wuchs Hickson in die Rolle des &bdquo;wohlwollenden Diktators&ldquo;. Er allein besa&szlig; das Bearbeitungsrecht f&uuml;r den HTML5-Entwurf und war f&uuml;r viele Entscheidungen, die die Spezifikation betreffen, allein verantwortlich.</p>\n<p>Diese Vorgehensweise entspricht kaum der des W3C, dessen Spezifikationen auf demokratischem Konsens basieren. Daher fragen sich viele Webautoren, beispielsweise Kyle Weems,<sup id=\"cite_ref-41\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-41\">[41]</a></sup> ob der Zweck (eine funktionale Spezifikation) die Mittel (konsequente, nichtdemokratische Entstehung jener Spezifikation) rechtfertigt.</p>\n<h4><span id=\"Fehlende_Ernsthaftigkeit_f.C3.BCr_interne_Vorschl.C3.A4ge\"></span><span id=\"Fehlende_Ernsthaftigkeit_f&uuml;r_interne_Vorschl&auml;ge\" class=\"mw-headline\">Fehlende Ernsthaftigkeit f&uuml;r interne Vorschl&auml;ge</span></h4>\n<p>Mathias Sch&auml;fer, Webentwickler und Mitautor verschiedener Dokumentationen (beispielsweise <a class=\"mw-redirect\" title=\"SELFHTML\" href=\"https://de.wikipedia.org/wiki/SELFHTML\">SELFHTML</a>), kritisiert die fehlende Sachlichkeit bei der Diskussion von HTML5 w&auml;hrend der Entstehung. Anhand des Beispiels der &bdquo;verteilten Erweiterbarkeit&ldquo; (Erweiterung des HTML-Vokabulars um propriet&auml;re bzw. private, etwa firmeninterne Elemente) zeigt er, dass Vorschl&auml;ge nicht ernstgenommen werden, obwohl Sch&auml;fer meint, dass gerade diese Vorgehensweise HTML5 zum Erfolg f&uuml;hren k&ouml;nnte.<sup id=\"cite_ref-42\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-42\">[42]</a></sup></p>\n<h3><span id=\"Kritik_an_der_WHATWG\" class=\"mw-headline\">Kritik an der WHATWG</span></h3>\n<p>Die WHATWG selbst steht in der Kritik, da sie HTML5 nach wie vor auf ihrer Webseite als Spezifikation f&uuml;hrt. Tats&auml;chlich handelt es sich dabei jedoch nicht um HTML5, sondern &ndash; nach eigenen Angaben &ndash; um die n&auml;chste Generation von HTML. Das hei&szlig;t, der Entwurf umfasst zwar den aktuellen Stand von HTML5, erweitert diesen aber um neue, noch unausgereifte Funktionen. Zudem besitzt der WHATWG-Entwurf einige Unterschiede zur Variante des W3C. Problematisch sind Unterschiede in den normativen Abschnitten, da hier das W3C den Standard festlegt, Browserhersteller aber in der Regel dem WHATWG-Entwurf folgen.</p>\n<h3><span id=\"Audio-_und_Videoelemente\" class=\"mw-headline\">Audio- und Videoelemente</span></h3>\n<p>Zum Einbinden von Audio- bzw. Videodaten definiert HTML5 die Elemente <code>audio</code> und <code>video</code>. Da jedoch kein Format definiert ist, welches als Mindeststandard unterst&uuml;tzt werden muss, gab es lange Zeit kein Format, das von allen Browsern unterst&uuml;tzt wurde. Zur Diskussion standen in der Vergangenheit unter anderem die Formate <a title=\"Ogg\" href=\"https://de.wikipedia.org/wiki/Ogg\">Ogg</a> <a title=\"Vorbis\" href=\"https://de.wikipedia.org/wiki/Vorbis\">Vorbis</a> und <a title=\"Theora\" href=\"https://de.wikipedia.org/wiki/Theora\">Theora</a> (die, ohne Lizenzgeb&uuml;hren zahlen zu m&uuml;ssen, verwendet werden k&ouml;nnen und urspr&uuml;nglich als Mindeststandard festgelegt waren), <a title=\"H.264\" href=\"https://de.wikipedia.org/wiki/H.264\">H.264</a> (das eine bessere Qualit&auml;t bietet, jedoch patentiert ist) und <a title=\"WebM\" href=\"https://de.wikipedia.org/wiki/WebM\">WebM</a> mit den Codecs VP8/VP9.</p>\n<p>Nachdem MPEG LA im August 2010 beschlossen hatte, dauerhaft keine Lizenzgeb&uuml;hren f&uuml;r freies Internet-Streaming von H.264-Inhalten zu verlangen, wird das Format mittlerweile von allen Browsern unterst&uuml;tzt und hat sich als De-Facto-Standard etabliert.<sup id=\"cite_ref-43\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-43\">[43]</a></sup><sup id=\"cite_ref-44\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-44\">[44]</a></sup></p>\n<h4><span id=\"Digitale_Rechteverwaltung\" class=\"mw-headline\">Digitale Rechteverwaltung</span></h4>\n<p>2013 richteten die Unternehmen <a class=\"mw-redirect\" title=\"Google Inc.\" href=\"https://de.wikipedia.org/wiki/Google_Inc.\">Google</a>, <a title=\"Microsoft\" href=\"https://de.wikipedia.org/wiki/Microsoft\">Microsoft</a> und <a title=\"Netflix\" href=\"https://de.wikipedia.org/wiki/Netflix\">Netflix</a> an das W3C den Wunsch, dass &uuml;ber eine sogenannte <em>Encrypted Media Extension</em> (EME) verschl&uuml;sselte Medieninhalte &uuml;ber HTML5 ausgegeben werden k&ouml;nnen sollen. Durch dieses wurde <a title=\"Digitale Rechteverwaltung\" href=\"https://de.wikipedia.org/wiki/Digitale_Rechteverwaltung\">Digital Rights Management</a> (DRM) in Browser integriert.<sup id=\"cite_ref-45\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-45\">[45]</a></sup> Unter den meistbenutzten Browsern unterst&uuml;tzen alle EME. <a title=\"Mozilla Firefox\" href=\"https://de.wikipedia.org/wiki/Mozilla_Firefox\">Mozilla Firefox</a> unterst&uuml;tzt EME ab Version 38, bot 2015 auch eine EME-freie Version an.<sup id=\"cite_ref-46\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-46\">[46]</a></sup><sup id=\"cite_ref-47\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-47\">[47]</a></sup> Seitdem wird eine M&ouml;glichkeit geboten, EME bzw. DRM in den Einstellungen zu deaktivieren, womit auch das closed-source Widevine-CDM (Content Decryption Module) deinstalliert wird.<sup id=\"cite_ref-48\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-48\">[48]</a></sup> <a title=\"Google Chrome\" href=\"https://de.wikipedia.org/wiki/Google_Chrome\">Google Chrome</a> unterst&uuml;tzt EME ab Version 26 mit selbstentwickelten Widevine-CDM,<sup id=\"cite_ref-49\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-49\">[49]</a></sup> <a title=\"Internet Explorer\" href=\"https://de.wikipedia.org/wiki/Internet_Explorer\">Internet Explorer</a> ab <a title=\"Internet Explorer\" href=\"https://de.wikipedia.org/wiki/Internet_Explorer#Version_11\">Version 11</a>.<sup id=\"cite_ref-50\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-50\">[50]</a></sup> Am 18. September 2017 beschloss die W3C die Einf&uuml;hrung von Encrypted Media Extensions als Webstandard.<sup id=\"cite_ref-51\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-51\">[51]</a></sup> Aus Protest gegen diese Entscheidung ist die <a title=\"Electronic Frontier Foundation\" href=\"https://de.wikipedia.org/wiki/Electronic_Frontier_Foundation\">Electronic Frontier Foundation</a> aus dem W3C Konsortium ausgetreten.<sup id=\"cite_ref-52\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-52\">[52]</a></sup> Im Oktober 2017 wurde der &ouml;sterreichische <a title=\"Liste von Negativpreisen\" href=\"https://de.wikipedia.org/wiki/Liste_von_Negativpreisen\">Negativpreis</a> <a title=\"Big Brother Awards\" href=\"https://de.wikipedia.org/wiki/Big_Brother_Awards\">Big Brother Award</a> in der Kategorie <em>Beh&ouml;rden und Verwaltung</em> an das W3C f&uuml;r die Einf&uuml;hrung von EME als Webstandard verliehen.<sup id=\"cite_ref-53\" class=\"reference\"><a href=\"https://de.wikipedia.org/wiki/HTML5#cite_note-53\">[53]</a></sup></p>"
          ]
        }
      ]
    }
  ]
}