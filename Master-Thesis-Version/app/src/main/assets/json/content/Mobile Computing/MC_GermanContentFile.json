{
  "items": [
    {
      "title": "Android",
      "content": [
        {
          "tag_line": "Android - Architecture (Auf Englisch)",
          "details": [
            "<p>Android operating system is a stack of software components which is roughly divided into five sections and four main layers as shown below in the architecture diagram.</p>\n<p><img src=\"https://www.tutorialspoint.com/android/images/architecture.jpg\" alt=\"Android Architecture\" /></p>\n<h2>Linux kernel</h2>\n<p>At the bottom of the layers is Linux - Linux 3.6 with approximately 115 patches. This provides a level of abstraction between the device hardware and it contains all the essential hardware drivers like camera, keypad, display etc. Also, the kernel handles all the things that Linux is really good at such as networking and a vast array of device drivers, which take the pain out of interfacing to peripheral hardware.</p>\n<h2>Libraries</h2>\n<p>On top of Linux kernel there is a set of libraries including open-source Web browser engine WebKit, well known library libc, SQLite database which is a useful repository for storage and sharing of application data, libraries to play and record audio and video, SSL libraries responsible for Internet security etc.</p>\n<h2>Android Libraries</h2>\n<p>This category encompasses those Java-based libraries that are specific to Android development. Examples of libraries in this category include the application framework libraries in addition to those that facilitate user interface building, graphics drawing and database access. A summary of some key core Android libraries available to the Android developer is as follows &minus;</p>\n<ul class=\"list\">\n<li>\n<p><strong>android.app</strong> &minus; Provides access to the application model and is the cornerstone of all Android applications.</p>\n</li>\n<li>\n<p><strong>android.content</strong> &minus; Facilitates content access, publishing and messaging between applications and application components.</p>\n</li>\n<li>\n<p><strong>android.database</strong> &minus; Used to access data published by content providers and includes SQLite database management classes.</p>\n</li>\n<li>\n<p><strong>android.opengl</strong> &minus; A Java interface to the OpenGL ES 3D graphics rendering API.</p>\n</li>\n<li>\n<p><strong>android.os</strong> &minus; Provides applications with access to standard operating system services including messages, system services and inter-process communication.</p>\n</li>\n<li>\n<p><strong>android.text</strong> &minus; Used to render and manipulate text on a device display.</p>\n</li>\n<li>\n<p><strong>android.view</strong> &minus; The fundamental building blocks of application user interfaces.</p>\n</li>\n<li>\n<p><strong>android.widget</strong> &minus; A rich collection of pre-built user interface components such as buttons, labels, list views, layout managers, radio buttons etc.</p>\n</li>\n<li>\n<p><strong>android.webkit</strong> &minus; A set of classes intended to allow web-browsing capabilities to be built into applications.</p>\n</li>\n</ul>\n<p>Having covered the Java-based core libraries in the Android runtime, it is now time to turn our attention to the C/C++ based libraries contained in this layer of the Android software stack.</p>\n<h2>Android Runtime</h2>\n<p>This is the third section of the architecture and available on the second layer from the bottom. This section provides a key component called <strong>Dalvik Virtual Machine</strong> which is a kind of Java Virtual Machine specially designed and optimized for Android.</p>\n<p>The Dalvik VM makes use of Linux core features like memory management and multi-threading, which is intrinsic in the Java language. The Dalvik VM enables every Android application to run in its own process, with its own instance of the Dalvik virtual machine.</p>\n<p>The Android runtime also provides a set of core libraries which enable Android application developers to write Android applications using standard Java programming language.</p>\n<h2>Application Framework</h2>\n<p>The Application Framework layer provides many higher-level services to applications in the form of Java classes. Application developers are allowed to make use of these services in their applications.</p>\n<p>The Android framework includes the following key services &minus;</p>\n<ul class=\"list\">\n<li>\n<p><strong>Activity Manager</strong> &minus; Controls all aspects of the application lifecycle and activity stack.</p>\n</li>\n<li>\n<p><strong>Content Providers</strong> &minus; Allows applications to publish and share data with other applications.</p>\n</li>\n<li>\n<p><strong>Resource Manager</strong> &minus; Provides access to non-code embedded resources such as strings, color settings and user interface layouts.</p>\n</li>\n<li>\n<p><strong>Notifications Manager</strong> &minus; Allows applications to display alerts and notifications to the user.</p>\n</li>\n<li>\n<p><strong>View System</strong> &minus; An extensible set of views used to create application user interfaces.</p>\n</li>\n</ul>\n<h2>Applications</h2>\n<p>You will find all the Android application at the top layer. You will write your application to be installed on this layer only. Examples of such applications are Contacts Books, Browser, Games etc.</p>"
          ]
        },
        {
          "tag_line": "Android - Application Components (Auf Englisch)",
          "details": [
            "<p>Application components are the essential building blocks of an Android application. These components are loosely coupled by the application manifest file <em>AndroidManifest.xml</em> that describes each component of the application and how they interact.</p>\n<p>There are following four main components that can be used within an Android application &minus;</p>\n<table class=\"table table-bordered\">\n<tbody>\n<tr>\n<th style=\"text-align: center;\">Sr.No</th>\n<th style=\"text-align: center;\">Components &amp; Description</th>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">1</td>\n<td>\n<p><strong>Activities</strong></p>\n<p>They dictate the UI and handle the user interaction to the smart phone screen.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">2</td>\n<td>\n<p><strong>Services</strong></p>\n<p>They handle background processing associated with an application.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">3</td>\n<td>\n<p><strong>Broadcast Receivers</strong></p>\n<p>They handle communication between Android OS and applications.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">4</td>\n<td>\n<p><strong>Content Providers</strong></p>\n<p>They handle data and database management issues.</p>\n</td>\n</tr>\n</tbody>\n</table>\n<h2>Activities</h2>\n<p>An activity represents a single screen with a user interface,in-short Activity performs actions on the screen. For example, an email application might have one activity that shows a list of new emails, another activity to compose an email, and another activity for reading emails. If an application has more than one activity, then one of them should be marked as the activity that is presented when the application is launched.</p>\n<p>An activity is implemented as a subclass of <strong>Activity</strong> class as follows &minus;</p>\n<pre class=\"prettyprint notranalste prettyprinted\"><span class=\"kwd\">public</span> <span class=\"kwd\">class</span> <span class=\"typ\">MainActivity</span> <span class=\"kwd\">extends</span> <span class=\"typ\">Activity</span> <span class=\"pun\">{</span>\n<span class=\"pun\">}</span></pre>\n<h2>Services</h2>\n<p>A service is a component that runs in the background to perform long-running operations. For example, a service might play music in the background while the user is in a different application, or it might fetch data over the network without blocking user interaction with an activity.</p>\n<p>A service is implemented as a subclass of <strong>Service</strong> class as follows &minus;</p>\n<pre class=\"prettyprint notranalste prettyprinted\"><span class=\"kwd\">public</span> <span class=\"kwd\">class</span> <span class=\"typ\">MyService</span> <span class=\"kwd\">extends</span> <span class=\"typ\">Service</span> <span class=\"pun\">{</span>\n<span class=\"pun\">}</span></pre>\n<h2>Broadcast Receivers</h2>\n<p>Broadcast Receivers simply respond to broadcast messages from other applications or from the system. For example, applications can also initiate broadcasts to let other applications know that some data has been downloaded to the device and is available for them to use, so this is broadcast receiver who will intercept this communication and will initiate appropriate action.</p>\n<p>A broadcast receiver is implemented as a subclass of <strong>BroadcastReceiver</strong> class and each message is broadcaster as an <strong>Intent</strong> object.</p>\n<pre class=\"prettyprint notranalste prettyprinted\"><span class=\"kwd\">public</span> <span class=\"kwd\">class</span> <span class=\"typ\">MyReceiver</span>  <span class=\"kwd\">extends</span>  <span class=\"typ\">BroadcastReceiver</span> <span class=\"pun\">{</span>\n   <span class=\"kwd\">public</span> <span class=\"kwd\">void</span><span class=\"pln\"> onReceive</span><span class=\"pun\">(</span><span class=\"pln\">context</span><span class=\"pun\">,</span><span class=\"pln\">intent</span><span class=\"pun\">){}</span>\n<span class=\"pun\">}</span></pre>\n<h2>Content Providers</h2>\n<p>A content provider component supplies data from one application to others on request. Such requests are handled by the methods of the <em>ContentResolver</em> class. The data may be stored in the file system, the database or somewhere else entirely.</p>\n<p>A content provider is implemented as a subclass of <strong>ContentProvider</strong> class and must implement a standard set of APIs that enable other applications to perform transactions.</p>\n<pre class=\"prettyprint notranalste prettyprinted\"><span class=\"kwd\">public</span> <span class=\"kwd\">class</span> <span class=\"typ\">MyContentProvider</span> <span class=\"kwd\">extends</span>  <span class=\"typ\">ContentProvider</span> <span class=\"pun\">{</span>\n   <span class=\"kwd\">public</span> <span class=\"kwd\">void</span><span class=\"pln\"> onCreate</span><span class=\"pun\">(){}</span>\n<span class=\"pun\">}</span></pre>\n<p>We will go through these tags in detail while covering application components in individual chapters.</p>\n<h2>Additional Components</h2>\n<p>There are additional components which will be used in the construction of above mentioned entities, their logic, and wiring between them. These components are &minus;</p>\n<table class=\"table table-bordered\">\n<tbody>\n<tr>\n<th style=\"text-align: center;\">S.No</th>\n<th style=\"text-align: center;\">Components &amp; Description</th>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">1</td>\n<td>\n<p><strong>Fragments</strong></p>\n<p>Represents a portion of user interface in an Activity.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">2</td>\n<td>\n<p><strong>Views</strong></p>\n<p>UI elements that are drawn on-screen including buttons, lists forms etc.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">3</td>\n<td>\n<p><strong>Layouts</strong></p>\n<p>View hierarchies that control screen format and appearance of the views.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">4</td>\n<td>\n<p><strong>Intents</strong></p>\n<p>Messages wiring components together.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">5</td>\n<td>\n<p><strong>Resources</strong></p>\n<p>External elements, such as strings, constants and drawable pictures.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">6</td>\n<td>\n<p><strong>Manifest</strong></p>\n<p>Configuration file for the application.</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>"
          ]
        },
        {
          "tag_line": "Android Resources Organizing & Accessing (Auf Englisch)",
          "details": [
            "<p>There are many more items which you use to build a good Android application. Apart from coding for the application, you take care of various other <strong>resources</strong> like static content that your code uses, such as bitmaps, colors, layout definitions, user interface strings, animation instructions, and more. These resources are always maintained separately in various sub-directories under <strong>res/</strong> directory of the project.</p>\n<p>This tutorial will explain you how you can organize your application resources, specify alternative resources and access them in your applications.</p>\n<h2>Organize resource in Android Studio</h2>\n<pre class=\"result notranslate\">MyProject/\n   app/\n      manifest/\n         AndroidManifest.xml\n   java/\n      MyActivity.java  \n      <strong>res/</strong>\n         drawable/  \n            icon.png  \n         layout/  \n            activity_main.xml\n            info.xml\n         values/  \n            strings.xml \n\t\t\t\t \n</pre>\n<p>&nbsp;</p>\n<table class=\"table table-bordered\">\n<tbody>\n<tr>\n<th>Sr.No.</th>\n<th style=\"text-align: center;\">Directory &amp; Resource Type</th>\n</tr>\n<tr>\n<td>1</td>\n<td>\n<p><strong>anim/</strong></p>\n<p>XML files that define property animations. They are saved in res/anim/ folder and accessed from the <strong>R.anim</strong> class.</p>\n</td>\n</tr>\n<tr>\n<td>2</td>\n<td>\n<p><strong>color/</strong></p>\n<p>XML files that define a state list of colors. They are saved in res/color/ and accessed from the <strong>R.color</strong> class.</p>\n</td>\n</tr>\n<tr>\n<td>3</td>\n<td>\n<p><strong>drawable/</strong></p>\n<p>Image files like .png, .jpg, .gif or XML files that are compiled into bitmaps, state lists, shapes, animation drawable. They are saved in res/drawable/ and accessed from the <strong>R.drawable</strong> class.</p>\n</td>\n</tr>\n<tr>\n<td>4</td>\n<td>\n<p><strong>layout/</strong></p>\n<p>XML files that define a user interface layout. They are saved in res/layout/ and accessed from the <strong>R.layout</strong> class.</p>\n</td>\n</tr>\n<tr>\n<td>5</td>\n<td>\n<p><strong>menu/</strong></p>\n<p>XML files that define application menus, such as an Options Menu, Context Menu, or Sub Menu. They are saved in res/menu/ and accessed from the <strong>R.menu</strong> class.</p>\n</td>\n</tr>\n<tr>\n<td>6</td>\n<td>\n<p><strong>raw/</strong></p>\n<p>Arbitrary files to save in their raw form. You need to call <em>Resources.openRawResource()</em> with the resource ID, which is <em>R.raw.filename</em> to open such raw files.</p>\n</td>\n</tr>\n<tr>\n<td>7</td>\n<td>\n<p><strong>values/</strong></p>\n<p>XML files that contain simple values, such as strings, integers, and colors. For example, here are some filename conventions for resources you can create in this directory &minus;</p>\n<ul class=\"list\">\n<li>\n<p>arrays.xml for resource arrays, and accessed from the <strong>R.array</strong> class.</p>\n</li>\n<li>\n<p>integers.xml for resource integers, and accessed from the <strong>R.integer</strong> class.</p>\n</li>\n<li>\n<p>bools.xml for resource boolean, and accessed from the <strong>R.bool</strong> class.</p>\n</li>\n<li>\n<p>colors.xml for color values, and accessed from the <strong>R.color</strong> class.</p>\n</li>\n<li>\n<p>dimens.xml for dimension values, and accessed from the <strong>R.dimen</strong> class.</p>\n</li>\n<li>\n<p>strings.xml for string values, and accessed from the <strong>R.string</strong> class.</p>\n</li>\n<li>\n<p>styles.xml for styles, and accessed from the <strong>R.style</strong> class.</p>\n</li>\n</ul>\n</td>\n</tr>\n<tr>\n<td>8</td>\n<td>\n<p><strong>xml/</strong></p>\n<p>Arbitrary XML files that can be read at runtime by calling <em>Resources.getXML()</em>. You can save various configuration files here which will be used at run time.</p>\n</td>\n</tr>\n</tbody>\n</table>\n<h2>Alternative Resources</h2>\n<p>Your application should provide alternative resources to support specific device configurations. For example, you should include alternative drawable resources ( i.e.images ) for different screen resolution and alternative string resources for different languages. At runtime, Android detects the current device configuration and loads the appropriate resources for your application.</p>\n<p>To specify configuration-specific alternatives for a set of resources, follow the following steps &minus;</p>\n<ul class=\"list\">\n<li>\n<p>Create a new directory in res/ named in the form <strong>&lt;resources_name&gt;-&lt;config_qualifier&gt;</strong>. Here <strong>resources_name</strong> will be any of the resources mentioned in the above table, like layout, drawable etc. The <strong>qualifier</strong> will specify an individual configuration for which these resources are to be used. You can check official documentation for a complete list of qualifiers for different type of resources.</p>\n</li>\n<li>\n<p>Save the respective alternative resources in this new directory. The resource files must be named exactly the same as the default resource files as shown in the below example, but these files will have content specific to the alternative. For example though image file name will be same but for high resolution screen, its resolution will be high.</p>\n</li>\n</ul>\n<p>Below is an example which specifies images for a default screen and alternative images for high resolution screen.</p>\n<pre class=\"result notranslate\">MyProject/\n   app/\n      manifest/\n         AndroidManifest.xml\n   java/\n      MyActivity.java   \n      <strong>res/</strong>\n         drawable/  \n            icon.png\n            background.png\n         <strong>drawable-hdpi/</strong>  \n            icon.png\n            background.png  \n         layout/  \n            activity_main.xml\n            info.xml\n         values/  \n            strings.xml \n</pre>\n<p>Below is another example which specifies layout for a default language and alternative layout for Arabic language.</p>\n<pre class=\"result notranslate\">MyProject/\n   app/\n      manifest/\n         AndroidManifest.xml\n   java/\n      MyActivity.java   \n      <strong>res/</strong>\n         drawable/  \n            icon.png\n            background.png\n         <strong>drawable-hdpi/</strong>  \n            icon.png\n            background.png  \n         layout/  \n            activity_main.xml\n            info.xml\n         <strong>layout-ar/</strong>\n            main.xml\n         values/  \n            strings.xml \n</pre>\n<h2>Accessing Resources</h2>\n<p>During your application development you will need to access defined resources either in your code, or in your layout XML files. Following section explains how to access your resources in both the scenarios &minus;</p>\n<h3>Accessing Resources in Code</h3>\n<p>When your Android application is compiled, a <strong>R</strong> class gets generated, which contains resource IDs for all the resources available in your <strong>res/</strong> directory. You can use R class to access that resource using sub-directory and resource name or directly resource ID.</p>\n<h3>Example</h3>\n<p>To access <em>res/drawable/myimage.png</em> and set an ImageView you will use following code &minus;</p>\n<pre class=\"prettyprint notranslate prettyprinted\"><span class=\"typ\">ImageView</span><span class=\"pln\"> imageView </span><span class=\"pun\">=</span> <span class=\"pun\">(</span><span class=\"typ\">ImageView</span><span class=\"pun\">)</span><span class=\"pln\"> findViewById</span><span class=\"pun\">(</span><span class=\"pln\">R</span><span class=\"pun\">.</span><span class=\"pln\">id</span><span class=\"pun\">.</span><span class=\"pln\">myimageview</span><span class=\"pun\">);</span><span class=\"pln\">\nimageView</span><span class=\"pun\">.</span><span class=\"pln\">setImageResource</span><span class=\"pun\">(</span><span class=\"pln\">R</span><span class=\"pun\">.</span><span class=\"pln\">drawable</span><span class=\"pun\">.</span><span class=\"pln\">myimage</span><span class=\"pun\">);</span></pre>\n<p>Here first line of the code make use of <em>R.id.myimageview</em> to get ImageView defined with id <em>myimageview</em> in a Layout file. Second line of code makes use of <em>R.drawable.myimage</em> to get an image with name <strong>myimage</strong> available in drawable sub-directory under <strong>/res</strong>.</p>\n<h3>Example</h3>\n<p>Consider next example where <em>res/values/strings.xml</em> has following definition &minus;</p>\n<pre class=\"prettyprint notranslate prettyprinted\"><span class=\"pun\">&lt;?</span><span class=\"pln\">xml version</span><span class=\"pun\">=</span><span class=\"str\">\"1.0\"</span><span class=\"pln\"> encoding</span><span class=\"pun\">=</span><span class=\"str\">\"utf-8\"</span><span class=\"pun\">?&gt;</span>\n<span class=\"tag\">&lt;resources&gt;</span>\n   <span class=\"tag\">&lt;string</span>  <span class=\"atn\">name</span><span class=\"pun\">=</span><span class=\"atv\">\"hello\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">Hello, World!</span><span class=\"tag\">&lt;/string&gt;</span>\n<span class=\"tag\">&lt;/resources&gt;</span></pre>\n<p>Now you can set the text on a TextView object with ID msg using a resource ID as follows &minus;</p>\n<pre class=\"prettyprint notranslate prettyprinted\"><span class=\"typ\">TextView</span><span class=\"pln\"> msgTextView </span><span class=\"pun\">=</span> <span class=\"pun\">(</span><span class=\"typ\">TextView</span><span class=\"pun\">)</span><span class=\"pln\"> findViewById</span><span class=\"pun\">(</span><span class=\"pln\">R</span><span class=\"pun\">.</span><span class=\"pln\">id</span><span class=\"pun\">.</span><span class=\"pln\">msg</span><span class=\"pun\">);</span><span class=\"pln\">\nmsgTextView</span><span class=\"pun\">.</span><span class=\"pln\">setText</span><span class=\"pun\">(</span><span class=\"pln\">R</span><span class=\"pun\">.</span><span class=\"kwd\">string</span><span class=\"pun\">.</span><span class=\"pln\">hello</span><span class=\"pun\">);</span></pre>\n<h3>Example</h3>\n<p>Consider a layout <em>res/layout/activity_main.xml</em> with the following definition &minus;</p>\n<p>&nbsp;</p>\n<pre class=\"prettyprint notranslate prettyprinted\"><span class=\"pun\">&lt;?</span><span class=\"pln\">xml version</span><span class=\"pun\">=</span><span class=\"str\">\"1.0\"</span><span class=\"pln\"> encoding</span><span class=\"pun\">=</span><span class=\"str\">\"utf-8\"</span><span class=\"pun\">?&gt;</span>\n<span class=\"tag\">&lt;LinearLayout</span> <span class=\"atn\">xmlns:android</span><span class=\"pun\">=</span><span class=\"atv\">\"http://schemas.android.com/apk/res/android\"</span>\n   <span class=\"atn\">android:layout_width</span><span class=\"pun\">=</span><span class=\"atv\">\"fill_parent\"</span> \n   <span class=\"atn\">android:layout_height</span><span class=\"pun\">=</span><span class=\"atv\">\"fill_parent\"</span> \n   <span class=\"atn\">android:orientation</span><span class=\"pun\">=</span><span class=\"atv\">\"vertical\"</span> <span class=\"tag\">&gt;</span>\n   \n   <span class=\"tag\">&lt;TextView</span> <span class=\"atn\">android:id</span><span class=\"pun\">=</span><span class=\"atv\">\"@+id/text\"</span>\n      <span class=\"atn\">android:layout_width</span><span class=\"pun\">=</span><span class=\"atv\">\"wrap_content\"</span>\n      <span class=\"atn\">android:layout_height</span><span class=\"pun\">=</span><span class=\"atv\">\"wrap_content\"</span>\n      <span class=\"atn\">android:text</span><span class=\"pun\">=</span><span class=\"atv\">\"Hello, I am a TextView\"</span> <span class=\"tag\">/&gt;</span>\n\n   <span class=\"tag\">&lt;Button</span> <span class=\"atn\">android:id</span><span class=\"pun\">=</span><span class=\"atv\">\"@+id/button\"</span>\n      <span class=\"atn\">android:layout_width</span><span class=\"pun\">=</span><span class=\"atv\">\"wrap_content\"</span>\n      <span class=\"atn\">android:layout_height</span><span class=\"pun\">=</span><span class=\"atv\">\"wrap_content\"</span>\n      <span class=\"atn\">android:text</span><span class=\"pun\">=</span><span class=\"atv\">\"Hello, I am a Button\"</span> <span class=\"tag\">/&gt;</span>\n      \n<span class=\"tag\">&lt;/LinearLayout&gt;</span></pre>\n<p>This application code will load this layout for an Activity, in the onCreate() method as follows &minus;</p>\n<pre class=\"prettyprint notranslate prettyprinted\"><span class=\"kwd\">public</span> <span class=\"kwd\">void</span><span class=\"pln\"> onCreate</span><span class=\"pun\">(</span><span class=\"typ\">Bundle</span><span class=\"pln\"> savedInstanceState</span><span class=\"pun\">)</span> <span class=\"pun\">{</span>\n   <span class=\"kwd\">super</span><span class=\"pun\">.</span><span class=\"pln\">onCreate</span><span class=\"pun\">(</span><span class=\"pln\">savedInstanceState</span><span class=\"pun\">);</span><span class=\"pln\">\n   setContentView</span><span class=\"pun\">(</span><span class=\"pln\">R</span><span class=\"pun\">.</span><span class=\"pln\">layout</span><span class=\"pun\">.</span><span class=\"pln\">activity_main</span><span class=\"pun\">);</span>\n<span class=\"pun\">}</span></pre>\n<h3>Accessing Resources in XML</h3>\n<p>Consider the following resource XML <em>res/values/strings.xml</em> file that includes a color resource and a string resource &minus;</p>\n<pre class=\"prettyprint notranslate prettyprinted\"><span class=\"pun\">&lt;?</span><span class=\"pln\">xml version</span><span class=\"pun\">=</span><span class=\"str\">\"1.0\"</span><span class=\"pln\"> encoding</span><span class=\"pun\">=</span><span class=\"str\">\"utf-8\"</span><span class=\"pun\">?&gt;</span>\n<span class=\"tag\">&lt;resources&gt;</span>\n   <span class=\"tag\">&lt;color</span> <span class=\"atn\">name</span><span class=\"pun\">=</span><span class=\"atv\">\"opaque_red\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">#f00</span><span class=\"tag\">&lt;/color&gt;</span>\n   <span class=\"tag\">&lt;string</span> <span class=\"atn\">name</span><span class=\"pun\">=</span><span class=\"atv\">\"hello\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">Hello!</span><span class=\"tag\">&lt;/string&gt;</span>\n<span class=\"tag\">&lt;/resources&gt;</span></pre>\n<p>Now you can use these resources in the following layout file to set the text color and text string as follows &minus;</p>\n<pre class=\"prettyprint notranslate prettyprinted\"><span class=\"pun\">&lt;?</span><span class=\"pln\">xml version</span><span class=\"pun\">=</span><span class=\"str\">\"1.0\"</span><span class=\"pln\"> encoding</span><span class=\"pun\">=</span><span class=\"str\">\"utf-8\"</span><span class=\"pun\">?&gt;</span>\n<span class=\"tag\">&lt;EditText</span> <span class=\"atn\">xmlns:android</span><span class=\"pun\">=</span><span class=\"atv\">\"http://schemas.android.com/apk/res/android\"</span>\n   <span class=\"atn\">android:layout_width</span><span class=\"pun\">=</span><span class=\"atv\">\"fill_parent\"</span>\n   <span class=\"atn\">android:layout_height</span><span class=\"pun\">=</span><span class=\"atv\">\"fill_parent\"</span>\n   <span class=\"atn\">android:textColor</span><span class=\"pun\">=</span><strong><span class=\"atv\">\"@color/opaque_red\"</span></strong>\n   <span class=\"atn\">android:text</span><span class=\"pun\">=</span><strong><span class=\"atv\">\"@string/hello\"</span> <span class=\"tag\">/&gt;</span></strong>\n</pre>\n<p>Now if you will go through previous chapter once again where I have explained <strong>Hello World!</strong> example, and I'm sure you will have better understanding on all the concepts explained in this chapter. So I highly recommend to check previous chapter for working example and check how I have used various resources at very basic level.</p>"
          ]
        },
        {
          "tag_line": "Android - Activities (Auf Englisch)",
          "details": [
            "<blockquote>An activity represents a single screen with a user interface just like window or frame of Java.Android activity is the subclass of ContextThemeWrapper class.</blockquote>\n<p>If you have worked with C, C++ or Java programming language then you must have seen that your program starts from <strong>main()</strong> function. Very similar way, Android system initiates its program with in an <strong>Activity</strong> starting with a call on <em>onCreate()</em> callback method. There is a sequence of callback methods that start up an activity and a sequence of callback methods that tear down an activity as shown in the below Activity life cycle diagram: (<em>image courtesy : android.com</em> )</p>\n<p><img src=\"https://www.tutorialspoint.com/android/images/activity.jpg\" alt=\"Android Activity lifecycle\" /></p>\n<p>The Activity class defines the following call backs i.e. events. You don't need to implement all the callbacks methods. However, it's important that you understand each one and implement those that ensure your app behaves the way users expect.</p>\n<table class=\"table table-bordered\">\n<tbody>\n<tr>\n<th style=\"text-align: center;\">Sr.No</th>\n<th style=\"text-align: center;\">Callback &amp; Description</th>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">1</td>\n<td>\n<p><strong>onCreate()</strong></p>\n<p>This is the first callback and called when the activity is first created.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">2</td>\n<td>\n<p><strong>onStart()</strong></p>\n<p>This callback is called when the activity becomes visible to the user.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">3</td>\n<td>\n<p><strong>onResume()</strong></p>\n<p>This is called when the user starts interacting with the application.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">4</td>\n<td>\n<p><strong>onPause()</strong></p>\n<p>The paused activity does not receive user input and cannot execute any code and called when the current activity is being paused and the previous activity is being resumed.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">5</td>\n<td>\n<p><strong>onStop()</strong></p>\n<p>This callback is called when the activity is no longer visible.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">6</td>\n<td>\n<p><strong>onDestroy()</strong></p>\n<p>This callback is called before the activity is destroyed by the system.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">7</td>\n<td>\n<p><strong>onRestart()</strong></p>\n<p>This callback is called when the activity restarts after stopping it.</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>"
          ]
        },
        {
          "tag_line": "Android - Services (Auf Englisch)",
          "details": [
            "<blockquote>A <strong>service</strong> is a component that runs in the background to perform long-running operations without needing to interact with the user and it works even if application is destroyed. A service can essentially take two states &minus;</blockquote>\n<table class=\"table table-bordered\">\n<tbody>\n<tr>\n<th>Sr.No.</th>\n<th style=\"text-align: center;\">State &amp; Description</th>\n</tr>\n<tr>\n<td>1</td>\n<td>\n<p><strong>Started</strong></p>\n<p>A service is <strong>started</strong> when an application component, such as an activity, starts it by calling <em>startService()</em>. Once started, a service can run in the background indefinitely, even if the component that started it is destroyed.</p>\n</td>\n</tr>\n<tr>\n<td>2</td>\n<td>\n<p><strong>Bound</strong></p>\n<p>A service is <strong>bound</strong> when an application component binds to it by calling <em>bindService()</em>. A bound service offers a client-server interface that allows components to interact with the service, send requests, get results, and even do so across processes with interprocess communication (IPC).</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>A service has life cycle callback methods that you can implement to monitor changes in the service's state and you can perform work at the appropriate stage. The following diagram on the left shows the life cycle when the service is created with startService() and the diagram on the right shows the life cycle when the service is created with bindService(): <em>(image courtesy : android.com )</em></p>\n<p><img src=\"https://www.tutorialspoint.com/android/images/services.jpg\" alt=\"Android Service lifecycle\" /></p>\n<p>To create an service, you create a Java class that extends the Service base class or one of its existing subclasses. The <strong>Service</strong> base class defines various callback methods and the most important are given below. You don't need to implement all the callbacks methods. However, it's important that you understand each one and implement those that ensure your app behaves the way users expect.</p>\n<table class=\"table table-bordered\">\n<tbody>\n<tr>\n<th>Sr.No.</th>\n<th style=\"text-align: center;\">Callback &amp; Description</th>\n</tr>\n<tr>\n<td>1</td>\n<td>\n<p><strong>onStartCommand()</strong></p>\n<p>The system calls this method when another component, such as an activity, requests that the service be started, by calling <em>startService()</em>. If you implement this method, it is your responsibility to stop the service when its work is done, by calling <em>stopSelf()</em> or <em>stopService()</em> methods.</p>\n</td>\n</tr>\n<tr>\n<td>2</td>\n<td>\n<p><strong>onBind()</strong></p>\n<p>The system calls this method when another component wants to bind with the service by calling <em>bindService()</em>. If you implement this method, you must provide an interface that clients use to communicate with the service, by returning an <em>IBinder</em> object. You must always implement this method, but if you don't want to allow binding, then you should return <em>null</em>.</p>\n</td>\n</tr>\n<tr>\n<td>3</td>\n<td>\n<p><strong>onUnbind()</strong></p>\n<p>The system calls this method when all clients have disconnected from a particular interface published by the service.</p>\n</td>\n</tr>\n<tr>\n<td>4</td>\n<td>\n<p><strong>onRebind()</strong></p>\n<p>The system calls this method when new clients have connected to the service, after it had previously been notified that all had disconnected in its <em>onUnbind(Intent)</em>.</p>\n</td>\n</tr>\n<tr>\n<td>5</td>\n<td>\n<p><strong>onCreate()</strong></p>\n<p>The system calls this method when the service is first created using <em>onStartCommand()</em> or <em>onBind()</em>. This call is required to perform one-time set-up.</p>\n</td>\n</tr>\n<tr>\n<td>6</td>\n<td>\n<p><strong>onDestroy()</strong></p>\n<p>The system calls this method when the service is no longer used and is being destroyed. Your service should implement this to clean up any resources such as threads, registered listeners, receivers, etc.</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>"
          ]
        },
        {
          "tag_line": "Android - Broadcast Receivers (Auf Englisch)",
          "details": [
            "<blockquote>\n<p><strong>Broadcast Receivers </strong>simply respond to broadcast messages from other applications or from the system itself. These messages are sometime called events or intents. For example, applications can also initiate broadcasts to let other applications know that some data has been downloaded to the device and is available for them to use, so this is broadcast receiver who will intercept this communication and will initiate appropriate action.</p>\n</blockquote>\n<p>There are following two important steps to make BroadcastReceiver works for the system broadcasted intents &minus;</p>\n<ul class=\"list\">\n<li>\n<p>Creating the Broadcast Receiver.</p>\n</li>\n<li>\n<p>Registering Broadcast Receiver</p>\n</li>\n</ul>\n<p>There is one additional steps in case you are going to implement your custom intents then you will have to create and broadcast those intents.</p>\n<h2>Creating the Broadcast Receiver</h2>\n<p>A broadcast receiver is implemented as a subclass of <strong>BroadcastReceiver</strong> class and overriding the onReceive() method where each message is received as a <strong>Intent</strong> object parameter.</p>\n<pre class=\"prettyprint notranslte prettyprinted\"><span class=\"kwd\">public</span> <span class=\"kwd\">class</span> <span class=\"typ\">MyReceiver</span> <span class=\"kwd\">extends</span> <span class=\"typ\">BroadcastReceiver</span> <span class=\"pun\">{</span>\n   <span class=\"lit\">@Override</span>\n   <span class=\"kwd\">public</span> <span class=\"kwd\">void</span><span class=\"pln\"> onReceive</span><span class=\"pun\">(</span><span class=\"typ\">Context</span><span class=\"pln\"> context</span><span class=\"pun\">,</span> <span class=\"typ\">Intent</span><span class=\"pln\"> intent</span><span class=\"pun\">)</span> <span class=\"pun\">{</span>\n      <span class=\"typ\">Toast</span><span class=\"pun\">.</span><span class=\"pln\">makeText</span><span class=\"pun\">(</span><span class=\"pln\">context</span><span class=\"pun\">,</span> <span class=\"str\">\"Intent Detected.\"</span><span class=\"pun\">,</span> <span class=\"typ\">Toast</span><span class=\"pun\">.</span><span class=\"pln\">LENGTH_LONG</span><span class=\"pun\">).</span><span class=\"pln\">show</span><span class=\"pun\">();</span>\n   <span class=\"pun\">}</span>\n<span class=\"pun\">}</span></pre>\n<h2>Registering Broadcast Receiver</h2>\n<p>An application listens for specific broadcast intents by registering a broadcast receiver in <em>AndroidManifest.xml</em> file. Consider we are going to register <em>MyReceiver</em> for system generated event ACTION_BOOT_COMPLETED which is fired by the system once the Android system has completed the boot process.</p>\n<p><img src=\"https://www.tutorialspoint.com/android/images/broadcast.jpg\" alt=\"broadcast\" /></p>\n<h4 align=\"center\">Broadcast-Receiver</h4>\n<pre class=\"prettyprint notranslte prettyprinted\"><span class=\"tag\">&lt;application</span>\n   <span class=\"atn\">android:icon</span><span class=\"pun\">=</span><span class=\"atv\">\"@drawable/ic_launcher\"</span>\n   <span class=\"atn\">android:label</span><span class=\"pun\">=</span><span class=\"atv\">\"@string/app_name\"</span>\n   <span class=\"atn\">android:theme</span><span class=\"pun\">=</span><span class=\"atv\">\"@style/AppTheme\"</span> <span class=\"tag\">&gt;</span>\n   <span class=\"tag\">&lt;receiver</span> <span class=\"atn\">android:name</span><span class=\"pun\">=</span><span class=\"atv\">\"MyReceiver\"</span><span class=\"tag\">&gt;</span>\n   \n      <span class=\"tag\">&lt;intent-filter&gt;</span>\n         <span class=\"tag\">&lt;action</span> <span class=\"atn\">android:name</span><span class=\"pun\">=</span><span class=\"atv\">\"android.intent.action.BOOT_COMPLETED\"</span><span class=\"tag\">&gt;</span>\n         <span class=\"tag\">&lt;/action&gt;</span>\n      <span class=\"tag\">&lt;/intent-filter&gt;</span>\n   \n   <span class=\"tag\">&lt;/receiver&gt;</span>\n<span class=\"tag\">&lt;/application&gt;</span></pre>\n<p>Now whenever your Android device gets booted, it will be intercepted by BroadcastReceiver <em>MyReceiver</em> and implemented logic inside <em>onReceive()</em> will be executed.</p>\n<p>There are several system generated events defined as final static fields in the <strong>Intent</strong> class. The following table lists a few important system events.</p>\n<table class=\"table table-bordered\">\n<tbody>\n<tr>\n<th style=\"text-align: center;\">Sr.No</th>\n<th style=\"text-align: center;\">Event Constant &amp; Description</th>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">1</td>\n<td>\n<p><strong>android.intent.action.BATTERY_CHANGED</strong></p>\n<p>Sticky broadcast containing the charging state, level, and other information about the battery.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">2</td>\n<td>\n<p><strong>android.intent.action.BATTERY_LOW</strong></p>\n<p>Indicates low battery condition on the device.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">3</td>\n<td>\n<p><strong>android.intent.action.BATTERY_OKAY</strong></p>\n<p>Indicates the battery is now okay after being low.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">4</td>\n<td>\n<p><strong>android.intent.action.BOOT_COMPLETED</strong></p>\n<p>This is broadcast once, after the system has finished booting.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">5</td>\n<td>\n<p><strong>android.intent.action.BUG_REPORT</strong></p>\n<p>Show activity for reporting a bug.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">6</td>\n<td>\n<p><strong>android.intent.action.CALL</strong></p>\n<p>Perform a call to someone specified by the data.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">7</td>\n<td>\n<p><strong>android.intent.action.CALL_BUTTON</strong></p>\n<p>The user pressed the \"call\" button to go to the dialer or other appropriate UI for placing a call.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">8</td>\n<td>\n<p><strong>android.intent.action.DATE_CHANGED</strong></p>\n<p>The date has changed.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">9</td>\n<td>\n<p><strong>android.intent.action.REBOOT</strong></p>\n<p>Have the device reboot.</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>"
          ]
        },
        {
          "tag_line": "Android - Content Providers (Auf Englisch)",
          "details": [
            "<blockquote>\n<p>A content provider component supplies data from one application to others on request. Such requests are handled by the methods of the ContentResolver class. A content provider can use different ways to store its data and the data can be stored in a database, in files, or even over a network.</p>\n</blockquote>\n<p><img src=\"https://www.tutorialspoint.com/android/images/content.jpg\" alt=\"content provider\" /></p>\n<h4 align=\"center\">ContentProvider</h4>\n<blockquote><strong>sometimes it is required to share data across applications. This is where content providers become very useful.</strong></blockquote>\n<p>Content providers let you centralize content in one place and have many different applications access it as needed. A content provider behaves very much like a database where you can query it, edit its content, as well as add or delete content using insert(), update(), delete(), and query() methods. In most cases this data is stored in an <strong>SQlite</strong> database.</p>\n<p>A content provider is implemented as a subclass of <strong>ContentProvider</strong> class and must implement a standard set of APIs that enable other applications to perform transactions.</p>\n<pre class=\"prettyprint notranslate prettyprinted\"><span class=\"kwd\">public</span> <span class=\"kwd\">class</span> <span class=\"typ\">My</span> <span class=\"typ\">Application</span> <span class=\"kwd\">extends</span>  <span class=\"typ\">ContentProvider</span> <span class=\"pun\">{</span>\n<span class=\"pun\">}</span></pre>\n<h2>Content URIs</h2>\n<p>To query a content provider, you specify the query string in the form of a URI which has following format &minus;</p>\n<pre class=\"prettyprint notranslate prettyprinted\"><span class=\"tag\">&lt;prefix&gt;</span><span class=\"pln\">://</span><span class=\"tag\">&lt;authority&gt;</span><span class=\"pln\">/</span><span class=\"tag\">&lt;data_type&gt;</span><span class=\"pln\">/</span><span class=\"tag\">&lt;id&gt;</span></pre>\n<p>Here is the detail of various parts of the URI &minus;</p>\n<table class=\"table table-bordered\">\n<tbody>\n<tr>\n<th style=\"text-align: center;\">Sr.No</th>\n<th style=\"text-align: center;\">Part &amp; Description</th>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">1</td>\n<td>\n<p><strong>prefix</strong></p>\n<p>This is always set to content://</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">2</td>\n<td>\n<p><strong>authority</strong></p>\n<p>This specifies the name of the content provider, for example <em>contacts</em>, <em>browser</em> etc. For third-party content providers, this could be the fully qualified name, such as <em>com.tutorialspoint.statusprovider</em></p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">3</td>\n<td>\n<p><strong>data_type</strong></p>\n<p>This indicates the type of data that this particular provider provides. For example, if you are getting all the contacts from the <em>Contacts</em> content provider, then the data path would be <em>people</em> and URI would look like this<em>content://contacts/people</em></p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">4</td>\n<td>\n<p><strong>id</strong></p>\n<p>This specifies the specific record requested. For example, if you are looking for contact number 5 in the Contacts content provider then URI would look like this <em>content://contacts/people/5</em>.</p>\n</td>\n</tr>\n</tbody>\n</table>\n<h2>Create Content Provider</h2>\n<p>This involves number of simple steps to create your own content provider.</p>\n<ul class=\"list\">\n<li>\n<p>First of all you need to create a Content Provider class that extends the <em>ContentProviderbaseclass.</em></p>\n</li>\n<li>\n<p>Second, you need to define your content provider URI address which will be used to access the content.</p>\n</li>\n<li>\n<p>Next you will need to create your own database to keep the content. Usually, Android uses SQLite database and framework needs to override <em>onCreate()</em> method which will use SQLite Open Helper method to create or open the provider's database. When your application is launched, the <em>onCreate()</em> handler of each of its Content Providers is called on the main application thread.</p>\n</li>\n<li>\n<p>Next you will have to implement Content Provider queries to perform different database specific operations.</p>\n</li>\n<li>\n<p>Finally register your Content Provider in your activity file using &lt;provider&gt; tag.</p>\n</li>\n</ul>\n<p>Here is the list of methods which you need to override in Content Provider class to have your Content Provider working &minus;</p>\n<p><img src=\"https://www.tutorialspoint.com/android/images/content1.jpg\" alt=\"content provider\" /></p>\n<h4 align=\"center\">ContentProvider</h4>\n<ul class=\"list\">\n<li>\n<p><strong>onCreate()</strong> This method is called when the provider is started.</p>\n</li>\n<li>\n<p><strong>query()</strong> This method receives a request from a client. The result is returned as a Cursor object.</p>\n</li>\n<li>\n<p><strong>insert()</strong>This method inserts a new record into the content provider.</p>\n</li>\n<li>\n<p><strong>delete()</strong> This method deletes an existing record from the content provider.</p>\n</li>\n<li>\n<p><strong>update()</strong> This method updates an existing record from the content provider.</p>\n</li>\n<li>\n<p><strong>getType()</strong> This method returns the MIME type of the data at the given URI.</p>\n</li>\n</ul>\n<h2>Example</h2>\n<p>This example will explain you how to create your own <em>ContentProvider</em>. So let's follow the following steps to similar to what we followed while creating <em>Hello World Example</em>&minus;</p>\n<table class=\"table table-bordered\">\n<tbody>\n<tr>\n<th style=\"text-align: center;\">Step</th>\n<th style=\"text-align: center;\">Description</th>\n</tr>\n<tr>\n<td style=\"text-align: center;\">1</td>\n<td>You will use Android StudioIDE to create an Android application and name it as <em>My Application</em> under a package <em>com.example.MyApplication</em>, with blank Activity.</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">2</td>\n<td>Modify main activity file <em>MainActivity.java</em> to add two new methods <em>onClickAddName()</em> and <em>onClickRetrieveStudents()</em>.</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">3</td>\n<td>Create a new java file called <em>StudentsProvider.java</em> under the package <em>com.example.MyApplication</em> to define your actual provider and associated methods.</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">4</td>\n<td>Register your content provider in your <em>AndroidManifest.xml</em> file using &lt;provider.../&gt; tag</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">5</td>\n<td>Modify the default content of <em>res/layout/activity_main.xml</em> file to include a small GUI to add students records.</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">6</td>\n<td>No need to change string.xml.Android studio take care of string.xml file.</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">7</td>\n<td>Run the application to launch Android emulator and verify the result of the changes done in the application.</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>"
          ]
        },        {
          "tag_line": "Android - Fragments (Auf Englisch)",
          "details": [
            "<blockquote>A <strong>Fragment </strong>is a piece of an activity which enable more modular activity design. It will not be wrong if we say, a fragment is a kind of <strong>sub-activity</strong>.</blockquote>\n<p>Following are important points about fragment &minus;</p>\n<ul class=\"list\">\n<li>\n<p>A fragment has its own layout and its own behaviour with its own life cycle callbacks.</p>\n</li>\n<li>\n<p>You can add or remove fragments in an activity while the activity is running.</p>\n</li>\n<li>\n<p>You can combine multiple fragments in a single activity to build a multi-pane UI.</p>\n</li>\n<li>\n<p>A fragment can be used in multiple activities.</p>\n</li>\n<li>\n<p>Fragment life cycle is closely related to the life cycle of its host activity which means when the activity is paused, all the fragments available in the activity will also be stopped.</p>\n</li>\n<li>\n<p>A fragment can implement a behaviour that has no user interface component.</p>\n</li>\n<li>\n<p>Fragments were added to the Android API in Honeycomb version of Android which API version 11.</p>\n</li>\n</ul>\n<p>You create fragments by extending <strong>Fragment</strong> class and You can insert a fragment into your activity layout by declaring the fragment in the activity's layout file, as a <strong>&lt;fragment&gt;</strong> element.</p>\n<p>Prior to fragment introduction, we had a limitation because we can show only a single activity on the screen at one given point in time. So we were not able to divide device screen and control different parts separately. But with the introduction of fragment we got more flexibility and removed the limitation of having a single activity on the screen at a time. Now we can have a single activity but each activity can comprise of multiple fragments which will have their own layout, events and complete life cycle.</p>\n<p>Following is a typical example of how two UI modules defined by fragments can be combined into one activity for a tablet design, but separated for a handset design.</p>\n<p><img src=\"https://www.tutorialspoint.com/android/images/android_fragments.jpg\" alt=\"Android Fragment\" /></p>\n<p>The application can embed two fragments in Activity A, when running on a tablet-sized device. However, on a handset-sized screen, there's not enough room for both fragments, so Activity A includes only the fragment for the list of articles, and when the user selects an article, it starts Activity B, which includes the second fragment to read the article.</p>\n<h2>Fragment Life Cycle</h2>\n<p>Android fragments have their own life cycle very similar to an android activity. This section briefs different stages of its life cycle.</p>\n<p><img src=\"https://www.tutorialspoint.com/android/images/fragment.jpg\" alt=\"Fragment\" /></p>\n<h4 align=\"Center\">Fragment lifecycle</h4>\n<p>Here is the list of methods which you can to override in your fragment class &minus;</p>\n<ul class=\"list\">\n<li>\n<p><strong>onAttach()</strong>The fragment instance is associated with an activity instance.The fragment and the activity is not fully initialized. Typically you get in this method a reference to the activity which uses the fragment for further initialization work.</p>\n</li>\n<li>\n<p><strong>onCreate()</strong> The system calls this method when creating the fragment. You should initialize essential components of the fragment that you want to retain when the fragment is paused or stopped, then resumed.</p>\n</li>\n<li>\n<p><strong>onCreateView()</strong> The system calls this callback when it's time for the fragment to draw its user interface for the first time. To draw a UI for your fragment, you must return a <strong>View</strong> component from this method that is the root of your fragment's layout. You can return null if the fragment does not provide a UI.</p>\n</li>\n<li>\n<p><strong>onActivityCreated()</strong>The onActivityCreated() is called after the onCreateView() method when the host activity is created. Activity and fragment instance have been created as well as the view hierarchy of the activity. At this point, view can be accessed with the findViewById() method. example. In this method you can instantiate objects which require a Context object</p>\n</li>\n<li>\n<p><strong>onStart()</strong>The onStart() method is called once the fragment gets visible.</p>\n</li>\n<li>\n<p><strong>onResume()</strong>Fragment becomes active.</p>\n</li>\n<li>\n<p><strong>onPause()</strong> The system calls this method as the first indication that the user is leaving the fragment. This is usually where you should commit any changes that should be persisted beyond the current user session.</p>\n</li>\n<li>\n<p><strong>onStop()</strong>Fragment going to be stopped by calling onStop()</p>\n</li>\n<li>\n<p><strong>onDestroyView()</strong>Fragment view will destroy after call this method</p>\n</li>\n<li>\n<p><strong>onDestroy()</strong>onDestroy() called to do final clean up of the fragment's state but Not guaranteed to be called by the Android platform.</p>\n</li>\n</ul>\n<h2>How to use Fragments?</h2>\n<p>This involves number of simple steps to create Fragments.</p>\n<ul class=\"list\">\n<li>\n<p>First of all decide how many fragments you want to use in an activity. For example let's we want to use two fragments to handle landscape and portrait modes of the device.</p>\n</li>\n<li>\n<p>Next based on number of fragments, create classes which will extend the <em>Fragment</em> class. The Fragment class has above mentioned callback functions. You can override any of the functions based on your requirements.</p>\n</li>\n<li>\n<p>Corresponding to each fragment, you will need to create layout files in XML file. These files will have layout for the defined fragments.</p>\n</li>\n<li>\n<p>Finally modify activity file to define the actual logic of replacing fragments based on your requirement.</p>\n</li>\n</ul>\n<h2>Types of Fragments</h2>\n<p>Basically fragments are divided as three stages as shown below.</p>\n<ul class=\"list\">\n<li>\n<p><a href=\"https://www.tutorialspoint.com/android/android_single_fragments.htm\">Single frame fragments</a> &minus; Single frame fragments are using for hand hold devices like mobiles, here we can show only one fragment as a view.</p>\n</li>\n<li>\n<p><a href=\"https://www.tutorialspoint.com/android/android_list_fragment.htm\">List fragments</a> &minus; fragments having special list view is called as list fragment</p>\n</li>\n<li>\n<p><a href=\"https://www.tutorialspoint.com/android/android_fragment_transitions.htm\">Fragments transaction</a> &minus; Using with fragment transaction. we can move one fragment to another fragment.</p>\n</li>\n</ul>"
          ]
        },
        {
          "tag_line": "Android - Intents and Filters (Auf Englisch)",
          "details": [
            "<p>An Android <strong>Intent</strong> is an abstract description of an operation to be performed. It can be used with <strong>startActivity</strong> to launch an Activity, <strong>broadcastIntent</strong> to send it to any interested BroadcastReceiver components, and <strong>startService(Intent)</strong> or <strong>bindService(Intent, ServiceConnection, int) </strong> to communicate with a background Service.</p>\n<blockquote><strong>The intent itself, an Intent object, is a passive data structure holding an abstract description of an operation to be performed.</strong></blockquote>\n<p>For example, let's assume that you have an Activity that needs to launch an email client and sends an email using your Android device. For this purpose, your Activity would send an ACTION_SEND along with appropriate <strong>chooser</strong>, to the Android Intent Resolver. The specified chooser gives the proper interface for the user to pick how to send your email data.</p>\n<pre class=\"prettyprint notranslate prettyprinted\"><span class=\"typ\">Intent</span><span class=\"pln\"> email </span><span class=\"pun\">=</span> <span class=\"kwd\">new</span> <span class=\"typ\">Intent</span><span class=\"pun\">(</span><span class=\"typ\">Intent</span><span class=\"pun\">.</span><span class=\"pln\">ACTION_SEND</span><span class=\"pun\">,</span> <span class=\"typ\">Uri</span><span class=\"pun\">.</span><span class=\"pln\">parse</span><span class=\"pun\">(</span><span class=\"str\">\"mailto:\"</span><span class=\"pun\">));</span><span class=\"pln\">\nemail</span><span class=\"pun\">.</span><span class=\"pln\">putExtra</span><span class=\"pun\">(</span><span class=\"typ\">Intent</span><span class=\"pun\">.</span><span class=\"pln\">EXTRA_EMAIL</span><span class=\"pun\">,</span><span class=\"pln\"> recipients</span><span class=\"pun\">);</span><span class=\"pln\">\nemail</span><span class=\"pun\">.</span><span class=\"pln\">putExtra</span><span class=\"pun\">(</span><span class=\"typ\">Intent</span><span class=\"pun\">.</span><span class=\"pln\">EXTRA_SUBJECT</span><span class=\"pun\">,</span><span class=\"pln\"> subject</span><span class=\"pun\">.</span><span class=\"pln\">getText</span><span class=\"pun\">().</span><span class=\"pln\">toString</span><span class=\"pun\">());</span><span class=\"pln\">\nemail</span><span class=\"pun\">.</span><span class=\"pln\">putExtra</span><span class=\"pun\">(</span><span class=\"typ\">Intent</span><span class=\"pun\">.</span><span class=\"pln\">EXTRA_TEXT</span><span class=\"pun\">,</span><span class=\"pln\"> body</span><span class=\"pun\">.</span><span class=\"pln\">getText</span><span class=\"pun\">().</span><span class=\"pln\">toString</span><span class=\"pun\">());</span><span class=\"pln\">\nstartActivity</span><span class=\"pun\">(</span><span class=\"typ\">Intent</span><span class=\"pun\">.</span><span class=\"pln\">createChooser</span><span class=\"pun\">(</span><span class=\"pln\">email</span><span class=\"pun\">,</span> <span class=\"str\">\"Choose an email client from...\"</span><span class=\"pun\">));</span></pre>\n<p>Above syntax is calling startActivity method to start an email activity and result should be as shown below &minus;</p>\n<p><img src=\"https://www.tutorialspoint.com/android/images/send_email.jpg\" alt=\"Send Email\" /></p>\n<p>For example, assume that you have an Activity that needs to open URL in a web browser on your Android device. For this purpose, your Activity will send ACTION_WEB_SEARCH Intent to the Android Intent Resolver to open given URL in the web browser. The Intent Resolver parses through a list of Activities and chooses the one that would best match your Intent, in this case, the Web Browser Activity. The Intent Resolver then passes your web page to the web browser and starts the Web Browser Activity.</p>\n<pre class=\"prettyprint notranslate prettyprinted\"><span class=\"typ\">String</span><span class=\"pln\"> q </span><span class=\"pun\">=</span> <span class=\"str\">\"tutorialspoint\"</span><span class=\"pun\">;</span>\n<span class=\"typ\">Intent</span><span class=\"pln\"> intent </span><span class=\"pun\">=</span> <span class=\"kwd\">new</span> <span class=\"typ\">Intent</span><span class=\"pun\">(</span><span class=\"typ\">Intent</span><span class=\"pun\">.</span><span class=\"pln\">ACTION_WEB_SEARCH </span><span class=\"pun\">);</span><span class=\"pln\">\nintent</span><span class=\"pun\">.</span><span class=\"pln\">putExtra</span><span class=\"pun\">(</span><span class=\"typ\">SearchManager</span><span class=\"pun\">.</span><span class=\"pln\">QUERY</span><span class=\"pun\">,</span><span class=\"pln\"> q</span><span class=\"pun\">);</span><span class=\"pln\">\nstartActivity</span><span class=\"pun\">(</span><span class=\"pln\">intent</span><span class=\"pun\">);</span></pre>\n<p>Above example will search as <strong>tutorialspoint</strong> on android search engine and it gives the result of tutorialspoint in your an activity</p>\n<p>There are separate mechanisms for delivering intents to each type of component &minus; activities, services, and broadcast receivers.</p>\n<table class=\"table table-bordered\">\n<tbody>\n<tr>\n<th style=\"text-align: center;\">Sr.No</th>\n<th style=\"text-align: center;\">Method &amp; Description</th>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">1</td>\n<td>\n<p><strong>Context.startActivity()</strong></p>\n<p>The Intent object is passed to this method to launch a new activity or get an existing activity to do something new.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">2</td>\n<td>\n<p><strong>Context.startService()</strong></p>\n<p>The Intent object is passed to this method to initiate a service or deliver new instructions to an ongoing service.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">3</td>\n<td>\n<p><strong>Context.sendBroadcast()</strong></p>\n<p>The Intent object is passed to this method to deliver the message to all interested broadcast receivers.</p>\n</td>\n</tr>\n</tbody>\n</table>\n<h2>Intent Objects</h2>\n<p>An Intent object is a bundle of information which is used by the component that receives the intent as well as information used by the Android system.</p>\n<p>An Intent object can contain the following components based on what it is communicating or going to perform &minus;</p>\n<h3>Action</h3>\n<p>This is mandatory part of the Intent object and is a string naming the action to be performed &mdash; or, in the case of broadcast intents, the action that took place and is being reported. The action largely determines how the rest of the intent object is structured . The Intent class defines a number of action constants corresponding to different intents. Here is a list of <a href=\"https://www.tutorialspoint.com/android/android_intent_standard_actions.htm\">Android Intent Standard Actions</a></p>\n<p>The action in an Intent object can be set by the setAction() method and read by getAction().</p>\n<h3>Data</h3>\n<p>Adds a data specification to an intent filter. The specification can be just a data type (the mimeType attribute), just a URI, or both a data type and a URI. A URI is specified by separate attributes for each of its parts &minus;</p>\n<p>These attributes that specify the URL format are optional, but also mutually dependent &minus;</p>\n<ul class=\"list\">\n<li>If a scheme is not specified for the intent filter, all the other URI attributes are ignored.</li>\n<li>If a host is not specified for the filter, the port attribute and all the path attributes are ignored.</li>\n</ul>\n<p>The setData() method specifies data only as a URI, setType() specifies it only as a MIME type, and setDataAndType() specifies it as both a URI and a MIME type. The URI is read by getData() and the type by getType().</p>\n<p>Some examples of action/data pairs are &minus;</p>\n<table class=\"table table-bordered\">\n<tbody>\n<tr>\n<th style=\"text-align: center;\">Sr.No.</th>\n<th style=\"text-align: center;\">Action/Data Pair &amp; Description</th>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">1</td>\n<td>\n<p><strong>ACTION_VIEW content://contacts/people/1</strong></p>\n<p>Display information about the person whose identifier is \"1\".</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">2</td>\n<td>\n<p><strong>ACTION_DIAL content://contacts/people/1</strong></p>\n<p>Display the phone dialer with the person filled in.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">3</td>\n<td>\n<p><strong>ACTION_VIEW tel:123</strong></p>\n<p>Display the phone dialer with the given number filled in.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">4</td>\n<td>\n<p><strong>ACTION_DIAL tel:123</strong></p>\n<p>Display the phone dialer with the given number filled in.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">5</td>\n<td>\n<p><strong>ACTION_EDIT content://contacts/people/1</strong></p>\n<p>Edit information about the person whose identifier is \"1\".</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">6</td>\n<td>\n<p><strong>ACTION_VIEW content://contacts/people/</strong></p>\n<p>Display a list of people, which the user can browse through.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">7</td>\n<td>\n<p><strong>ACTION_SET_WALLPAPER</strong></p>\n<p>Show settings for choosing wallpaper</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">8</td>\n<td>\n<p><strong>ACTION_SYNC</strong></p>\n<p>It going to be synchronous the data,Constant Value is <strong>android.intent.action.SYNC </strong></p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">9</td>\n<td>\n<p><strong>ACTION_SYSTEM_TUTORIAL</strong></p>\n<p>It will start the platform-defined tutorial(Default tutorial or start up tutorial)</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">10</td>\n<td>\n<p><strong>ACTION_TIMEZONE_CHANGED</strong></p>\n<p>It intimates when time zone has changed</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">11</td>\n<td>\n<p><strong>ACTION_UNINSTALL_PACKAGE</strong></p>\n<p>It is used to run default uninstaller</p>\n</td>\n</tr>\n</tbody>\n</table>\n<h3>Category</h3>\n<p>The category is an optional part of Intent object and it's a string containing additional information about the kind of component that should handle the intent. The addCategory() method places a category in an Intent object, removeCategory() deletes a category previously added, and getCategories() gets the set of all categories currently in the object. Here is a list of <a href=\"https://www.tutorialspoint.com/android/android_intent_standard_categories.htm\">Android Intent Standard Categories</a>.</p>\n<p>You can check detail on Intent Filters in below section to understand how do we use categories to choose appropriate activity corresponding to an Intent.</p>\n<h3>Extras</h3>\n<p>This will be in key-value pairs for additional information that should be delivered to the component handling the intent. The extras can be set and read using the putExtras() and getExtras() methods respectively. Here is a list of <a href=\"https://www.tutorialspoint.com/android/android_intent_standard_extra_data.htm\">Android Intent Standard Extra Data</a></p>\n<h3>Flags</h3>\n<p>These flags are optional part of Intent object and instruct the Android system how to launch an activity, and how to treat it after it's launched etc.</p>\n<table class=\"table table-bordered\">\n<tbody>\n<tr>\n<th style=\"text-align: center;\">Sr.No</th>\n<th style=\"text-align: center;\">Flags &amp; Description</th>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">1</td>\n<td>\n<p><strong>FLAG_ACTIVITY_CLEAR_TASK</strong></p>\n<p>If set in an Intent passed to Context.startActivity(), this flag will cause any existing task that would be associated with the activity to be cleared before the activity is started. That is, the activity becomes the new root of an otherwise empty task, and any old activities are finished. This can only be used in conjunction with FLAG_ACTIVITY_NEW_TASK.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">2</td>\n<td>\n<p><strong>FLAG_ACTIVITY_CLEAR_TOP</strong></p>\n<p>If set, and the activity being launched is already running in the current task, then instead of launching a new instance of that activity, all of the other activities on top of it will be closed and this Intent will be delivered to the (now on top) old activity as a new Intent.</p>\n</td>\n</tr>\n<tr>\n<td style=\"text-align: center; vertical-align: middle;\">3</td>\n<td>\n<p><strong>FLAG_ACTIVITY_NEW_TASK</strong></p>\n<p>This flag is generally used by activities that want to present a \"launcher\" style behavior: they give the user a list of separate things that can be done, which otherwise run completely independently of the activity launching them.</p>\n</td>\n</tr>\n</tbody>\n</table>\n<h3>Component Name</h3>\n<p>This optional field is an android <strong>ComponentName</strong> object representing either Activity, Service or BroadcastReceiver class. If it is set, the Intent object is delivered to an instance of the designated class otherwise Android uses other information in the Intent object to locate a suitable target.</p>\n<p>The component name is set by setComponent(), setClass(), or setClassName() and read by getComponent().</p>\n<h2>Types of Intents</h2>\n<p>There are following two types of intents supported by Android</p>\n<p><img src=\"https://www.tutorialspoint.com/android/images/intent.jpg\" alt=\"Intent\" /></p>\n<h3>Explicit Intents</h3>\n<p>Explicit intent going to be connected internal world of application,suppose if you wants to connect one activity to another activity, we can do this quote by explicit intent, below image is connecting first activity to second activity by clicking button.</p>\n<p><img src=\"https://www.tutorialspoint.com/android/images/intent1.jpg\" alt=\"Explicit Intents\" /></p>\n<p>These intents designate the target component by its name and they are typically used for application-internal messages - such as an activity starting a subordinate service or launching a sister activity. For example &minus;</p>\n<pre class=\"prettyprint notranslate prettyprinted\"><span class=\"com\">// Explicit Intent by specifying its class name</span>\n<span class=\"typ\">Intent</span><span class=\"pln\"> i </span><span class=\"pun\">=</span> <span class=\"kwd\">new</span> <span class=\"typ\">Intent</span><span class=\"pun\">(</span><span class=\"typ\">FirstActivity</span><span class=\"pun\">.</span><span class=\"kwd\">this</span><span class=\"pun\">,</span> <span class=\"typ\">SecondActivity</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span>\n\n<span class=\"com\">// Starts TargetActivity</span><span class=\"pln\">\nstartActivity</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">);</span></pre>\n<h3>Implicit Intents</h3>\n<p>These intents do not name a target and the field for the component name is left blank. Implicit intents are often used to activate components in other applications. For example &minus;</p>\n<pre class=\"result notranslate\">Intent read1=new Intent();\nread1.setAction(android.content.Intent.ACTION_VIEW);\nread1.setData(ContactsContract.Contacts.CONTENT_URI);\nstartActivity(read1);\n</pre>\n<p>Above code will give result as shown below</p>\n<p><img src=\"https://www.tutorialspoint.com/android/images/intent4.jpg\" alt=\"Intent\" /></p>\n<p>The target component which receives the intent can use the <strong>getExtras()</strong> method to get the extra data sent by the source component. For example &minus;</p>\n<pre class=\"prettyprint notranslate prettyprinted\"><span class=\"com\">// Get bundle object at appropriate place in your code</span>\n<span class=\"typ\">Bundle</span><span class=\"pln\"> extras </span><span class=\"pun\">=</span><span class=\"pln\"> getIntent</span><span class=\"pun\">().</span><span class=\"pln\">getExtras</span><span class=\"pun\">();</span>\n\n<span class=\"com\">// Extract data using passed keys</span>\n<span class=\"typ\">String</span><span class=\"pln\"> value1 </span><span class=\"pun\">=</span><span class=\"pln\"> extras</span><span class=\"pun\">.</span><span class=\"pln\">getString</span><span class=\"pun\">(</span><span class=\"str\">\"Key1\"</span><span class=\"pun\">);</span>\n<span class=\"typ\">String</span><span class=\"pln\"> value2 </span><span class=\"pun\">=</span><span class=\"pln\"> extras</span><span class=\"pun\">.</span><span class=\"pln\">getString</span><span class=\"pun\">(</span><span class=\"str\">\"Key2\"</span><span class=\"pun\">);</span></pre>"
          ]
        }
      ]
    },
    {
      "title": "iOS",
      "content": [
        {
          "tag_line": "iOS - Objective C (Auf Englisch)",
          "details": [
            "<p>The language used in iOS development is objective C. It is an object-oriented language and hence, it would be easy for those who have some background in object-oriented programming languages.</p>\n<h2>Interface and Implementation</h2>\n<p>In Objective C, the file where the declaration of class is done is called the <b>interface file</b> and the file where the class is defined is called the <b>implementation file</b>.</p>\n<p>A simple interface file <b>MyClass.h</b> would look like the following −</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"lit\">@interface</span><span class=\"pln\"> </span><span class=\"typ\">MyClass</span><span class=\"pun\">:</span><span class=\"typ\">NSObject</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n   </span><span class=\"com\">// class variable declared here</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n\n</span><span class=\"com\">// class properties declared here</span><span class=\"pln\">\n</span><span class=\"com\">// class methods and instance methods declared here</span><span class=\"pln\">\n</span><span class=\"lit\">@end</span></pre>\n<p>The implementation file <b>MyClass.m</b> would be as follows −</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"lit\">@implementation</span><span class=\"pln\"> </span><span class=\"typ\">MyClass</span><span class=\"pln\">\n   </span><span class=\"com\">// class methods defined here</span><span class=\"pln\">\n</span><span class=\"lit\">@end</span></pre>\n<h2>Object Creation</h2>\n<p>Object creation is done as follows −</p>\n<pre class=\"result notranslate\">MyClass  *objectName = [[MyClass alloc]init] ;\n</pre>\n<h2>Methods</h2>\n<p>Method is declared in Objective C as follows −</p>\n<pre class=\"result notranslate\">-(returnType)methodName:(typeName) variable1 :(typeName)variable2;\n</pre>\n<p>An example is shown below.</p>\n<pre class=\"result notranslate\">-(void)calculateAreaForRectangleWithLength:(CGfloat)length \nandBreadth:(CGfloat)breadth;\n</pre>\n<p>You might be wondering what the <b>andBreadth</b> string is for; actually it’s an optional string, which helps us read and understand the method easily, especially at the time of calling. To call this method in the same class, we use the following statement −</p>\n<pre class=\"result notranslate\">[self calculateAreaForRectangleWithLength:30 andBreadth:20];\n</pre>\n<p>As said above, the use of andBreadth helps us understand that breadth is 20. Self is used to specify that it's a class method.</p>\n<h3>Class Methods</h3>\n<p>Class methods can be accessed directly without creating objects for the class. They don't have any variables and objects associated with it. An example is shown below.</p>\n<pre class=\"result notranslate\">+(void)simpleClassMethod;\n</pre>\n<p>It can be accessed by using the class name (let's assume the class name as MyClass) as follows −</p>\n<pre class=\"result notranslate\">[MyClass simpleClassMethod];\n</pre>\n<h3>Instance Methods</h3>\n<p>Instance methods can be accessed only after creating an object for the class. Memory is allocated to the instance variables. An example instance method is shown below.</p>\n<pre class=\"result notranslate\">-(void)simpleInstanceMethod; \n</pre>\n<p>It can be accessed after creating an object for the class as follows −</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"typ\">MyClass</span><span class=\"pln\">  </span><span class=\"pun\">*</span><span class=\"pln\">objectName </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">[[</span><span class=\"typ\">MyClass</span><span class=\"pln\"> alloc</span><span class=\"pun\">]</span><span class=\"pln\">init</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"pun\">[</span><span class=\"pln\">objectName simpleInstanceMethod</span><span class=\"pun\">];</span></pre>\n<h2>Important Data Types in Objective C</h2>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"width:10%;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data Type</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>NSString</b></p>\n<p>It is used for representing a string.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>CGfloat</b></p>\n<p>It is used for representing a floating point value (normal float is also allowed but it's better to use CGfloat).</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>NSInteger</b></p>\n<p>It is used for representing integer.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>BOOL</b></p>\n<p>It is used for representing Boolean (YES or NO are BOOL types allowed).</p></td>\n</tr>\n</tbody></table>\n<h2>Printing Logs</h2>\n<p>NSLog - used for printing a statement. It will be printed in the device logs and debug console in release and debug modes respectively. For example,</p>\n<pre class=\"result notranslate\">NSlog(@\"\");\n</pre>\n<h2>Control Structures</h2>\n<p>Most of the control structures are same as in C and C++, except for a few additions like for in statement.</p>\n<h2>Properties</h2>\n<p>For an external class to access the class, variable properties are used. For example,</p>\n<pre class=\"result notranslate\">@property(nonatomic , strong) NSString *myString;\n</pre>\n<h3>Accessing Properties</h3>\n<p>You can use dot operator to access properties. To access the above property, we will do the following.</p>\n<pre class=\"result notranslate\">self.myString = @\"Test\";\n</pre>\n<p>You can also use the set method as follows −</p>\n<pre class=\"result notranslate\">[self setMyString:@\"Test\"];\n</pre>\n<h2>Categories</h2>\n<p>Categories are used to add methods to the existing classes. By this way, we can add method to classes for which we don't have even implementation files where the actual class is defined. A sample category for our class is as follows −</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"lit\">@interface</span><span class=\"pln\"> </span><span class=\"typ\">MyClass</span><span class=\"pun\">(</span><span class=\"pln\">customAdditions</span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">-</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">void</span><span class=\"pun\">)</span><span class=\"pln\">sampleCategoryMethod</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"lit\">@end</span><span class=\"pln\">\n\n</span><span class=\"lit\">@implementation</span><span class=\"pln\"> </span><span class=\"typ\">MyClass</span><span class=\"pun\">(</span><span class=\"pln\">categoryAdditions</span><span class=\"pun\">)</span><span class=\"pln\">\n\n</span><span class=\"pun\">-(</span><span class=\"kwd\">void</span><span class=\"pun\">)</span><span class=\"pln\">sampleCategoryMethod </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"typ\">NSLog</span><span class=\"pun\">(@</span><span class=\"str\">\"Just a test category\"</span><span class=\"pun\">);</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<h2>Arrays</h2>\n<p>NSMutableArray and NSArray are the array classes used in objective C. As the name suggests, the former is mutable and the latter is immutable. An example is shown below.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"typ\">NSMutableArray</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">aMutableArray </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">[[</span><span class=\"typ\">NSMutableArray</span><span class=\"pln\"> alloc</span><span class=\"pun\">]</span><span class=\"pln\">init</span><span class=\"pun\">];</span><span class=\"pln\">\n</span><span class=\"pun\">[</span><span class=\"pln\">anArray addObject</span><span class=\"pun\">:@</span><span class=\"str\">\"firstobject\"</span><span class=\"pun\">];</span><span class=\"pln\">\n</span><span class=\"typ\">NSArray</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">aImmutableArray </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">[[</span><span class=\"typ\">NSArray</span><span class=\"pln\"> alloc</span><span class=\"pun\">]</span><span class=\"pln\">\ninitWithObjects</span><span class=\"pun\">:@</span><span class=\"str\">\"firstObject\"</span><span class=\"pun\">,</span><span class=\"kwd\">nil</span><span class=\"pun\">];</span></pre>"
          ]
        },
        {
          "tag_line": "iOS - UI Elements (Auf Englisch)",
          "details": [
            "<h2>What UI Elements are?</h2>\n<p>UI elements are the visual elements that we can see in our applications. Some of these elements respond to user interactions such as buttons, text fields and others are informative such as images, labels.</p>\n<h2>How to Add UI Elements?</h2>\n<p>We can add UI elements both in code and with the help of interface builder. Depending on the need we can use either one of them.</p>\n<h2>Our Focus</h2>\n<p>We'll be focussing more on adding UI elements through code in our applications. Using interface builder is simple and straight forward, we just need to drag and drop the UI elements.</p>\n<h2>Our Approach</h2>\n<p>We will create a simple iOS application and use it for explaining some of the UI elements.</p>\n<p><b>Step 1</b> − Create a Viewbased application as we did in our First iOS application.</p>\n<p><b>Step 2</b> − We will be only updating the ViewController.h and ViewController.m files.</p>\n<p><b>Step 3</b> − Then we add a method to our ViewController.m file specific for creating the UI element.</p>\n<p><b>Step 4</b> − We will call this method in our viewDidLoad method.</p>\n<p><b>Step 5</b> − The important lines of code have been explained in the code with single line comment above those lines.</p>\n<h2>List of UI Elements</h2>\n<p>UI specific elements and their related functionalities are explained below −</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"width:10%;\">Sr.No.</th>\n<th style=\"text-align:center;\">UI Specific Elements</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><a href=\"/ios/ios_ui_elements_text_field.htm\">Text Fields</a>\n<p>It is an UI element that enables the app to get user input.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><a href=\"/ios/ios_ui_elements_input_types_text_field.htm\">Input types - TextFields</a>\n<p>We can set the type of input that user can give by using the keyboard property of UITextField.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><a href=\"/ios/ios_ui_elements_buttons.htm\">Buttons</a>\n<p>It is used for handling user actions.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><a href=\"/ios/ios_ui_elements_labels.htm\">Label</a>\n<p>It is used for displaying static content.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><a href=\"/ios/ios_ui_elements_toolbar.htm\">Toolbar</a>\n<p>It is used if we want to manipulate something based on our current view.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><a href=\"/ios/ios_ui_elements_status_bar.htm\">Status Bar</a>\n<p>It displays the key information of device.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><a href=\"/ios/ios_ui_elements_navigation_bar.htm\">Navigation Bar</a>\n<p>It contains the navigation buttons of a navigation controller, which is a stack of view controllers which can be pushed and popped.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">8</td>\n<td><a href=\"/ios/ios_ui_elements_tab_bar.htm\">Tab bar</a>\n<p>It is generally used to switch between various subtasks, views or models within the same view.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">9</td>\n<td><a href=\"/ios/ios_ui_elements_imageview.htm\">Image View</a>\n<p>It is used to display a simple image or sequence of images.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">10</td>\n<td><a href=\"/ios/ios_ui_elements_scrollview.htm\">Scroll View</a>\n<p>It is used to display content that is more than the area of screen.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">11</td>\n<td><a href=\"/ios/ios_ui_elements_tableview.htm\">Table View</a>\n<p>It is used for displaying scrollable list of data in multiple rows and sections.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">12</td>\n<td><a href=\"/ios/ios_ui_elements_splitview.htm\">Split View</a>\n<p>It is used for displaying two panes with master pane controlling the information on detail pane.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">13</td>\n<td><a href=\"/ios/ios_ui_elements_textview.htm\">Text View</a>\n<p>It is used for diplaying scrollable list of text information that is optionally editable.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">14</td>\n<td><a href=\"/ios/ios_ui_elements_view_transition.htm\">View  Transition </a>\n<p>It explains the various view transitions between views.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">15</td>\n<td><a href=\"/ios/ios_ui_elements_picker.htm\">Pickers</a>\n<p>It is used for displaying for selecting a specific data from a list.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">16</td>\n<td><a href=\"/ios/ios_ui_elements_switches.htm\">Switches</a>\n<p>It is used as disable and enable for actions.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">17</td>\n<td><a href=\"/ios/ios_ui_elements_sliders.htm\">Sliders</a>\n<p>It is used to allow users to make adjustments to a value or process throughout a range of allowed values.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">18</td>\n<td><a href=\"/ios/ios_ui_elements_alerts.htm\">Alerts</a>\n<p>It is used to give important information to users.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">19</td>\n<td><a href=\"/ios/ios_ui_elements_icons.htm\">Icons</a>\n<p>It is an image representation used for an action or depict something related to the application.</p></td></tr></tbody></table>"
          ]
        },
        {
          "tag_line": "iOS - Accelerometer (Auf Englisch)",
          "details": [
            "<p>Accelerometer is used for detecting the changes in the position of the device in the three directions x, y and z. We can know the current position of the device relative to the ground. For testing this example, you'll need to run it on a <b>device</b> and to doesn't work on simulator.</p>\n<h2>Accelerometer – Steps Involved</h2>\n<p><b>Step 1</b> − Create a simple <b>View based application</b>.</p>\n<p><b>Step 2</b> − Add three labels in <b>ViewController.xib</b> and create ibOutlets naming them as xlabel, ylabel, and zlabel.</p>\n<p><b>Step 3</b> − Update ViewController.h as follows −</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"com\">#import &lt;UIKit/UIKit.h&gt;</span><span class=\"pln\">\n\n</span><span class=\"lit\">@interface</span><span class=\"pln\"> </span><span class=\"typ\">ViewController</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">UIViewController</span><span class=\"pun\">&lt;</span><span class=\"typ\">UIAccelerometerDelegate</span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"typ\">IBOutlet</span><span class=\"pln\"> </span><span class=\"typ\">UILabel</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">xlabel</span><span class=\"pun\">;</span><span class=\"pln\">\n   </span><span class=\"typ\">IBOutlet</span><span class=\"pln\"> </span><span class=\"typ\">UILabel</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">ylabel</span><span class=\"pun\">;</span><span class=\"pln\">\n   </span><span class=\"typ\">IBOutlet</span><span class=\"pln\"> </span><span class=\"typ\">UILabel</span><span class=\"pln\"> </span><span class=\"pun\">*</span><span class=\"pln\">zlabel</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"lit\">@end</span></pre>\n<p><b>Step 4</b> − Update <b>ViewController.m</b> as follows −</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"com\">#import \"ViewController.h\"</span><span class=\"pln\">\n\n</span><span class=\"lit\">@interface</span><span class=\"pln\"> </span><span class=\"typ\">ViewController</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\">\n</span><span class=\"lit\">@end</span><span class=\"pln\">\n\n</span><span class=\"lit\">@implementation</span><span class=\"pln\"> </span><span class=\"typ\">ViewController</span><span class=\"pln\">\n\n</span><span class=\"pun\">-</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">void</span><span class=\"pun\">)</span><span class=\"pln\">viewDidLoad </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"pun\">[</span><span class=\"kwd\">super</span><span class=\"pln\"> viewDidLoad</span><span class=\"pun\">];</span><span class=\"pln\">\n   </span><span class=\"pun\">[[</span><span class=\"typ\">UIAccelerometer</span><span class=\"pln\"> sharedAccelerometer</span><span class=\"pun\">]</span><span class=\"pln\">setDelegate</span><span class=\"pun\">:</span><span class=\"kwd\">self</span><span class=\"pun\">];</span><span class=\"pln\">\n   </span><span class=\"com\">//Do any additional setup after loading the view,typically from a nib</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n\n</span><span class=\"pun\">-</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">void</span><span class=\"pun\">)</span><span class=\"pln\">didReceiveMemoryWarning </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"pun\">[</span><span class=\"kwd\">super</span><span class=\"pln\"> didReceiveMemoryWarning</span><span class=\"pun\">];</span><span class=\"pln\">\n   </span><span class=\"com\">// Dispose of any resources that can be recreated.</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n\n</span><span class=\"pun\">-</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">void</span><span class=\"pun\">)</span><span class=\"pln\">accelerometer</span><span class=\"pun\">:(</span><span class=\"typ\">UIAccelerometer</span><span class=\"pln\"> </span><span class=\"pun\">*)</span><span class=\"pln\">accelerometer didAccelerate</span><span class=\"pun\">:</span><span class=\"pln\">\n   </span><span class=\"pun\">(</span><span class=\"typ\">UIAcceleration</span><span class=\"pln\"> </span><span class=\"pun\">*)</span><span class=\"pln\">acceleration </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"pun\">[</span><span class=\"pln\">xlabel setText</span><span class=\"pun\">:[</span><span class=\"typ\">NSString</span><span class=\"pln\"> stringWithFormat</span><span class=\"pun\">:@</span><span class=\"str\">\"%f\"</span><span class=\"pun\">,</span><span class=\"pln\">acceleration</span><span class=\"pun\">.</span><span class=\"pln\">x</span><span class=\"pun\">]];</span><span class=\"pln\">\n   </span><span class=\"pun\">[</span><span class=\"pln\">ylabel setText</span><span class=\"pun\">:[</span><span class=\"typ\">NSString</span><span class=\"pln\"> stringWithFormat</span><span class=\"pun\">:@</span><span class=\"str\">\"%f\"</span><span class=\"pun\">,</span><span class=\"pln\">acceleration</span><span class=\"pun\">.</span><span class=\"pln\">y</span><span class=\"pun\">]];</span><span class=\"pln\">\n   </span><span class=\"pun\">[</span><span class=\"pln\">zlabel setText</span><span class=\"pun\">:[</span><span class=\"typ\">NSString</span><span class=\"pln\"> stringWithFormat</span><span class=\"pun\">:@</span><span class=\"str\">\"%f\"</span><span class=\"pun\">,</span><span class=\"pln\">acceleration</span><span class=\"pun\">.</span><span class=\"pln\">z</span><span class=\"pun\">]];</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"lit\">@end</span></pre>\n<h2>Output</h2>\n<p>When we run the application in <b>iPhone</b> device, we'll get the following output −</p>\n"
          ]
        },
        {
          "tag_line": "iOS - Memory Management (Auf Englisch)",
          "details": [
            "<p>Memory management in iOS was initially non-ARC (Automatic Reference Counting), where we have to retain and release the objects. Now, it supports ARC and we don't have to retain and release the objects. Xcode takes care of the job automatically in compile time.</p>\n<h2>Memory Management Issues</h2>\n<p>As per Apple documentation, the two major issues in memory management are −</p>\n<ul class=\"list\">\n<li><p>Freeing or overwriting data that is still in use. It causes memory corruption and typically results in your application crashing, or worse, corrupted user data.</p></li>\n<li><p>Not freeing data that is no longer in use causes memory leaks. When allocated memory is not freed even though it is never going to be used again, it is known as memory leak. Leaks cause your application to use ever-increasing amounts of memory, which in turn may result in poor system performance or (in iOS) your application being terminated.</p></li>\n</ul>\n<h2>Memory Management Rules</h2>\n<ul class=\"list\">\n<li><p>We own the objects we create, and we have to subsequently release them when they are no longer needed.</p></li>\n<li><p>Use Retain to gain ownership of an object that you did not create. You have to release these objects too when they are not needed.</p></li>\n<li><p>Don't release the objects that you don't own.</p></li>\n</ul>\n<h2>Handling Memory in ARC</h2>\n<p>You don't need to use release and retain in ARC. So, all the view controller's objects will be released when the view controller is removed. Similarly, any object’s sub-objects will be released when they are released. Note that if other classes have a strong reference to an object of a class, then the whole class won't be released. So, it is recommended to use weak properties for delegates.</p>\n<h2>Memory Management Tools</h2>\n<p>We can analyze the usage of memory with the help of Xcode tool instruments. It includes tools such as Activity Monitor, Allocations, Leaks, Zombies, and so on.</p>\n<h2>Steps for Analyzing Memory Allocations</h2>\n<p><b>Step 1</b> − Open an existing application.</p>\n<p><b>Step 2</b> − Select Product and then Profile as shown below.</p>\n<img src=\"/ios/images/mm_profile.jpg\" alt=\"iOS Tutorial\">\n<p><b>Step 3</b> − Select Allocations in the next screen shown below and select Profile.</p>\n<img src=\"/ios/images/mm_profileselect.jpg\" alt=\"iOS Tutorial\">\n<p><b>Step 4</b> − We will see the allocation of memory for different objects as shown below.</p>\n<p><b>Step 5</b> − You can switch between view controllers and check whether the memory is released properly.</p>\n<img src=\"/ios/images/mm_instruments_allocations.jpg\" alt=\"iOS Tutorial\">\n<p><b>Step 6</b> − Similarly, instead of Allocations, we can use Activity Monitor to see the overall memory allocated for the application.</p>\n<img src=\"/ios/images/mm_instruments_activitymonitor.jpg\" alt=\"iOS Tutorial\">\n<p><b>Step 7</b> − These tools help us access our memory consumption and locate the places where possible leaks have occurred.</p>"
          ]
        },
        {
          "tag_line": "iOS - Application Debugging (Auf Englisch)",
          "details": [
            "<p>We may commit mistakes while developing an application, which can lead to different kinds of errors. In order to fix these errors or bugs, we need to debug the application.</p>\n<h2>Selecting a Debugger</h2>\n<p>Xcode has two debuggers namely, GDB and LLDB debuggers. GDB is selected by default. LLDB is a debugger that is a part of the LLVM open-source compiler project. You can change the debugger by \"edit active schemes\" option.</p>\n<h2>How to Find Coding Errors?</h2>\n<p>To locate coding-related errors, you need to build your application which will compile the code. In case the code contains errors, the compiler will display all the messages, errors, and warnings with their possible reasons.</p>\n<p>You can click Product and then Analyze to locate possible issues in an application.</p>\n<h2>Set Breakpoints</h2>\n<p>Breakpoints help us to know the different states of our application objects, which help us identifying many flaws including logical issues. We just need to click over the line number to create a breakpoint. To remove a breakpoint, simply click and drag it out. The following screenshot shows how to set a breakpoint −</p>\n<img src=\"/ios/images/debug_breakpoint.jpg\" alt=\"iOS Tutorial\">\n<p>When we run the application and select the playVideo button, the application will pause at the line number where we had set the breakpoint. It allows us the time to analyze the state of the application. When the breakpoint is triggered, we will get an output as shown below.</p>\n<img src=\"/ios/images/debug_breakpointstop.jpg\" alt=\"iOS Tutorial\">\n<p>You can easily identify which thread has triggered the breakpoint. In the bottom, you can see objects like self, sender and so on, which hold the values of the corresponding objects and we can expand some of these objects, and see what is the state of each of these objects.</p>\n<p>To continue the application we will select the continue button (left most button), in the debug area shown below. The other options include step in, step out and step over.</p>\n<img src=\"/ios/images/breakpointbar.jpg\" alt=\"iOS Tutorial\">\n<h2>Exception Breakpoint</h2>\n<p>We also have exception breakpoints that trigger an application to stop at the location where the exception occurs. We can insert exception breakpoints by selecting the + button after selecting the debug navigator. You will get the following window.</p>\n<img src=\"/ios/images/debug_exceptionbreakpoint.jpg\" alt=\"iOS Tutorial\">\n<p>Then we need to select Add Exception Breakpoint, which will display the following window.</p>\n<img src=\"/ios/images/debug_exceptionbreakpointall.jpg\" alt=\"iOS Tutorial\">\n<p>You can collect more information on debugging and other Xcode features from <a rel=\"nofollow\" href=\"https://developer.apple.com/xcode/\" target=\"_blank\" title=\"Xcode 4 user guide\">Xcode 4 user guide</a>.</p>"
          ]
        }
      ]
    },
    {
      "title": "Kotlin",
      "content": [
        {
          "tag_line": "Kotlin - Architecture (Auf Englisch)",
          "details": [
            "<p>Kotlin is a programming language and has its own architecture to allocate memory and produce a quality output to the end user. Following are the different scenarios where Kotlin compiler will work differently, whenever it is targeting different other kind of languages such as Java and JavaScript.</p>\n<p>Kotlin compiler creates a byte code and that byte code can run on the JVM, which is exactly equal to the byte code generated by the Java <b>.class</b> file. Whenever two byte coded file runs on the JVM, they can communicate with each other and this is how an interoperable feature is established in Kotlin for Java.</p>\n<img src=\"/kotlin/images/architecture.jpg\" alt=\"Architecture\">\n<p>Whenever Kotlin targets JavaScript, the Kotlin compiler converts the <b>.kt</b> file into ES5.1 and generates a compatible code for JavaScript. Kotlin compiler is capable of creating platform basis compatible codes via LLVM.</p>"
          ]
        },
        {
          "tag_line": "Kotlin - Basic Types (Auf Englisch)",
          "details": [
            "<p>In this chapter, we will learn about the basic data types available in Kotlin programming language.</p>\n<h2>Numbers</h2>\n<p>The representation of numbers in Kotlin is pretty similar to Java, however, Kotlin does not allow internal conversion of different data types. Following table lists different variable lengths for different numbers.</p>\n<table class=\"table table-bordered\" style=\"text-align:center;\">\n<tbody><tr>\n<th style=\"text-align:center;\">Type</th>\n<th style=\"text-align:center;\">Size</th>\n</tr>\n<tr>\n<td>Double</td>\n<td>64</td>\n</tr>\n<tr>\n<td>Float</td>\n<td>32</td>\n</tr>\n<tr>\n<td>Long</td>\n<td>64</td>\n</tr>\n<tr>\n<td>Int</td>\n<td>32</td>\n</tr>\n<tr>\n<td>Short</td>\n<td>16</td>\n</tr>\n<tr>\n<td>Byte</td>\n<td>8</td>\n</tr>\n</tbody></table>\n<p>In the following example, we will see how Kotlin works with different data types. Please enter the following set of code in our coding ground.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/I5PPPE\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val a</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Int</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">10000</span><span class=\"pln\">\n   val d</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Double</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">100.00</span><span class=\"pln\">\n   val f</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Float</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">100.00f</span><span class=\"pln\">\n   val l</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Long</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">1000000004</span><span class=\"pln\">\n   val s</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Short</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">10</span><span class=\"pln\">\n   val b</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Byte</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pln\">\n   \n   println</span><span class=\"pun\">(</span><span class=\"str\">\"Your Int Value is \"</span><span class=\"pun\">+</span><span class=\"pln\">a</span><span class=\"pun\">);</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"Your Double  Value is \"</span><span class=\"pun\">+</span><span class=\"pln\">d</span><span class=\"pun\">);</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"Your Float Value is \"</span><span class=\"pun\">+</span><span class=\"pln\">f</span><span class=\"pun\">);</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"Your Long Value is \"</span><span class=\"pun\">+</span><span class=\"pln\">l</span><span class=\"pun\">);</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"Your Short Value is \"</span><span class=\"pun\">+</span><span class=\"pln\">s</span><span class=\"pun\">);</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"Your Byte Value is \"</span><span class=\"pun\">+</span><span class=\"pln\">b</span><span class=\"pun\">);</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>When you run the above piece of code in the coding ground, it will generate the following output in the web console.</p>\n<pre class=\"result notranslate\">Your Int Value is 10000\nYour Double  Value is 100.0\nYour Float Value is 100.0\nYour Long Value is 1000000004\nYour Short Value is 10\nYour Byte Value is 1\n</pre>\n<h2>Characters</h2>\n<p>Kotlin represents character using <b>char</b>. Character should be declared in a single quote like <b>‘c’</b>. Please enter the following code in our coding ground and see how Kotlin interprets the character variable. Character variable cannot be declared like number variables. Kotlin variable can be declared in two ways - one using <b>“var”</b> and another using <b>“val”</b>.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/lpsUjc\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val letter</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Char</span><span class=\"pln\">    </span><span class=\"com\">// defining a variable </span><span class=\"pln\">\n   letter </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">'A'</span><span class=\"pln\">        </span><span class=\"com\">// Assigning a value to it </span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"$letter\"</span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>The above piece of code will yield the following output in the browser output window.</p>\n<pre class=\"result notranslate\">A\n</pre>\n<h2>Boolean</h2>\n<p>Boolean is very simple like other programming languages. We have only two values for Boolean – either true or false. In the following example, we will see how Kotlin interprets Boolean.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/9G1XRI\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val letter</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Boolean</span><span class=\"pln\">   </span><span class=\"com\">// defining a variable </span><span class=\"pln\">\n   letter </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pln\">         </span><span class=\"com\">// Assinging a value to it </span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"Your character value is \"</span><span class=\"pun\">+</span><span class=\"str\">\"$letter\"</span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>The above piece of code will yield the following output in the browser.</p>\n<pre class=\"result notranslate\">Your character value is true\n</pre>\n<h2>Strings</h2>\n<p>Strings are character arrays. Like Java, they are immutable in nature. We have two kinds of string available in Kotlin - one is called <b>raw String</b> and another is called <b>escaped String</b>. In the following example, we will make use of these strings.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/tEKb3N\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\"> rawString </span><span class=\"pun\">:</span><span class=\"typ\">String</span><span class=\"pln\">  </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"I am Raw String!\"</span><span class=\"pln\">\n   val escapedString </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\">  </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"I am escaped String!\\n\"</span><span class=\"pln\">\n   \n   println</span><span class=\"pun\">(</span><span class=\"str\">\"Hello!\"</span><span class=\"pun\">+</span><span class=\"pln\">escapedString</span><span class=\"pun\">)</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"Hey!!\"</span><span class=\"pun\">+</span><span class=\"pln\">rawString</span><span class=\"pun\">)</span><span class=\"pln\">   \n</span><span class=\"pun\">}</span></pre>\n<p>The above example of escaped String allows to provide extra line space after the first print statement. Following will be the output in the browser.</p>\n<pre class=\"result notranslate\">Hello!I am escaped String!\n\nHey!!I am Raw String!\n</pre>\n<h2>Arrays</h2>\n<p>Arrays are a collection of homogeneous data. Like Java, Kotlin supports arrays of different data types. In the following example, we will make use of different arrays.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/25n2pM\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val numbers</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">IntArray</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> intArrayOf</span><span class=\"pun\">(</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">3</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">4</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">5</span><span class=\"pun\">)</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"Hey!! I am array Example\"</span><span class=\"pun\">+</span><span class=\"pln\">numbers</span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">])</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>The above piece of code yields the following output. The indexing of the array is similar to other programming languages. Here, we are searching for a second index, whose value is “3”.</p>\n<pre class=\"result notranslate\">Hey!! I am array Example3\n</pre>\n<h2>Collections</h2>\n<p>Collection is a very important part of the data structure, which makes the software development easy for engineers. Kotlin has two types of collection - one is <b>immutable collection</b> (which means lists, maps and sets that cannot be editable) and another is <b>mutable collection</b> (this type of collection is editable). It is very important to keep in mind the type of collection used in your application, as Kotlin system does not represent any specific difference in them.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/KP2TE4\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n   val numbers</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">MutableList</span><span class=\"pun\">&lt;</span><span class=\"typ\">Int</span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> mutableListOf</span><span class=\"pun\">(</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">3</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"com\">//mutable List </span><span class=\"pln\">\n   val readOnlyView</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"typ\">Int</span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> numbers                  </span><span class=\"com\">// immutable list </span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"my mutable list--\"</span><span class=\"pun\">+</span><span class=\"pln\">numbers</span><span class=\"pun\">)</span><span class=\"pln\">        </span><span class=\"com\">// prints \"[1, 2, 3]\" </span><span class=\"pln\">\n   numbers</span><span class=\"pun\">.</span><span class=\"kwd\">add</span><span class=\"pun\">(</span><span class=\"lit\">4</span><span class=\"pun\">)</span><span class=\"pln\"> \n   println</span><span class=\"pun\">(</span><span class=\"str\">\"my mutable list after addition --\"</span><span class=\"pun\">+</span><span class=\"pln\">numbers</span><span class=\"pun\">)</span><span class=\"pln\">        </span><span class=\"com\">// prints \"[1, 2, 3, 4]\" </span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"pln\">readOnlyView</span><span class=\"pun\">)</span><span class=\"pln\">     \n   readOnlyView</span><span class=\"pun\">.</span><span class=\"pln\">clear</span><span class=\"pun\">()</span><span class=\"pln\">    </span><span class=\"com\">// ⇒ does not compile  </span><span class=\"pln\">\n</span><span class=\"com\">// gives error  </span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>The above piece of code will yield the following output in the browser. It gives an error when we try to clear the mutable list of collection.</p>\n<pre class=\"result notranslate\">main.kt:9:18: error: unresolved reference: clear\n   readOnlyView.clear()    // -&gt; does not compile  \n                 ^\n</pre>\n<p>In collection, Kotlin provides some useful methods such as <b>first(), last(), filter()</b>, etc. All these methods are self-descriptive and easy to implement. Moreover, Kotlin follows the same structure such as Java while implementing collection. You are free to implement any collection of your choice such as Map and Set.</p>\n<p>In the following example, we have implemented Map and Set using different built-in methods.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/yBYfCH\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val items </span><span class=\"pun\">=</span><span class=\"pln\"> listOf</span><span class=\"pun\">(</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">3</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">4</span><span class=\"pun\">)</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"First Element of our list----\"</span><span class=\"pun\">+</span><span class=\"pln\">items</span><span class=\"pun\">.</span><span class=\"pln\">first</span><span class=\"pun\">())</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"Last Element of our list----\"</span><span class=\"pun\">+</span><span class=\"pln\">items</span><span class=\"pun\">.</span><span class=\"kwd\">last</span><span class=\"pun\">())</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"Even Numbers of our List----\"</span><span class=\"pun\">+</span><span class=\"pln\">items</span><span class=\"pun\">.</span><span class=\"pln\">\n      filter </span><span class=\"pun\">{</span><span class=\"pln\"> it </span><span class=\"pun\">%</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pln\"> </span><span class=\"pun\">})</span><span class=\"pln\">   </span><span class=\"com\">// returns [2, 4]</span><span class=\"pln\">\n   \n   val readWriteMap </span><span class=\"pun\">=</span><span class=\"pln\"> hashMapOf</span><span class=\"pun\">(</span><span class=\"str\">\"foo\"</span><span class=\"pln\"> to </span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"bar\"</span><span class=\"pln\"> to </span><span class=\"lit\">2</span><span class=\"pun\">)</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"pln\">readWriteMap</span><span class=\"pun\">[</span><span class=\"str\">\"foo\"</span><span class=\"pun\">])</span><span class=\"pln\">  </span><span class=\"com\">// prints \"1\"</span><span class=\"pln\">\n   \n   val strings </span><span class=\"pun\">=</span><span class=\"pln\"> hashSetOf</span><span class=\"pun\">(</span><span class=\"str\">\"a\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"b\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"c\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"c\"</span><span class=\"pun\">)</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"My Set Values are\"</span><span class=\"pun\">+</span><span class=\"pln\">strings</span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>The above piece of code yields the following output in the browser.</p>\n<pre class=\"result notranslate\">First Element of our list----1\nLast Element of our list----4\nEven Numbers of our List----[2, 4]\n1\nMy Set Values are[a, b, c]\n</pre>\n<h2>Ranges</h2>\n<p>Ranges is another unique characteristic of Kotlin. Like Haskell, it provides an operator that  helps you iterate through a range. Internally, it is implemented using <b>rangeTo()</b> and its operator form is <b>(..)</b>.</p>\n<p>In the following example, we will see how Kotlin interprets this range operator.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/nwkSIY\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val i</span><span class=\"pun\">:</span><span class=\"typ\">Int</span><span class=\"pln\">  </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pln\">\n   </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">j </span><span class=\"kwd\">in</span><span class=\"pln\"> </span><span class=\"lit\">1.</span><span class=\"pun\">.</span><span class=\"lit\">4</span><span class=\"pun\">)</span><span class=\"pln\"> \n   </span><span class=\"kwd\">print</span><span class=\"pun\">(</span><span class=\"pln\">j</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"com\">// prints \"1234\"</span><span class=\"pln\">\n   \n   </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">i </span><span class=\"kwd\">in</span><span class=\"pln\"> </span><span class=\"lit\">1.</span><span class=\"pun\">.</span><span class=\"lit\">10</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"com\">// equivalent of 1 &lt; = i &amp;&amp; i &lt; = 10</span><span class=\"pln\">\n      println</span><span class=\"pun\">(</span><span class=\"str\">\"we found your number --\"</span><span class=\"pun\">+</span><span class=\"pln\">i</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>The above piece of code yields the following output in the browser.</p>\n<pre class=\"result notranslate\">1234we found your number --2</pre>"
          ]
        },
        {
          "tag_line": "Kotlin - Control Flow (Auf Englisch)",
          "details": [
            "<p>In the previous chapter we have learned about different types of data types available in Kotlin system. In this chapter, we will discuss different types of control flow mechanism available in the Kotlin.</p>\n<h2>If - Else</h2>\n<p>Kotlin is a functional language hence like every functional language in Kotlin <b>“if”</b> is an expression, it is not a keyword. The expression <b>“if”</b> will return a value whenever necessary. Like other programming language, <b>“if-else”</b> block is used as an initial conditional checking operator. In the following example, we will compare two variables and provide the required output accordingly.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/3zdnlU\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val a</span><span class=\"pun\">:</span><span class=\"typ\">Int</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">5</span><span class=\"pln\">\n   val b</span><span class=\"pun\">:</span><span class=\"typ\">Int</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\"> max</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Int</span><span class=\"pln\">\n   \n   </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">a </span><span class=\"pun\">&gt;</span><span class=\"pln\"> b</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      max </span><span class=\"pun\">=</span><span class=\"pln\"> a\n   </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      max </span><span class=\"pun\">=</span><span class=\"pln\"> b\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n   </span><span class=\"kwd\">print</span><span class=\"pun\">(</span><span class=\"str\">\"Maximum of a or b is \"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\">max</span><span class=\"pun\">)</span><span class=\"pln\">\n \n   </span><span class=\"com\">// As expression </span><span class=\"pln\">\n   </span><span class=\"com\">// val max = if (a &gt; b) a else b</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>The above piece of code yields the following output as a result in the browser. Our example also contains another line of code, which depicts how to use <b>“If”</b> statement as an expression.</p>\n<pre class=\"result notranslate\">Maximum of a or b is 5\n</pre>\n<h2>Use of When</h2>\n<p>If you are familiar with other programming languages, then you might have heard of the term switch statement, which is basically a conditional operator when multiple conditions can be applied on a particular variable. <b>“when”</b> operator matches the variable value against the branch conditions. If it is satisfying the branch condition then it will execute the statement inside that scope. In the following example, we will learn more about “when” in Kotlin.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/lXxWhy\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val x</span><span class=\"pun\">:</span><span class=\"typ\">Int</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">5</span><span class=\"pln\">\n   </span><span class=\"kwd\">when</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">x</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"lit\">1</span><span class=\"pln\"> </span><span class=\"pun\">-&gt;</span><span class=\"pln\"> </span><span class=\"kwd\">print</span><span class=\"pun\">(</span><span class=\"str\">\"x = = 1\"</span><span class=\"pun\">)</span><span class=\"pln\">\n      </span><span class=\"lit\">2</span><span class=\"pln\"> </span><span class=\"pun\">-&gt;</span><span class=\"pln\"> </span><span class=\"kwd\">print</span><span class=\"pun\">(</span><span class=\"str\">\"x = = 2\"</span><span class=\"pun\">)</span><span class=\"pln\">\n      \n      </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">-&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"com\">// Note the block</span><span class=\"pln\">\n         </span><span class=\"kwd\">print</span><span class=\"pun\">(</span><span class=\"str\">\"x is neither 1 nor 2\"</span><span class=\"pun\">)</span><span class=\"pln\">\n      </span><span class=\"pun\">}</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>The above piece of code yields the following output in the browser.</p>\n<pre class=\"result notranslate\">x is neither 1 nor 2\n</pre>\n<p>In the above example, Kotlin compiler matches the value of <b>x</b> with the given branches. If it is not matching any of the branches, then it will execute the else part. Practically, when is equivalent to multiple if block. Kotlin provides another flexibility to the developer, where the developer can provide multiple checks in the same line by providing “,” inside the checks. Let us modify the above example as follows.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/8MFLuU\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val x</span><span class=\"pun\">:</span><span class=\"typ\">Int</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">5</span><span class=\"pln\">\n   </span><span class=\"kwd\">when</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">x</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"lit\">2</span><span class=\"pln\"> </span><span class=\"pun\">-&gt;</span><span class=\"pln\"> </span><span class=\"kwd\">print</span><span class=\"pun\">(</span><span class=\"str\">\" Value of X either 1,2\"</span><span class=\"pun\">)</span><span class=\"pln\">\n      \n      </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">-&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"com\">// Note the block</span><span class=\"pln\">\n         </span><span class=\"kwd\">print</span><span class=\"pun\">(</span><span class=\"str\">\"x is neither 1 nor 2\"</span><span class=\"pun\">)</span><span class=\"pln\">\n      </span><span class=\"pun\">}</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>Run the same in the browser, which will yield the following output in the browser.</p>\n<pre class=\"result notranslate\">x is neither 1 nor 2\n</pre>\n<h2>For Loop</h2>\n<p>Loop is such an invention that provides the flexibility to iterate through any kind of data structure. Like other programming languages, Kotlin also provides many kinds of Looping methodology, however, among them <b>“For”</b> is the most successful one. The implementation and use of For loop is conceptually similar to Java for loop. The following example shows how we can use the same in real-life examples.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/4Nqvh1\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val items </span><span class=\"pun\">=</span><span class=\"pln\"> listOf</span><span class=\"pun\">(</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">3</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">4</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">i </span><span class=\"kwd\">in</span><span class=\"pln\"> items</span><span class=\"pun\">)</span><span class=\"pln\"> println</span><span class=\"pun\">(</span><span class=\"str\">\"values of the array\"</span><span class=\"pun\">+</span><span class=\"pln\">i</span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>In the above piece of code, we have declared one list named as “items” and using for loop we are iterating through that defined list and printing its value in the browser. Following is the output.</p>\n<pre class=\"result notranslate\">values of the array1\nvalues of the array2\nvalues of the array3\nvalues of the array4\n</pre>\n<p>Following is another example of code, where we are using some library function to make our development work easier than ever before.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/MSOn9d\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val items </span><span class=\"pun\">=</span><span class=\"pln\"> listOf</span><span class=\"pun\">(</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">22</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">83</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">4</span><span class=\"pun\">)</span><span class=\"pln\">\n   \n   </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">((</span><span class=\"pln\">index</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">value</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">in</span><span class=\"pln\"> items</span><span class=\"pun\">.</span><span class=\"pln\">withIndex</span><span class=\"pun\">())</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      println</span><span class=\"pun\">(</span><span class=\"str\">\"the element at $index is $value\"</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>Once we compile and execute the above piece of code in our coding ground, it will yield the following output in the browser.</p>\n<pre class=\"result notranslate\">the element at 0 is 1\nthe element at 1 is 22\nthe element at 2 is 83\nthe element at 3 is 4\n</pre>\n<h2>While Loop and Do-While Loop</h2>\n<p>While and Do-While work exactly in a similar way like they do in other programming languages. The only difference between these two loops is, in case of Do-while loop the condition will be tested at the end of the loop. The following example shows the usage of the <b>While loop</b>.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/XR720M\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\"> x</span><span class=\"pun\">:</span><span class=\"typ\">Int</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"Example of While Loop--\"</span><span class=\"pun\">)</span><span class=\"pln\">\n   \n   </span><span class=\"kwd\">while</span><span class=\"pun\">(</span><span class=\"pln\">x</span><span class=\"pun\">&lt;</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">10</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      println</span><span class=\"pun\">(</span><span class=\"pln\">x</span><span class=\"pun\">)</span><span class=\"pln\">\n      x</span><span class=\"pun\">++</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\"> \n</span><span class=\"pun\">}</span></pre>\n<p>The above piece of code yields the following output in the browser.</p>\n<pre class=\"result notranslate\">Example of While Loop--\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre>\n<p>Kotlin also has another loop called Do-While loop, where the loop body will be executed once, only then the condition will be checked. The following example shows the usage of the <b>Do-while loop</b>.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/An8NB9\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\"> x</span><span class=\"pun\">:</span><span class=\"typ\">Int</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pln\">\n   </span><span class=\"kwd\">do</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      x </span><span class=\"pun\">=</span><span class=\"pln\"> x </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"lit\">10</span><span class=\"pln\">\n      println</span><span class=\"pun\">(</span><span class=\"str\">\"I am inside Do block---\"</span><span class=\"pun\">+</span><span class=\"pln\">x</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">while</span><span class=\"pun\">(</span><span class=\"pln\">x </span><span class=\"pun\">&lt;=</span><span class=\"pln\"> </span><span class=\"lit\">50</span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>The above piece of code yields the following output in the browser. In the above code, Kotlin compiler will execute the DO block, then it will go for condition checking in while block.</p>\n<pre class=\"result notranslate\">I am inside Do block---10\nI am inside Do block---20\nI am inside Do block---30\nI am inside Do block---40\nI am inside Do block---50\nI am inside Do block---60\n</pre>\n<h2>Use of Return, Break, Continue</h2>\n<p>If you are familiar with any programming language, then you must have an idea of different keywords that help us implement good control flow in the application. Following are the different keywords that can be used to control the loops or any other types of control flow.</p>\n<p><b>Return</b> − Return is a keyword that returns some value to the calling function from the called function. In the following example, we will implement this scenario using our Kotlin coding ground.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/WMgiYj\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\"> x</span><span class=\"pun\">:</span><span class=\"typ\">Int</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">10</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"The value of X is--\"</span><span class=\"pun\">+</span><span class=\"pln\">doubleMe</span><span class=\"pun\">(</span><span class=\"pln\">x</span><span class=\"pun\">))</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\nfun doubleMe</span><span class=\"pun\">(</span><span class=\"pln\">x</span><span class=\"pun\">:</span><span class=\"typ\">Int</span><span class=\"pun\">):</span><span class=\"typ\">Int</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">*</span><span class=\"pln\">x</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>In the above piece of code, we are calling another function and multiplying the input with 2, and returning the resultant value to the called function that is our main function. Kotlin defines the function in a different manner that we will look at in a subsequent chapter. For now, it is enough to understand that the above code will generate the following output in the browser.</p>\n<pre class=\"result notranslate\">The value of X is--20\n</pre>\n<p><b>Continue &amp; Break</b> − Continue and break are the most vital part of a logical problem. The “break” keyword terminates the controller flow if some condition has failed and “continue” does the opposite. All this operation happens with immediate visibility. Kotlin is smarter than other programming languages, wherein the developer can apply more than one label as visibility. The following piece of code shows how we are implementing this label in Kotlin.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/TdGTLL\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"Example of Break and Continue\"</span><span class=\"pun\">)</span><span class=\"pln\">\n   myLabel@ </span><span class=\"kwd\">for</span><span class=\"pun\">(</span><span class=\"pln\">x </span><span class=\"kwd\">in</span><span class=\"pln\"> </span><span class=\"lit\">1.</span><span class=\"pun\">.</span><span class=\"lit\">10</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"com\">// appling the custom label</span><span class=\"pln\">\n      </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">x </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">5</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         println</span><span class=\"pun\">(</span><span class=\"str\">\"I am inside if block with value\"</span><span class=\"pun\">+</span><span class=\"pln\">x</span><span class=\"pun\">+</span><span class=\"str\">\"\\n-- hence it will close the operation\"</span><span class=\"pun\">)</span><span class=\"pln\">\n         </span><span class=\"kwd\">break</span><span class=\"lit\">@myLabel</span><span class=\"pln\"> </span><span class=\"com\">//specifing the label</span><span class=\"pln\">\n      </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         println</span><span class=\"pun\">(</span><span class=\"str\">\"I am inside else block with value\"</span><span class=\"pun\">+</span><span class=\"pln\">x</span><span class=\"pun\">)</span><span class=\"pln\">\n         </span><span class=\"kwd\">continue</span><span class=\"lit\">@myLabel</span><span class=\"pln\">\n      </span><span class=\"pun\">}</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>The above piece of code yields the following output in the browser.</p>\n<pre class=\"result notranslate\">Example of Break and Continue\nI am inside else block with value1\nI am inside else block with value2\nI am inside else block with value3\nI am inside else block with value4\nI am inside if block with value5\n-- hence it will close the operation\n</pre>\n<p>As you can see, the controller continues the loop, until and unless the value of <b>x</b> is 5. Once the value of <b>x</b> reaches 5, it starts executing the if block and once the break statement is reached, the entire control flow terminates the program execution.</p>"
          ]
        },
        {
          "tag_line": "Kotlin - Class & Object (Auf Englisch)",
          "details": [
            "<p>In this chapter, we will learn the basics of Object-Oriented Programming (OOP) using Kotlin. We will learn about class and its object and how to play with that object. By definition of OOP, a class is a blueprint of a runtime entity and object is its state, which includes both its behavior and state. In Kotlin, class declaration consists of a class header and a class body surrounded by curly braces, similar to Java.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"typ\">Class</span><span class=\"pln\"> myClass </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"com\">// class Header </span><span class=\"pln\">\n\n   </span><span class=\"com\">// class Body</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>Like Java, Kotlin also allows to create several objects of a class and you are free to include its class members and functions. We can control the visibility of the class members variables using different keywords that we will learn in Chapter 10 – Visibility Control. In the following example, we will create one class and its object through which we will access different data members of that class.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/ELlghV\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">class</span><span class=\"pln\"> myClass </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"com\">// property (data member)</span><span class=\"pln\">\n   </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">var</span><span class=\"pln\"> name</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"Tutorials.point\"</span><span class=\"pln\">\n   \n   </span><span class=\"com\">// member function</span><span class=\"pln\">\n   fun printMe</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">print</span><span class=\"pun\">(</span><span class=\"str\">\"You are at the best Learning website Named-\"</span><span class=\"pun\">+</span><span class=\"pln\">name</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\nfun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val obj </span><span class=\"pun\">=</span><span class=\"pln\"> myClass</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"com\">// create obj object of myClass class</span><span class=\"pln\">\n   obj</span><span class=\"pun\">.</span><span class=\"pln\">printMe</span><span class=\"pun\">()</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>The above piece of code will yield the following output in the browser, where we are calling printMe() of myClass using its own object.</p>\n<pre class=\"result notranslate\">You are at the best Learning website Named- Tutorials.point\n</pre>\n<h2>Nested Class</h2>\n<p>By definition, when a class has been created inside another class, then it is called as a nested class. In Kotlin, nested class is by default static, hence, it can be accessed without creating any object of that class. In the following example, we will see how Kotlin interprets our nested class.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/t9AO3z\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val demo </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">Outer</span><span class=\"pun\">.</span><span class=\"typ\">Nested</span><span class=\"pun\">().</span><span class=\"pln\">foo</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"com\">// calling nested class method</span><span class=\"pln\">\n   </span><span class=\"kwd\">print</span><span class=\"pun\">(</span><span class=\"pln\">demo</span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Outer</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Nested</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      fun foo</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"Welcome to The TutorialsPoint.com\"</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>The above piece of code will yield the following output in the browser.</p>\n<pre class=\"result notranslate\">Welcome to The TutorialsPoint.com\n</pre>\n<h2>Inner Class</h2>\n<p>When a nested class is marked as a “inner”, then it will be called as an Inner class. An inner class can be accessed by the data member of the outer class. In the following example, we will be accessing the data member of the outer class.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/hn6PZL\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val demo </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">Outer</span><span class=\"pun\">().</span><span class=\"typ\">Nested</span><span class=\"pun\">().</span><span class=\"pln\">foo</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"com\">// calling nested class method</span><span class=\"pln\">\n   </span><span class=\"kwd\">print</span><span class=\"pun\">(</span><span class=\"pln\">demo</span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Outer</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">private</span><span class=\"pln\"> val welcomeMessage</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"Welcome to the TutorialsPoint.com\"</span><span class=\"pln\">\n   inner </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Nested</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      fun foo</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> welcomeMessage\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>The above piece of code will yield the following output in the browser, where we are calling the nested class using the default constructor provided by Kotlin compilers at the time of compiling.</p>\n<pre class=\"result notranslate\">Welcome to the TutorialsPoint.com\n</pre>\n<h2>Anonymous Inner Class</h2>\n<p>Anonymous inner class is a pretty good concept that makes the life of a programmer very easy. Whenever we are implementing an interface, the concept of anonymous inner block comes into picture. The concept of creating an object of interface using runtime object reference is known as anonymous class. In the following example, we will create an interface and we will create an object of that interface using Anonymous Inner class mechanism.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/ZFFPmP\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\"> programmer </span><span class=\"pun\">:</span><span class=\"typ\">Human</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">object</span><span class=\"pun\">:</span><span class=\"typ\">Human</span><span class=\"pln\"> </span><span class=\"com\">// creating an instance of the interface {</span><span class=\"pln\">\n      </span><span class=\"kwd\">override</span><span class=\"pln\"> fun think</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"com\">// overriding the think method</span><span class=\"pln\">\n         </span><span class=\"kwd\">print</span><span class=\"pun\">(</span><span class=\"str\">\"I am an example of Anonymous Inner Class \"</span><span class=\"pun\">)</span><span class=\"pln\">\n      </span><span class=\"pun\">}</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n   programmer</span><span class=\"pun\">.</span><span class=\"pln\">think</span><span class=\"pun\">()</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">interface</span><span class=\"pln\"> </span><span class=\"typ\">Human</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   fun think</span><span class=\"pun\">()</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>The above piece of code will yield the following output in the browser.</p>\n<pre class=\"result notranslate\">I am an example of Anonymous Inner Class \n</pre>\n<h2>Type Aliases</h2>\n<p>Type aliases are a property of Kotlin compiler. It provides the flexibility of creating a new name of an existing type, it does not create a new type. If the type name is too long, you can easily introduce a shorter name and use the same for future usage. Type aliases is really helpful for complex type. In the latest version, Kotlin revoked the support for type aliases, however, if you are using an old version of Kotlin you may have use it like the following −</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">typealias </span><span class=\"typ\">NodeSet</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">Set</span><span class=\"pun\">&lt;</span><span class=\"typ\">Network</span><span class=\"pun\">.</span><span class=\"typ\">Node</span><span class=\"pun\">&gt;</span><span class=\"pln\">\ntypealias </span><span class=\"typ\">FileTable</span><span class=\"pun\">&lt;</span><span class=\"pln\">K</span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">MutableMap</span><span class=\"pun\">&lt;</span><span class=\"pln\">K</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">MutableList</span><span class=\"pun\">&lt;</span><span class=\"typ\">File</span><span class=\"pun\">&gt;&gt;</span></pre>"
          ]
        },
        {
          "tag_line": "Kotlin - Constructors (Auf Englisch)",
          "details": [
            "<div class=\"mui-col-md-6 tutorial-content\"><p>In this chapter, we will learn about constructors in Kotlin. Kotlin has two types of constructor - one is the <b>primary constructor</b> and the other is the <b>secondary constructor</b>. One Kotlin class can have one primary constructor, and one or more secondary constructor. Java constructor initializes the member variables, however, in Kotlin the primary constructor initializes the class, whereas the secondary constructor helps to include some extra logic while initializing the same. The primary constructor can be declared at class header level as shown in the following example.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Person</span><span class=\"pun\">(</span><span class=\"pln\">val firstName</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">var</span><span class=\"pln\"> age</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Int</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"com\">// class body</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>In the above example, we have declared the primary constructor inside the parenthesis. Among the two fields, first name is read-only as it is declared as “val”, while the field age can be edited. In the following example, we will use the primary constructor.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/CYXIGw\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val person1 </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">Person</span><span class=\"pun\">(</span><span class=\"str\">\"TutorialsPoint.com\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">15</span><span class=\"pun\">)</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"First Name = ${person1.firstName}\"</span><span class=\"pun\">)</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"Age = ${person1.age}\"</span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Person</span><span class=\"pun\">(</span><span class=\"pln\">val firstName</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">var</span><span class=\"pln\"> age</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Int</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>The above piece of code will automatically initialize the two variables and provide the following output in the browser.</p>\n<pre class=\"result notranslate\">First Name = TutorialsPoint.com\nAge = 15\n</pre>\n<p>As mentioned earlier, Kotlin allows to create one or more secondary constructors for your class. This secondary constructor is created using the “constructor” keyword. It is required whenever you want to create more than one constructor in Kotlin or whenever you want to include more logic in the primary constructor and you cannot do that because the primary constructor may be called by some other class. Take a look at the following example, where we have created a secondary constructor and are using the above example to implement the same.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/1Hll8l\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val </span><span class=\"typ\">HUman</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">HUman</span><span class=\"pun\">(</span><span class=\"str\">\"TutorialsPoint.com\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">25</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"kwd\">print</span><span class=\"pun\">(</span><span class=\"str\">\"${HUman.message}\"</span><span class=\"pun\">+</span><span class=\"str\">\"${HUman.firstName}\"</span><span class=\"pun\">+</span><span class=\"pln\">\n      </span><span class=\"str\">\"Welcome to the example of Secondary  constructor, Your Age is-${HUman.age}\"</span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">HUman</span><span class=\"pun\">(</span><span class=\"pln\">val firstName</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">var</span><span class=\"pln\"> age</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Int</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val message</span><span class=\"pun\">:</span><span class=\"typ\">String</span><span class=\"pln\">  </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"Hey!!!\"</span><span class=\"pln\">\n\t</span><span class=\"kwd\">constructor</span><span class=\"pun\">(</span><span class=\"pln\">name </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> </span><span class=\"pun\">,</span><span class=\"pln\"> age </span><span class=\"pun\">:</span><span class=\"typ\">Int</span><span class=\"pln\"> </span><span class=\"pun\">,</span><span class=\"pln\">message </span><span class=\"pun\">:</span><span class=\"typ\">String</span><span class=\"pun\">):</span><span class=\"kwd\">this</span><span class=\"pun\">(</span><span class=\"pln\">name</span><span class=\"pun\">,</span><span class=\"pln\">age</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p><b>Note</b> − Any number of secondary constructors can be created, however, all of those constructors should call the primary constructor directly or indirectly.</p>\n<p>The above piece of code will yield the following output in the browser.</p>\n<pre class=\"result notranslate\">Hey!!! TutorialsPoint.comWelcome to the example of Secondary  constructor, Your Age is- 25\n</pre>\n<div class=\"mui-container-fluid button-borders show\">\n<div class=\"pre-btn\">\n<a href=\"/kotlin/kotlin_class_and_object.htm\"><i class=\"fal fa-chevron-circle-left\"></i> Previous Page</a>\n<a class=\"hide-on-mobile\" href=\"javascript:printPage();\"><i class=\"fa fa-print\"></i> Print Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/kotlin/kotlin_inheritance.htm\">Next Page <i class=\"fal fa-chevron-circle-right\"></i>&nbsp;</a>\n</div>\n</div>\n<div class=\"google-bottom-ads\">\n<div>Advertisements</div>\n<div>\n   <div id=\"vi_bottom_ads\"><div class=\"adsbyvli\" data-ad-slot=\"vi_9013190\"></div></div>\n   <script>\n     (function() {\n     var adPos = document.getElementById('vi_bottom_ads');\n     var mobile_ad_id = \"vi_9012177\";\n     var desktop_ad_id = \"vi_9013190\";\n     var ad_id = window.innerWidth <= 768 ? mobile_ad_id : desktop_ad_id;\n     adPos.innerHTML = '<div class=\"adsbyvli\" data-ad-slot=\"' + ad_id + '\"></div>';\n     (vitag.displayInit = window.vitag.displayInit || []).push(function () {\n         viAPItag.display(ad_id);\n     });\n     }())\n   </script>\n</div>\n<div class=\"space-bottom\"></div>\n</div>\n</div>\n<!-- Tutorial Content Ends Here -->\n<!-- Right Column Starts Here -->\n<div class=\"mui-col-md-2 google-right-ads\">\n<div class=\"space-top\"></div>\n<div class=\"google-right-ad\" style=\"margin: 0px auto !important;margin-top:5px;\">\n<div class=\"adsbyvli\" data-ad-slot=\"vi_9012177\"></div>\n<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display(\"vi_9012177\")})</script>\n</div>\n<div class=\"google-right-ad\" style=\"margin-top:5px;\">\n<div class=\"adsbyvli\" data-ad-slot=\"vi_9012177\"></div>\n<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display(\"vi_9012177\")})</script>\n</div>\n<div class=\"google-right-ad\" style=\"margin-top:5px;\">\n<div class=\"adsbyvli\" data-ad-slot=\"vi_9013289\"></div>\n<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display(\"vi_9013289\")})</script>\n</div>\n<div class=\"space-bottom\" style=\"margin-bottom:15px;\"></div>\n</div>\n<!-- Right Column Ends Here -->\n"
          ]
        },
        {
          "tag_line": "Kotlin - Inheritance (Auf Englisch)",
          "details": [
            "<p>In this chapter, we will learn about inheritance. By definition, we all know that inheritance means accruing some properties of the mother class into the child class. In Kotlin, the base class is named as “Any”, which is the super class of the ‘any’ default class declared in Kotlin. Like all other OOPS, Kotlin also provides this functionality using one keyword known as <b>“:”</b>.</p>\n<p>Everything in Kotlin is by default final, hence, we need to use the keyword “open” in front of the class declaration to make it allowable to inherit. Take a look at the following example of inheritance.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/CHmsZk\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">Arrays</span><span class=\"pln\">\n\nopen </span><span class=\"kwd\">class</span><span class=\"pln\"> ABC </span><span class=\"pun\">{</span><span class=\"pln\">\n   fun think </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">print</span><span class=\"pun\">(</span><span class=\"str\">\"Hey!! i am thiking \"</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">class</span><span class=\"pln\"> BCD</span><span class=\"pun\">:</span><span class=\"pln\"> ABC</span><span class=\"pun\">(){</span><span class=\"pln\"> </span><span class=\"com\">// inheritence happend using default constructor </span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n\nfun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\">  a </span><span class=\"pun\">=</span><span class=\"pln\"> BCD</span><span class=\"pun\">()</span><span class=\"pln\">\n   a</span><span class=\"pun\">.</span><span class=\"pln\">think</span><span class=\"pun\">()</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>The above piece of code will yield the following output in the browser.</p>\n<pre class=\"result notranslate\">Hey!! i am thiking \n</pre>\n<p>Now, what if we want to override the think() method in the child class. Then, we need to consider the following example where we are creating two classes and override one of its function into the child class.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/KouOmB\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">Arrays</span><span class=\"pln\">\n\nopen </span><span class=\"kwd\">class</span><span class=\"pln\"> ABC </span><span class=\"pun\">{</span><span class=\"pln\">\n   open fun think </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">print</span><span class=\"pun\">(</span><span class=\"str\">\"Hey!! i am thinking \"</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">class</span><span class=\"pln\"> BCD</span><span class=\"pun\">:</span><span class=\"pln\"> ABC</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"com\">// inheritance happens using default constructor </span><span class=\"pln\">\n   </span><span class=\"kwd\">override</span><span class=\"pln\"> fun think</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">print</span><span class=\"pun\">(</span><span class=\"str\">\"I Am from Child\"</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\nfun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\">  a </span><span class=\"pun\">=</span><span class=\"pln\"> BCD</span><span class=\"pun\">()</span><span class=\"pln\">\n   a</span><span class=\"pun\">.</span><span class=\"pln\">think</span><span class=\"pun\">()</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre> \n<p>The above piece of code will call the child class inherited method and it will yield the following output in the browser. Like Java, Kotlin too doesn’t allow multiple inheritances.</p>\n<pre class=\"result notranslate\">I Am from Child </pre>"
          ]
        },
        {
          "tag_line": "Kotlin - Interface (Auf Englisch)",
          "details": [
            "<p>In this chapter, we will learn about the interface in Kotlin. In Kotlin, the interface works exactly similar to Java 8, which means they can contain method implementation as well as abstract methods declaration. An interface can be implemented by a class in order to use its defined functionality. We have already introduced an example with an interface in Chapter 6 - section “anonymous inner class”. In this chapter, we will learn more about it. The keyword “interface” is used to define an interface in Kotlin as shown in the following piece of code.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">interface</span><span class=\"pln\"> </span><span class=\"typ\">ExampleInterface</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\"> myVar</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\">     </span><span class=\"com\">// abstract property</span><span class=\"pln\">\n   fun absMethod</span><span class=\"pun\">()</span><span class=\"pln\">       </span><span class=\"com\">// abstract method</span><span class=\"pln\">\n   fun sayHello</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"Hello there\"</span><span class=\"pln\"> </span><span class=\"com\">// method with default implementation</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>In the above example, we have created one interface named as “ExampleInterface” and inside that we have a couple of abstract properties and methods all together. Look at the function named “sayHello()”, which is an implemented method.</p>\n<p>In the following example, we will be implementing the above interface in a class.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/YAgTFO\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">interface</span><span class=\"pln\"> </span><span class=\"typ\">ExampleInterface</span><span class=\"pln\">  </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\"> myVar</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Int</span><span class=\"pln\">            </span><span class=\"com\">// abstract property</span><span class=\"pln\">\n   fun absMethod</span><span class=\"pun\">():</span><span class=\"typ\">String</span><span class=\"pln\">    </span><span class=\"com\">// abstract method</span><span class=\"pln\">\n   \n   fun hello</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      println</span><span class=\"pun\">(</span><span class=\"str\">\"Hello there, Welcome to TutorialsPoint.Com!\"</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">InterfaceImp</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">ExampleInterface</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">override</span><span class=\"pln\"> </span><span class=\"kwd\">var</span><span class=\"pln\"> myVar</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Int</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">25</span><span class=\"pln\">\n   </span><span class=\"kwd\">override</span><span class=\"pln\"> fun absMethod</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"Happy Learning \"</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\nfun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val obj </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">InterfaceImp</span><span class=\"pun\">()</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"My Variable Value is = ${obj.myVar}\"</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"kwd\">print</span><span class=\"pun\">(</span><span class=\"str\">\"Calling hello(): \"</span><span class=\"pun\">)</span><span class=\"pln\">\n   obj</span><span class=\"pun\">.</span><span class=\"pln\">hello</span><span class=\"pun\">()</span><span class=\"pln\">\n   \n   </span><span class=\"kwd\">print</span><span class=\"pun\">(</span><span class=\"str\">\"Message from the Website-- \"</span><span class=\"pun\">)</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"pln\">obj</span><span class=\"pun\">.</span><span class=\"pln\">absMethod</span><span class=\"pun\">())</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>The above piece of code will yield the following output in the browser.</p>\n<pre class=\"result notranslate\">Calling hello(): Hello there, Welcome to TutorialsPoint.Com!\nMessage from the Website-- Happy Learning \n</pre>\n<p>As mentioned earlier, Kotlin doesn’t support multiple inheritances, however, the same thing can be achieved by implementing more than two interfaces at a time.</p>\n<p>In the following example, we will create two interfaces and later we will implement both the interfaces into a class.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/jTlQDB\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">interface</span><span class=\"pln\"> A </span><span class=\"pun\">{</span><span class=\"pln\">\n   fun printMe</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      println</span><span class=\"pun\">(</span><span class=\"str\">\" method of interface A\"</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">interface</span><span class=\"pln\"> B  </span><span class=\"pun\">{</span><span class=\"pln\">\n   fun printMeToo</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      println</span><span class=\"pun\">(</span><span class=\"str\">\"I am another Method from interface B\"</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n\n</span><span class=\"com\">// implements two interfaces A and B</span><span class=\"pln\">\n</span><span class=\"kwd\">class</span><span class=\"pln\"> multipleInterfaceExample</span><span class=\"pun\">:</span><span class=\"pln\"> A</span><span class=\"pun\">,</span><span class=\"pln\"> B\n\nfun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val obj </span><span class=\"pun\">=</span><span class=\"pln\"> multipleInterfaceExample</span><span class=\"pun\">()</span><span class=\"pln\">\n   obj</span><span class=\"pun\">.</span><span class=\"pln\">printMe</span><span class=\"pun\">()</span><span class=\"pln\">\n   obj</span><span class=\"pun\">.</span><span class=\"pln\">printMeToo</span><span class=\"pun\">()</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>In the above example, we have created two sample interfaces A, B and in the class named “multipleInterfaceExample” we have implemented two interfaces declared earlier. The above piece of code will yield the following output in the browser.</p>\n<pre class=\"result notranslate\">method of interface A\nI am another Method from interface B</pre>"
          ]
        },
        {
          "tag_line": "Kotlin - Visibility Control (Auf Englisch)",
          "details": [
            "<p>In this chapter, we will learn about different modifiers available in Kotlin language. <b>Access modifier</b> is used to restrict the usage of the variables, methods and class used in the application. Like other OOP programming language, this modifier is applicable at multiple places such as in the class header or method declaration. There are four access modifiers available in Kotlin.</p>\n<h2>Private</h2>\n<p>The classes, methods, and packages can be declared with a private modifier. Once anything is declared as private, then it will be accessible within its immediate scope. For instance, a private package can be accessible within that specific file. A private class or interface can be accessible only by its data members, etc.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> privateExample </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">private</span><span class=\"pln\"> val i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pln\">\n   </span><span class=\"kwd\">private</span><span class=\"pln\"> val doSomething</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>In the above example, the class <b>“privateExample”</b> and the variable i both can be accessible only in the same Kotlin file, where its mentioned as they all are declared as private in the declaration block.</p>\n<h2>Protected</h2>\n<p>Protected is another access modifier for Kotlin, which is currently not available for top level declaration like any package cannot be protected. A protected class or interface is visible to its subclass only.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">class</span><span class=\"pln\"> A</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">protected</span><span class=\"pln\"> val i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">class</span><span class=\"pln\"> B </span><span class=\"pun\">:</span><span class=\"pln\"> A</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   fun getValue</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Int</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">return</span><span class=\"pln\"> i\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>In the above example, the variable <b>“i”</b> is declared as protected, hence, it is only visible to its subclass.</p>\n<h2>Internal</h2>\n<p>Internal is a newly added modifier introduced in Kotlin. If anything is marked as internal, then that specific field will be in the internal field. An Internal package is visible only inside the module under which it is implemented. An internal class interface is visible only by other class present inside the same package or the module. In the following example, we will see how to implement an internal method.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">class</span><span class=\"pln\"> internalExample </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">internal</span><span class=\"pln\"> val i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pln\">\n   </span><span class=\"kwd\">internal</span><span class=\"pln\"> fun doSomething</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>In the above example, the method named “doSomething” and the variable is mentioned as internal, hence, these two fields can be accessible only inside the package under which it is declared.</p>\n<h2>Public</h2>\n<p>Public modifier is accessible from anywhere in the project workspace. If no access modifier is specified, then by default it will be in the public scope. In all our previous examples, we have not mentioned any modifier, hence, all of them are in the public scope. Following is an example to understand more on how to declare a public variable or method.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">class</span><span class=\"pln\"> publicExample </span><span class=\"pun\">{</span><span class=\"pln\">\n   val i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pln\">\n   fun doSomething</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>In the above example, we have not mentioned any modifier, thus all these methods and variables are by default public.</p>"
          ]
        },
        {
          "tag_line": "Kotlin - Extension (Auf Englisch)",
          "details": [
            "\n<header id=\"header\" class=\"fixed\">\n<!-- Top sub-menu Starts Here -->\n<div class=\"mui-appbar mui-container-fulid top-menu\">\n<div class=\"mui-container\">\n<div class=\"top-menu-item home\">\n<a href=\"https://www.tutorialspoint.com/index.htm\" target=\"_blank\" title=\"TutorialsPoint - Home\"><i class=\"fal fa-home\"></i> <span>Home</span></a>\n</div>\n<div class=\"top-menu-item qa\">\n<a href=\"https://www.tutorialspoint.com/about/about_careers.htm\" target=\"_blank\" title=\"Job @ Tutorials Point\"><i class=\"fa fa-suitcase\"></i> <span>Jobs</span></a>\n</div>\n<div class=\"top-menu-item tools\">\n<a href=\"https://www.tutorialspoint.com/online_dev_tools.htm\" target=\"_blank\" title=\"Tools - Online Development and Testing Tools\"><i class=\"fal fa-cogs\"></i> <span>Tools</span></a>\n</div>\n<div class=\"top-menu-item coding-ground\">\n<a href=\"https://www.tutorialspoint.com/codingground.htm\" target=\"_blank\" title=\"Coding Ground - Free Online IDE and Terminal\"><i class=\"fal fa-code\"></i> <span>Coding Ground </span></a> \n</div>\n<div class=\"top-menu-item current-affairs\">\n<a href=\"https://www.tutorialspoint.com/current_affairs.htm\" target=\"_blank\" title=\"Daily Current Affairs\"><i class=\"fal fa-layer-plus\"></i> <span>Current Affairs</span></a>\n</div>\n<div class=\"top-menu-item upsc-notes\">\n<a href=\"https://www.tutorialspoint.com/upsc_ias_exams.htm\" target=\"_blank\" title=\"UPSC IAS Exams Notes - TutorialsPoint\"><i class=\"fal fa-user-tie\"></i> <span>UPSC Notes</span></a>\n</div>      \n<div class=\"top-menu-item online-tutoris\">\n<a href=\"https://www.tutorialspoint.com/tutor_connect/index.php\" target=\"_blank\" title=\"Top Online Tutors - Tutor Connect\"><i class=\"fal fa-user\"></i> <span>Online Tutors</span></a>\n</div>\n<div class=\"top-menu-item whiteboard\">\n<a href=\"https://www.tutorialspoint.com/whiteboard.htm\" target=\"_blank\" title=\"Free Online Whiteboard\"><i class=\"fal fa-chalkboard\"></i> <span>Whiteboard</span></a>\n</div>\n<div class=\"top-menu-item net-meeting\">\n<a href=\"https://www.tutorialspoint.com/netmeeting.php\" target=\"_blank\" title=\"A free tool for online video conferencing\"><i class=\"fal fa-chalkboard-teacher\"></i> <span>Net Meeting</span></a> \n</div>\n<div class=\"top-menu-item articles\">\n<a href=\"https://www.tutorix.com\" target=\"_blank\" title=\"Tutorx - The Best Learning App\" rel=\"nofollow\"><i class=\"fal fa-video\"></i> <span>Tutorix</span></a> \n</div>        \n<div class=\"social-menu-item\">\n<a href=\"https://www.facebook.com/tutorialspointindia\" target=\"_blank\" rel=\"nofollow\" data-placement=\"bottom\" title=\"tutorialspoint @ Facebook\"><i class=\"fab fa-facebook-f\"></i></a> \n<a href=\"https://www.twitter.com/tutorialspoint\" target=\"_blank\" rel=\"nofollow\" data-placement=\"bottom\" title=\"tutorialspoint @ Twitter\"><i class=\"fab fa-twitter\"></i></a>\n<a href=\"https://www.linkedin.com/company/tutorialspoint\" target=\"_blank\" rel=\"nofollow\" data-placement=\"bottom\" title=\"tutorialspoint @ Linkedin\"><i class=\"fab fa-linkedin-in\"></i></a>\n<a href=\"https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg\" target=\"_blank\" rel=\"nofollow\" data-placement=\"bottom\" title=\"tutorialspoint YouTube\"><i class=\"fab fa-youtube\"></i></a>\n</div>        \n</div>\n</div>\n<!-- Top sub-menu Ends Here -->\n<!-- Top main-menu Starts Here -->\n<div class=\"mui-appbar mui-container-fulid mui--appbar-line-height mui--z1 sticky\" id=\"logo-menu\">\n<div class=\"mui-container\">\n<div class=\"left-menu\">\n<a href=\"https://www.tutorialspoint.com/index.htm\" title=\"Tutorialspoint\">\n<img class=\"tp-logo\" alt=\"tutorialspoint\" src=\"/kotlin/images/logo.png\">\n</a>\n<div class=\"mui-dropdown\">\n<a class=\"mui-btn mui-btn--primary categories\" data-mui-toggle=\"dropdown\"><i class=\"fa fa-th-large\"></i> \n<span>Categories <span class=\"mui-caret\"></span></span></a>            \n<ul class=\"mui-dropdown__menu cat-menu\">\n<li>\n<ul>\n<li><a href=\"/academic_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Academic Tutorials</a></li>\n<li><a href=\"/big_data_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Big Data &amp; Analytics </a></li>\n<li><a href=\"/computer_programming_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Computer Programming </a></li>\n<li><a href=\"/computer_science_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Computer Science </a></li>\n<li><a href=\"/database_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Databases </a></li>\n<li><a href=\"/devops_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> DevOps </a></li>\n<li><a href=\"/digital_marketing_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Digital Marketing </a></li>\n<li><a href=\"/engineering_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Engineering Tutorials </a></li>\n<li><a href=\"/upsc_ias_exams.htm\"><i class=\"fa fa-caret-right\"></i> Exams Syllabus </a></li>\n<li><a href=\"/famous_monuments.htm\"><i class=\"fa fa-caret-right\"></i> Famous Monuments </a></li>\n<li><a href=\"/gate_exams_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> GATE Exams Tutorials</a></li>\n<li><a href=\"/latest_technologies.htm\"><i class=\"fa fa-caret-right\"></i> Latest Technologies </a></li>\n<li><a href=\"/machine_learning_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Machine Learning </a></li>\n<li><a href=\"/mainframe_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Mainframe Development </a></li>\n<li><a href=\"/management_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Management Tutorials </a></li>\n<li><a href=\"/maths_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Mathematics Tutorials</a></li>\n<li><a href=\"/microsoft_technologies_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Microsoft Technologies </a></li>\n<li><a href=\"/misc_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Misc tutorials </a></li>\n<li><a href=\"/mobile_development_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Mobile Development </a></li>\n<li><a href=\"/java_technology_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Java Technologies </a></li>\n<li><a href=\"/python_technologies_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Python Technologies </a></li>\n<li><a href=\"/sap_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> SAP Tutorials </a></li>\n<li><a href=\"/scripting_lnaguage_tutorials.htm\"><i class=\"fa fa-caret-right\"></i>Programming Scripts </a></li>\n<li><a href=\"/selected_reading.htm\"><i class=\"fa fa-caret-right\"></i> Selected Reading </a></li>\n<li><a href=\"/software_quality_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Software Quality </a></li>\n<li><a href=\"/soft_skill_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Soft Skills </a></li>\n<li><a href=\"/telecom_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Telecom Tutorials </a></li>\n<li><a href=\"/upsc_ias_exams.htm\"><i class=\"fa fa-caret-right\"></i> UPSC IAS Exams </a></li>\n<li><a href=\"/web_development_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Web Development </a></li>\n<li><a href=\"/sports_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Sports Tutorials </a></li>\n<li><a href=\"/xml_technologies_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> XML Technologies </a></li>\n<li><a href=\"/multi_language_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Multi-Language</a></li>\n<li><a href=\"/questions_and_answers.htm\"><i class=\"fa fa-caret-right\"></i> Interview Questions</a></li>\n</ul>\n</li>\n</ul>\n<div class=\"clear\"></div>\n</div> \n</div>\n<div class=\"right-menu\">\n<div class=\"toc-toggle\">\n<a href=\"javascript:void(0);\"><i class=\"fa fa-bars\"></i></a>\n</div>\n<div class=\"mobile-search-btn\">\n<a href=\"https://www.tutorialspoint.com/search.htm\"><i class=\"fal fa-search\"></i></a>\n</div>\n<div class=\"search-box\">\n<form method=\"get\" class=\"\" name=\"searchform\" action=\"https://www.google.com/search\" target=\"_blank\" novalidate=\"\">\n<input type=\"hidden\" name=\"sitesearch\" value=\"www.tutorialspoint.com\" class=\"user-valid valid\">\n<input class=\"header-search-box\" type=\"text\" id=\"search-string\" name=\"q\" placeholder=\"Search your favorite tutorials...\" onfocus=\"if (this.value == 'Search your favorite tutorials...') {this.value = '';}\" onblur=\"if (this.value == '') {this.value = 'Search your favorite tutorials...';}\" autocomplete=\"off\">\n<button><i class=\"fal fa-search\"></i></button>\n</form>\n</div>\n<div class=\"menu-btn library-btn\">\n<a href=\"https://www.tutorialspoint.com/tutorialslibrary.htm\"><i class=\"fal fa-cubes\"></i> <span>Library</span></a>\n</div>\n<div class=\"menu-btn videos-btn\">\n<a href=\"https://www.tutorialspoint.com/videotutorials/index.php\"><i class=\"fal fa-video\"></i> <span>Videos</span></a> \n</div>\n<div class=\"menu-btn videos-btn\">\n<a href=\"https://www.tutorialspoint.com/questions/index.php\"><i class=\"fa fa-location-arrow\"></i> <span>Q/A</span></a>\n</div>\n<div class=\"menu-btn ebooks-btn\">\n<a href=\"https://store.tutorialspoint.com\"><i class=\"fal fa-book\"></i> <span>eBooks</span></a>\n</div>\n<div class=\"mui-dropdown\">\n<button class=\"mui-btn mui-btn--primary\" data-mui-toggle=\"dropdown\" type=\"button\">\n<span class=\"mui-caret\"></span>\n</button>\n<ul class=\"mui-dropdown__menu\">\n<li><a href=\"https://www.tutorialspoint.com/tutorialslibrary.htm\"><i class=\"fal fa-cubes\"></i> <span>Library</span></a></li>\n<li><a href=\"https://www.tutorialspoint.com/videotutorials/index.php\"><i class=\"fal fa-video\"></i> <span>Videos</span></a></li>\n<li><a href=\"https://store.tutorialspoint.com\"><i class=\"fal fa-book\"></i> <span>eBooks</span></a></li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<!-- Top main-menu Ends Here -->\n</header>\n<div class=\"mui-container-fluid content\">\n<div class=\"mui-container\">\n<!-- Tutorial ToC Starts Here -->\n<div class=\"mui-col-md-3 tutorial-toc\">\n<div class=\"mini-logo\">\n<img src=\"/kotlin/images/kotlin-mini-logo.jpg\" alt=\"Kotlin Tutorial\">\n</div>\n<ul class=\"toc chapters\">\n<li class=\"heading\">Kotlin Tutorial</li>\n<li><a href=\"/kotlin/index.htm\">Kotlin - Home</a></li>\n<li><a href=\"/kotlin/kotlin_overview.htm\">Kotlin - Overview</a></li>\n<li><a href=\"/kotlin/kotlin_environment_setup.htm\">Kotlin - Environment Setup</a></li>\n<li><a href=\"/kotlin/kotlin_architecture.htm\">Kotlin - Architecture</a></li>\n<li><a href=\"/kotlin/kotlin_basic_types.htm\">Kotlin - Basic Types</a></li>\n<li><a href=\"/kotlin/kotlin_control_flow.htm\">Kotlin - Control Flow</a></li>\n<li><a href=\"/kotlin/kotlin_class_and_object.htm\">Kotlin - Class &amp; Object</a></li>\n<li><a href=\"/kotlin/kotlin_constructors.htm\">Kotlin - Constructors</a></li>\n<li><a href=\"/kotlin/kotlin_inheritance.htm\">Kotlin - Inheritance</a></li>\n<li><a href=\"/kotlin/kotlin_interface.htm\">Kotlin - Interface</a></li>\n<li><a href=\"/kotlin/kotlin_visibility_control.htm\">Kotlin - Visibility Control</a></li>\n<li style=\"background-color: rgb(214, 214, 214);\"><a href=\"/kotlin/kotlin_extension.htm\">Kotlin - Extension</a></li>\n<li><a href=\"/kotlin/kotlin_data_classes.htm\">Kotlin - Data Classes</a></li>\n<li><a href=\"/kotlin/kotlin_sealed_class.htm\">Kotlin - Sealed Class</a></li>\n<li><a href=\"/kotlin/kotlin_generics.htm\">Kotlin - Generics</a></li>\n<li><a href=\"/kotlin/kotlin_delegation.htm\">Kotlin - Delegation</a></li>\n<li><a href=\"/kotlin/kotlin_functions.htm\">Kotlin - Functions</a></li>\n<li><a href=\"/kotlin/kotlin_destructuring_declarations.htm\">Kotlin - Destructuring Declarations</a></li>\n<li><a href=\"/kotlin/kotlin_exception_handling.htm\">Kotlin - Exception Handling</a></li>\n</ul>\n<ul class=\"toc chapters\">\n<li class=\"heading\">Kotlin Useful Resources</li>\n<li><a href=\"/kotlin/kotlin_quick_guide.htm\">Kotlin - Quick Guide</a></li>\n<li><a href=\"/kotlin/kotlin_useful_resources.htm\">Kotlin - Useful Resources</a></li>\n<li><a href=\"/kotlin/kotlin_discussion.htm\">Kotlin - Discussion</a></li>\n</ul>\n<ul class=\"toc reading\">\n<li class=\"sreading\">Selected Reading</li>\n<li><a target=\"_top\" href=\"/upsc_ias_exams.htm\">UPSC IAS Exams Notes</a></li>\n<li><a target=\"_top\" href=\"/developers_best_practices/index.htm\">Developer's Best Practices</a></li>\n<li><a target=\"_top\" href=\"/questions_and_answers.htm\">Questions and Answers</a></li>\n<li><a target=\"_top\" href=\"/effective_resume_writing.htm\">Effective Resume Writing</a></li>\n<li><a target=\"_top\" href=\"/hr_interview_questions/index.htm\">HR Interview Questions</a></li>\n<li><a target=\"_top\" href=\"/computer_glossary.htm\">Computer Glossary</a></li>\n<li><a target=\"_top\" href=\"/computer_whoiswho.htm\">Who is Who</a></li>\n</ul>\n</div>\n<!-- Tutorial ToC Ends Here -->\n<!-- Tutorial Content Starts Here -->\n<div class=\"mui-col-md-6 tutorial-content\">\n<h1>Kotlin - Extension</h1>\n<hr>\n<div class=\"top-ad-heading\">Advertisements</div>\n<div style=\"text-align:center;\" class=\"google-top-ads\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\nvar width = document.getElementsByClassName(\"tutorial-content\")[0].clientWidth - 40;\ngoogle_ad_width = width;\ngoogle_ad_height = 150;\ngoogle_ad_format = width + \"x150_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"mui-container-fluid button-borders\">\n<div class=\"pre-btn\">\n<a href=\"/kotlin/kotlin_visibility_control.htm\"><i class=\"fal fa-chevron-circle-left\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/kotlin/kotlin_data_classes.htm\">Next Page <i class=\"fal fa-chevron-circle-right\"></i>&nbsp;</a>\n</div>\n</div>\n<div class=\"clearer\"></div>\n<p>In this chapter, we will learn about another new feature of Kotlin named “Extension”. Using extension, we will be able to add or remove some method functionality even without inheriting or modifying them. Extensions are resolved statistically. It does not actually modify the existing class, but it creates a callable function that can be called with a dot operation.</p>\n<h2>Function Extension</h2>\n<p>In function extension, Kotlin allows to define a method outside of the main class. In the following example, we will see how the extension is implemented at the functional level.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/gVg3WW\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Alien</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\"> skills </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"null\"</span><span class=\"pln\">\n\t\n   fun printMySkills</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">print</span><span class=\"pun\">(</span><span class=\"pln\">skills</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\t\t\n</span><span class=\"pun\">}</span><span class=\"pln\">\nfun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\">  a1 </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">Alien</span><span class=\"pun\">()</span><span class=\"pln\">\n   a1</span><span class=\"pun\">.</span><span class=\"pln\">skills </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"JAVA\"</span><span class=\"pln\">\n   </span><span class=\"com\">//a1.printMySkills()</span><span class=\"pln\">\n\t\n   </span><span class=\"kwd\">var</span><span class=\"pln\">  a2 </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">Alien</span><span class=\"pun\">()</span><span class=\"pln\">\n   a2</span><span class=\"pun\">.</span><span class=\"pln\">skills </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"SQL\"</span><span class=\"pln\">\n   </span><span class=\"com\">//a2.printMySkills()</span><span class=\"pln\">\n\t\n   </span><span class=\"kwd\">var</span><span class=\"pln\">  a3 </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">Alien</span><span class=\"pun\">()</span><span class=\"pln\">\n   a3</span><span class=\"pun\">.</span><span class=\"pln\">skills </span><span class=\"pun\">=</span><span class=\"pln\"> a1</span><span class=\"pun\">.</span><span class=\"pln\">addMySkills</span><span class=\"pun\">(</span><span class=\"pln\">a2</span><span class=\"pun\">)</span><span class=\"pln\">\n   a3</span><span class=\"pun\">.</span><span class=\"pln\">printMySkills</span><span class=\"pun\">()</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\nfun </span><span class=\"typ\">Alien</span><span class=\"pun\">.</span><span class=\"pln\">addMySkills</span><span class=\"pun\">(</span><span class=\"pln\">a</span><span class=\"pun\">:</span><span class=\"typ\">Alien</span><span class=\"pun\">):</span><span class=\"typ\">String</span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\"> a4 </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">Alien</span><span class=\"pun\">()</span><span class=\"pln\">\n   a4</span><span class=\"pun\">.</span><span class=\"pln\">skills </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">skills </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\" \"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\">a</span><span class=\"pun\">.</span><span class=\"pln\">skills\n   </span><span class=\"kwd\">return</span><span class=\"pln\"> a4</span><span class=\"pun\">.</span><span class=\"pln\">skills\n</span><span class=\"pun\">}</span></pre>\n<p>In the above example, we don’t have any method inside “Alien” class named as “addMySkills()”, however, we still are implementing the same method somewhere else outside of the class, This is the magic of extension.</p>\n<p>The above piece of code will generate the following output in the browser.</p>\n<pre class=\"result notranslate\">JAVA SQL\n</pre>\n<h2>Object Extension</h2>\n<p>Kotlin provides another mechanism to implement static functionality of Java. This can be achieved using the keyword “companion object”. Using this mechanism, we can create an object of a class inside a factory method and later we can just call that method using the reference of the class name. In the following example, we will  create a “companion object”.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/ARdnQp\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"Heyyy!!!\"</span><span class=\"pun\">+</span><span class=\"pln\">A</span><span class=\"pun\">.</span><span class=\"pln\">show</span><span class=\"pun\">())</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">class</span><span class=\"pln\"> A </span><span class=\"pun\">{</span><span class=\"pln\">\n   companion </span><span class=\"kwd\">object</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      fun show</span><span class=\"pun\">():</span><span class=\"typ\">String</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         </span><span class=\"kwd\">return</span><span class=\"pun\">(</span><span class=\"str\">\"You are learning Kotlin from TutorialsPoint.com\"</span><span class=\"pun\">)</span><span class=\"pln\">\n      </span><span class=\"pun\">}</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>The above piece of code will yield the following output in the browser.</p>\n<pre class=\"result notranslate\">Heyyy!!! You are learning Kotlin from TutorialsPoint.com\n</pre>\n<p>The above example seems like static in Java, however, in real-time we are creating an object as a member variable of that same class. This is why it is also included under extension property and can be alternatively called as an object extension. You are basically extending the object of the same class to use some of the member functions.</p>\n<div class=\"mui-container-fluid button-borders show\">\n<div class=\"pre-btn\">\n<a href=\"/kotlin/kotlin_visibility_control.htm\"><i class=\"fal fa-chevron-circle-left\"></i> Previous Page</a>\n<a class=\"hide-on-mobile\" href=\"javascript:printPage();\"><i class=\"fa fa-print\"></i> Print Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/kotlin/kotlin_data_classes.htm\">Next Page <i class=\"fal fa-chevron-circle-right\"></i>&nbsp;</a>\n</div>\n</div>\n<div class=\"google-bottom-ads\">\n<div>Advertisements</div>\n<div>\n   <div id=\"vi_bottom_ads\"><div class=\"adsbyvli\" data-ad-slot=\"vi_9013190\"></div></div>\n   <script>\n     (function() {\n     var adPos = document.getElementById('vi_bottom_ads');\n     var mobile_ad_id = \"vi_9012177\";\n     var desktop_ad_id = \"vi_9013190\";\n     var ad_id = window.innerWidth <= 768 ? mobile_ad_id : desktop_ad_id;\n     adPos.innerHTML = '<div class=\"adsbyvli\" data-ad-slot=\"' + ad_id + '\"></div>';\n     (vitag.displayInit = window.vitag.displayInit || []).push(function () {\n         viAPItag.display(ad_id);\n     });\n     }())\n   </script>\n</div>\n<div class=\"space-bottom\"></div>\n</div>\n</div>\n<!-- Tutorial Content Ends Here -->\n<!-- Right Column Starts Here -->\n<div class=\"mui-col-md-2 google-right-ads\">\n<div class=\"space-top\"></div>\n<div class=\"google-right-ad\" style=\"margin: 0px auto !important;margin-top:5px;\">\n<div class=\"adsbyvli\" data-ad-slot=\"vi_9012177\"></div>\n<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display(\"vi_9012177\")})</script>\n</div>\n<div class=\"google-right-ad\" style=\"margin-top:5px;\">\n<div class=\"adsbyvli\" data-ad-slot=\"vi_9012177\"></div>\n<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display(\"vi_9012177\")})</script>\n</div>\n<div class=\"google-right-ad\" style=\"margin-top:5px;\">\n<div class=\"adsbyvli\" data-ad-slot=\"vi_9013289\"></div>\n<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display(\"vi_9013289\")})</script>\n</div>\n<div class=\"space-bottom\" style=\"margin-bottom:15px;\"></div>\n</div>\n<!-- Right Column Ends Here -->\n</div>\n</div>\n<div class=\"clear\"></div>\n<footer id=\"footer\">\n<div class=\"mui--text-center\">\n<div class=\"mui--text-caption mui--text-light\">\n<a href=\"/index.htm\" class=\"logo\"><img class=\"img-responsive\" src=\"/images/logo-black.png\" alt=\"Tutorials Point\" title=\"Tutorials Point\"></a>\n</div>\n<ul class=\"mui-list--inline mui--text-body2 mui--text-light\">\n<li><a href=\"/about/index.htm\"><i class=\"fal fa-globe\"></i> About us</a></li>\n<li><a href=\"/about/about_terms_of_use.htm\"><i class=\"fal fa-asterisk\"></i> Terms of use</a></li>\n<li><a href=\"/about/about_privacy.htm#cookies\"> <i class=\"fal fa-shield-check\"></i> Cookies Policy</a></li>\n<li><a href=\"/about/faq.htm\"><i class=\"fal fa-question-circle\"></i> FAQ's</a></li>\n<li><a href=\"/about/about_helping.htm\"><i class=\"fal fa-hands-helping\"></i> Helping</a></li>\n<li><a href=\"/about/contact_us.htm\"><i class=\"fal fa-map-marker-alt\"></i> Contact</a></li>\n</ul>\n<div class=\"mui--text-caption mui--text-light bottom-copyright-text\">© Copyright 2019. All Rights Reserved.</div>\n</div>\n<script async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=UA-232293-17\"></script>\n<script>\nwindow.dataLayer = window.dataLayer || [];\nfunction gtag(){dataLayer.push(arguments);}\ngtag('js', new Date());\ngtag('config', 'UA-232293-6');\n</script>\n</footer>\n\n\n"
          ]
        },
        {
          "tag_line": "Kotlin - Data Classes (Auf Englisch)",
          "details": [
            "<p>In this chapter, we will learn more about Data classes of Kotlin programming language. A class can be marked as a Data class whenever it is marked as ”data”. This type of class can be used to hold the basic data apart. Other than this, it does not provide any other functionality.</p>\n<p>All the data classes need to have one primary constructor and all the primary constructor should have at least one parameter. Whenever a class is marked as data, we can use some of the inbuilt function of that data class such as “toString()”,”hashCode()”, etc. Any data class cannot have a modifier like abstract and open or internal. Data class can be extended to other classes too. In the following example, we will create one data class.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/FAhheY\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val book</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Book</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">Book</span><span class=\"pun\">(</span><span class=\"str\">\"Kotlin\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"TutorialPoint.com\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">5</span><span class=\"pun\">)</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"Name of the Book is--\"</span><span class=\"pun\">+</span><span class=\"pln\">book</span><span class=\"pun\">.</span><span class=\"pln\">name</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"com\">// \"Kotlin\"</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"Puclisher Name--\"</span><span class=\"pun\">+</span><span class=\"pln\">book</span><span class=\"pun\">.</span><span class=\"pln\">publisher</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"com\">// \"TutorialPoint.com\"</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"Review of the book is--\"</span><span class=\"pun\">+</span><span class=\"pln\">book</span><span class=\"pun\">.</span><span class=\"pln\">reviewScore</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"com\">// 5</span><span class=\"pln\">\n   book</span><span class=\"pun\">.</span><span class=\"pln\">reviewScore </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">7</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"str\">\"Printing all the info all together--\"</span><span class=\"pun\">+</span><span class=\"pln\">book</span><span class=\"pun\">.</span><span class=\"pln\">toString</span><span class=\"pun\">())</span><span class=\"pln\"> \n   </span><span class=\"com\">//using inbuilt function of the data class </span><span class=\"pln\">\n   \n   println</span><span class=\"pun\">(</span><span class=\"str\">\"Example of the hashCode function--\"</span><span class=\"pun\">+</span><span class=\"pln\">book</span><span class=\"pun\">.</span><span class=\"pln\">hashCode</span><span class=\"pun\">())</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n\ndata </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Book</span><span class=\"pun\">(</span><span class=\"pln\">val name</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"pln\"> val publisher</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">var</span><span class=\"pln\"> reviewScore</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Int</span><span class=\"pun\">)</span></pre>\n<p>The above piece of code will yield the following output in the browser, where we have created one data class to hold some of the data, and from the main function we have accessed all of its data members.</p>\n<pre class=\"result notranslate\">Name of the Book is--\"Kotlin\"\nPuclisher Name--\"TutorialPoint.com\"\nReview of the book is--5\nPrinting all the info all together--(name-Kotlin, publisher-TutorialPoint.com, reviewScore-7)\nExample of the hashCode function---1753517245</pre>"
          ]
        },
        {
          "tag_line": "Kotlin - Sealed Class (Auf Englisch)",
          "details": [
            "<p>In this chapter, we will learn about another class type called “Sealed” class. This type of class is used to represent a restricted class hierarchy. Sealed allows the developers to maintain a data type of a predefined type. To make a sealed class, we need to use the keyword “sealed” as a modifier of that class. A sealed class can have its own subclass but all those subclasses need to be declared inside the same Kotlin file along with the sealed class. In the following example, we will see how to use a sealed class.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/iCfSyw\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">sealed</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">MyExample</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">class</span><span class=\"pln\"> OP1 </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">MyExample</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"com\">// MyExmaple class can be of two types only</span><span class=\"pln\">\n   </span><span class=\"kwd\">class</span><span class=\"pln\"> OP2 </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">MyExample</span><span class=\"pun\">()</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\nfun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val obj</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">MyExample</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">MyExample</span><span class=\"pun\">.</span><span class=\"pln\">OP2</span><span class=\"pun\">()</span><span class=\"pln\"> \n   \n   val output </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">when</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">obj</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"com\">// defining the object of the class depending on the inuputs </span><span class=\"pln\">\n      </span><span class=\"kwd\">is</span><span class=\"pln\"> </span><span class=\"typ\">MyExample</span><span class=\"pun\">.</span><span class=\"pln\">OP1 </span><span class=\"pun\">-&gt;</span><span class=\"pln\"> </span><span class=\"str\">\"Option One has been chosen\"</span><span class=\"pln\">\n      </span><span class=\"kwd\">is</span><span class=\"pln\"> </span><span class=\"typ\">MyExample</span><span class=\"pun\">.</span><span class=\"pln\">OP2 </span><span class=\"pun\">-&gt;</span><span class=\"pln\"> </span><span class=\"str\">\"option Two has been chosen\"</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n   \n   println</span><span class=\"pun\">(</span><span class=\"pln\">output</span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>In the above example, we have one sealed class named “MyExample”, which can be of two types only - one is “OP1” and another one is “OP2”. In the main class, we are creating an object in our class and assigning its type at runtime. Now, as this “MyExample” class is sealed, we can apply the “when ” clause at runtime to implement the final output.</p>\n<p>In sealed class, we need not use any unnecessary “else” statement to complex out the code. The above piece of code will yield the following output in the browser.</p>"
          ]
        },
        {
          "tag_line": "Kotlin - Generics (Auf Englisch)",
          "details": [
            "<p>Like Java, Kotlin provides higher order of variable typing called as Generics. In this chapter, we will learn how Kotlin implements Generics and how as a developer we can use those functionalities provided inside the generics library. Implementation wise, generics is pretty similar to Java but Kotlin developer has introduced two new keywords <b>“out”</b> and <b>“in”</b> to make Kotlin codes more readable and easy for the developer.</p>\n<p>In Kotlin, a class and a type are totally different concepts. As per the example, List is a class in Kotlin, whereas List&lt;String&gt; is a type in Kotlin. The following example depicts how generics is implemented in Kotlin.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val integer</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Int</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pln\">\n   val number</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Number</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> integer\n   </span><span class=\"kwd\">print</span><span class=\"pun\">(</span><span class=\"pln\">number</span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>In the above code, we have declared one “integer” and later we have assigned that variable to a number variable. This is possible because “Int” is a subclass of Number class, hence the type conversion happens automatically at runtime and produces the output as “1”.</p>\n<p>Let us learn something more about generics in Kotlin. It is better to go for generic data type whenever we are not sure about the data type we are going to use in the application. Generally, in Kotlin generics is defined by <b>&lt;T&gt;</b> where “T” stands for template, which can be determined dynamically by Kotlin complier. In the following example, we will see how to use generic data types in Kotlin programming language.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/edI3jn\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\"> objet </span><span class=\"pun\">=</span><span class=\"pln\"> genericsExample</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;(</span><span class=\"str\">\"JAVA\"</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\"> objet1 </span><span class=\"pun\">=</span><span class=\"pln\"> genericsExample</span><span class=\"pun\">&lt;</span><span class=\"typ\">Int</span><span class=\"pun\">&gt;(</span><span class=\"lit\">10</span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">class</span><span class=\"pln\"> genericsExample</span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;(</span><span class=\"pln\">input</span><span class=\"pun\">:</span><span class=\"pln\">T</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   init </span><span class=\"pun\">{</span><span class=\"pln\">\n      println</span><span class=\"pun\">(</span><span class=\"str\">\"I am getting called with the value \"</span><span class=\"pun\">+</span><span class=\"pln\">input</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>In the above piece of code, we are creating one class with generic return type, which is represented as <b>&lt;T&gt;</b>. Take a look at the main method, where we have dynamically defined its value at the run by proving the value type, while creating the object of this class. This is how generics is interpreted by Kotlin compiler. We will get the following output in the browser, once we run this code in our coding ground.</p>\n<pre class=\"result notranslate\">I am getting called with the value JAVA\nI am getting called with the value 10\n</pre>\n<p>When we want to assign the generic type to any of its super type, then we need to use “out” keyword, and when we want to assign the generic type to any of its sub-type, then we need to use “in” keyword. In the following example, we will use “out” keyword. Similarly, you can try using “in” keyword.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/HWRSvq\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">fun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\"> objet1 </span><span class=\"pun\">=</span><span class=\"pln\"> genericsExample</span><span class=\"pun\">&lt;</span><span class=\"typ\">Int</span><span class=\"pun\">&gt;(</span><span class=\"lit\">10</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\"> object2 </span><span class=\"pun\">=</span><span class=\"pln\"> genericsExample</span><span class=\"pun\">&lt;</span><span class=\"typ\">Double</span><span class=\"pun\">&gt;(</span><span class=\"lit\">10.00</span><span class=\"pun\">)</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"pln\">objet1</span><span class=\"pun\">)</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"pln\">object2</span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">class</span><span class=\"pln\"> genericsExample</span><span class=\"pun\">&lt;</span><span class=\"kwd\">out</span><span class=\"pln\"> T</span><span class=\"pun\">&gt;(</span><span class=\"pln\">input</span><span class=\"pun\">:</span><span class=\"pln\">T</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   init </span><span class=\"pun\">{</span><span class=\"pln\">\n      println</span><span class=\"pun\">(</span><span class=\"str\">\"I am getting called with the value \"</span><span class=\"pun\">+</span><span class=\"pln\">input</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>The above code will yield the following output in the browser.</p>\n<pre class=\"result notranslate\">I am getting called with the value 10\nI am getting called with the value 10.0\ngenericsExample@28d93b30\ngenericsExample@1b6d3586</pre>"
          ]
        },
        {
          "tag_line": "Kotlin - Delegation (Auf Englisch)",
          "details": [
            "<p>Kotlin supports <b>“delegation”</b> design pattern by introducing a new keyword <b>“by”</b>. Using this keyword or delegation methodology, Kotlin allows the derived class to access all the implemented public methods of an interface through a specific object. The following example demonstrates how this happens in Kotlin.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/Efl9AY\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">interface</span><span class=\"pln\"> </span><span class=\"typ\">Base</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   fun printMe</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"com\">//abstract method</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">BaseImpl</span><span class=\"pun\">(</span><span class=\"pln\">val x</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Int</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Base</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">override</span><span class=\"pln\"> fun printMe</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> println</span><span class=\"pun\">(</span><span class=\"pln\">x</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\">   </span><span class=\"com\">//implementation of the method</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Derived</span><span class=\"pun\">(</span><span class=\"pln\">b</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Base</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Base</span><span class=\"pln\"> </span><span class=\"kwd\">by</span><span class=\"pln\"> b  </span><span class=\"com\">// delegating the public method on the object b</span><span class=\"pln\">\n\nfun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val b </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">BaseImpl</span><span class=\"pun\">(</span><span class=\"lit\">10</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"typ\">Derived</span><span class=\"pun\">(</span><span class=\"pln\">b</span><span class=\"pun\">).</span><span class=\"pln\">printMe</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"com\">// prints 10 :: accessing the printMe() method </span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>In the example, we have one interface “Base” with its abstract method named “printme()”. In the BaseImpl class, we are implementing this “printme()” and later from another class we are using this implementation using “by” keyword.</p>\n<p>The above piece of code will yield the following output in the browser.</p>\n<pre class=\"result notranslate\">10\n</pre>\n<h2>Property Delegation</h2>\n<p>In the previous section, we have learned about the delegation design pattern using “by” keyword. In this section, we will learn about delegation of properties using some standard methods mentioned in Kotlin library.</p>\n<p>Delegation means passing the responsibility to another class or method. When a property is already declared in some places, then we should reuse the same code to initialize them. In the following examples, we will use some standard delegation methodology provided by Kotlin and some standard library function while implementing delegation in our examples.</p>\n<h3>Using Lazy()</h3>\n<p>Lazy is a lambda function which takes a property as an input and in return gives an instance of <b>Lazy&lt;T&gt;</b>, where &lt;T&gt; is basically the type of the properties it is using. Let us take a look at the following to understand how it works.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/kDj8lx\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">val myVar</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> </span><span class=\"kwd\">by</span><span class=\"pln\"> lazy </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"str\">\"Hello\"</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\nfun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   println</span><span class=\"pun\">(</span><span class=\"pln\">myVar </span><span class=\"pun\">+</span><span class=\"str\">\" My dear friend\"</span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>In the above piece of code, we are passing a variable “myVar” to the Lazy function, which in return assigns the value to its object and returns the same to the main function. Following is the output in the browser.</p>\n<pre class=\"result notranslate\">Hello My dear friend\n</pre>\n<h3>Delegetion.Observable()</h3>\n<p>Observable() takes two arguments to initialize the object and returns the same to the called function. In the following example, we will see how to use Observable() method in order to implement delegation.</p>\n<div class=\"demo-view\">\n<a href=\"http://tpcg.io/xeiAIF\" target=\"_blank\" rel=\"nofollow\" class=\"demo\"><i class=\"fa-external-link\"></i> Live Demo</a>\n</div>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> kotlin</span><span class=\"pun\">.</span><span class=\"pln\">properties</span><span class=\"pun\">.</span><span class=\"typ\">Delegates</span><span class=\"pln\">\n</span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">User</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\"> name</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> </span><span class=\"kwd\">by</span><span class=\"pln\"> </span><span class=\"typ\">Delegates</span><span class=\"pun\">.</span><span class=\"pln\">observable</span><span class=\"pun\">(</span><span class=\"str\">\"Welcome to Tutorialspoint.com\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      prop</span><span class=\"pun\">,</span><span class=\"pln\"> old</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"pun\">-&gt;</span><span class=\"pln\">\n      println</span><span class=\"pun\">(</span><span class=\"str\">\"$old -&gt; $new\"</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\nfun main</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   val user </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">User</span><span class=\"pun\">()</span><span class=\"pln\">\n   user</span><span class=\"pun\">.</span><span class=\"pln\">name </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"first\"</span><span class=\"pln\">\n   user</span><span class=\"pun\">.</span><span class=\"pln\">name </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"second\"</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>The above piece of code will yield the following output in the browser.</p>\n<pre class=\"result notranslate\">first -&gt; second\n</pre>\n<p>In general, the syntax is the expression after the “by” keyword is delegated. The <b>get()</b> and <b>set()</b> methods of the variable <b>p</b> will be delegated to its <b>getValue()</b> and <b>setValue()</b> methods defined in the Delegate class.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Example</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\"> p</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> </span><span class=\"kwd\">by</span><span class=\"pln\"> </span><span class=\"typ\">Delegate</span><span class=\"pun\">()</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>For the above piece of code, following is the delegate class that we need to generate in order to assign the value in the variable <b>p</b>.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Delegate</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">operator</span><span class=\"pln\"> fun getValue</span><span class=\"pun\">(</span><span class=\"pln\">thisRef</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Any</span><span class=\"pun\">?,</span><span class=\"pln\"> </span><span class=\"kwd\">property</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">KProperty</span><span class=\"pun\">&lt;*&gt;):</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"str\">\"$thisRef, thank you for delegating '${property.name}' to me!\"</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n   </span><span class=\"kwd\">operator</span><span class=\"pln\"> fun setValue</span><span class=\"pun\">(</span><span class=\"pln\">thisRef</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">Any</span><span class=\"pun\">?,</span><span class=\"pln\"> </span><span class=\"kwd\">property</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">KProperty</span><span class=\"pun\">&lt;*&gt;,</span><span class=\"pln\"> </span><span class=\"kwd\">value</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      println</span><span class=\"pun\">(</span><span class=\"str\">\"$value has been assigned to '${property.name} in $thisRef.'\"</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>While reading, getValue() method will be called and while setting the variable setValue() method will be called.</p>"
          ]
        }
      ]
    },
    {
      "title": "Cordova",
      "content": [
        {
          "tag_line": "Cordova - config.xml File (Auf Englisch)",
          "details": [
            "<p>The <b>config.xml</b> file is the place where we can change the configuration of the app. When we created our app in the last tutorial, we set reverse domain and name. The values can be changed in the <b>config.xml</b> file. When we create the app, the default config file will also be created.</p>\n<img src=\"/cordova/images/config-xml-default.jpg\" alt=\"Config XML Default\">\n<p>The following table explains configuration elements in <b>config.xml</b>.</p>\n<h2>config.xml Configuration Table</h2>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">S.No</th>\n<th style=\"text-align:center;\">Element &amp; Details</th>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">1</td>\n<td><p><b>widget</b></p>\n<p>The app reverse domain value that we specified when creating the app.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">2</td>\n<td><p><b>name</b></p>\n<p>The name of the app that we specified when creating the app.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">3</td>\n<td><p><b>description</b></p>\n<p>Description for the app.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">4</td>\n<td><p><b>author</b></p>\n<p>Author of the app.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">5</td>\n<td><p><b>content</b></p>\n<p>The app's starting page. It is placed inside the <b>www</b> directory.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">6</td>\n<td><p><b>plugin</b></p>\n<p>The plugins that are currently installed.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">7</td>\n<td><p><b>access</b></p>\n<p>Used to control access to external domains. The default <b>origin</b> value is set to * which means that access is allowed to any domain. This value will not allow some specific URLs to be opened to protect information.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">8</td>\n<td><p><b>allow-intent</b></p>\n<p>Allows specific URLs to ask the app to open. For example, <b>&lt;allow-intent href = \"tel:*\" /&gt;</b> will allow tel: links to open the dialer.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">9</td>\n<td><p><b>platform</b></p>\n<p>The platforms for building the app.</p></td></tr></tbody></table>"
          ]
        },
        {
          "tag_line": "Cordova - Storage (Auf Englisch)",
          "details": [
            "<p>We can use storage API available for storing data on the client apps. This will help the usage of the app when the user is offline and it can also improve performance. Since this tutorial is for beginners, we will show you how to use <b>local storage</b>. In one of our later tutorials, we will show you the other plugins that can be used.</p>\n<h2>Step 1 - Adding Buttons</h2>\n<p>We will create four buttons in the <b>index.html</b> file. The buttons will be located inside the <b>div class = \"app\"</b> element.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"tag\">&lt;button</span><span class=\"pln\"> </span><span class=\"atn\">id</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"setLocalStorage\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">SET LOCAL STORAGE</span><span class=\"tag\">&lt;/button&gt;</span><span class=\"pln\">\n</span><span class=\"tag\">&lt;button</span><span class=\"pln\"> </span><span class=\"atn\">id</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"showLocalStorage\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">SHOW LOCAL STORAGE</span><span class=\"tag\">&lt;/button&gt;</span><span class=\"pln\">\n</span><span class=\"tag\">&lt;button</span><span class=\"pln\"> </span><span class=\"atn\">id</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"removeProjectFromLocalStorage\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">REMOVE PROJECT</span><span class=\"tag\">&lt;/button&gt;</span><span class=\"pln\">\n</span><span class=\"tag\">&lt;button</span><span class=\"pln\"> </span><span class=\"atn\">id</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"getLocalStorageByKey\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">GET BY KEY</span><span class=\"tag\">&lt;/button&gt;</span></pre>\n<p>It will produce the following screen −</p>\n<img src=\"/cordova/images/local-storage-buttons.jpg\" alt=\"Local Storage Buttons\">\n<h2>Step 2 - Adding Event Listeners</h2>\n<p>Cordova security policy doesn't allow inline events so we will add event listeners inside index.js files. We will also assign <b>window.localStorage</b> to a <b>localStorage</b> variable that we will use later.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">document</span><span class=\"pun\">.</span><span class=\"pln\">getElementById</span><span class=\"pun\">(</span><span class=\"str\">\"setLocalStorage\"</span><span class=\"pun\">).</span><span class=\"pln\">addEventListener</span><span class=\"pun\">(</span><span class=\"str\">\"click\"</span><span class=\"pun\">,</span><span class=\"pln\"> setLocalStorage</span><span class=\"pun\">);</span><span class=\"pln\"> \ndocument</span><span class=\"pun\">.</span><span class=\"pln\">getElementById</span><span class=\"pun\">(</span><span class=\"str\">\"showLocalStorage\"</span><span class=\"pun\">).</span><span class=\"pln\">addEventListener</span><span class=\"pun\">(</span><span class=\"str\">\"click\"</span><span class=\"pun\">,</span><span class=\"pln\"> showLocalStorage</span><span class=\"pun\">);</span><span class=\"pln\"> \ndocument</span><span class=\"pun\">.</span><span class=\"pln\">getElementById</span><span class=\"pun\">(</span><span class=\"str\">\"removeProjectFromLocalStorage\"</span><span class=\"pun\">).</span><span class=\"pln\">addEventListener \n   </span><span class=\"pun\">(</span><span class=\"str\">\"click\"</span><span class=\"pun\">,</span><span class=\"pln\"> removeProjectFromLocalStorage</span><span class=\"pun\">);</span><span class=\"pln\"> \ndocument</span><span class=\"pun\">.</span><span class=\"pln\">getElementById</span><span class=\"pun\">(</span><span class=\"str\">\"getLocalStorageByKey\"</span><span class=\"pun\">).</span><span class=\"pln\">addEventListener \n   </span><span class=\"pun\">(</span><span class=\"str\">\"click\"</span><span class=\"pun\">,</span><span class=\"pln\"> getLocalStorageByKey</span><span class=\"pun\">);</span><span class=\"pln\">  \n</span><span class=\"kwd\">var</span><span class=\"pln\"> localStorage </span><span class=\"pun\">=</span><span class=\"pln\"> window</span><span class=\"pun\">.</span><span class=\"pln\">localStorage</span><span class=\"pun\">;</span><span class=\"pln\"> \t</span></pre>\n<h2>Step 3 - Creating Functions</h2>\n<p>Now we need to create functions that will be called when the buttons are tapped. First function is used for adding data to local storage.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">function</span><span class=\"pln\"> setLocalStorage</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n   localStorage</span><span class=\"pun\">.</span><span class=\"pln\">setItem</span><span class=\"pun\">(</span><span class=\"str\">\"Name\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"John\"</span><span class=\"pun\">);</span><span class=\"pln\"> \n   localStorage</span><span class=\"pun\">.</span><span class=\"pln\">setItem</span><span class=\"pun\">(</span><span class=\"str\">\"Job\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"Developer\"</span><span class=\"pun\">);</span><span class=\"pln\"> \n   localStorage</span><span class=\"pun\">.</span><span class=\"pln\">setItem</span><span class=\"pun\">(</span><span class=\"str\">\"Project\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"Cordova Project\"</span><span class=\"pun\">);</span><span class=\"pln\"> \n</span><span class=\"pun\">}</span><span class=\"pln\"> </span></pre>\n<p>The next one will log the data we added to console.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">function</span><span class=\"pln\"> showLocalStorage</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n   console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">localStorage</span><span class=\"pun\">.</span><span class=\"pln\">getItem</span><span class=\"pun\">(</span><span class=\"str\">\"Name\"</span><span class=\"pun\">));</span><span class=\"pln\"> \n   console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">localStorage</span><span class=\"pun\">.</span><span class=\"pln\">getItem</span><span class=\"pun\">(</span><span class=\"str\">\"Job\"</span><span class=\"pun\">));</span><span class=\"pln\"> \n   console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">localStorage</span><span class=\"pun\">.</span><span class=\"pln\">getItem</span><span class=\"pun\">(</span><span class=\"str\">\"Project\"</span><span class=\"pun\">));</span><span class=\"pln\"> \n</span><span class=\"pun\">}</span><span class=\"pln\"> \t</span></pre>\n<p>If we tap <b>SET LOCAL STORAGE</b> button, we will set three items to local storage. If we tap <b>SHOW LOCAL STORAGE</b> afterwards, the console will log items that we want.</p>\n<img src=\"/cordova/images/show-local-storage.jpg\" alt=\"Local Storage Log\">\n<p>Let us now create function that will delete the project from local storage.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">function</span><span class=\"pln\"> removeProjectFromLocalStorage</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   localStorage</span><span class=\"pun\">.</span><span class=\"pln\">removeItem</span><span class=\"pun\">(</span><span class=\"str\">\"Project\"</span><span class=\"pun\">);</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>If we click the <b>SHOW LOCAL STORAGE</b> button after we deleted the project, the output will show <b>null</b> value for the project field.</p>\n<img src=\"/cordova/images/show-local-storage-2.jpg\" alt=\"Show Local Storage 2\">\n<p>We can also get the local storage elements by using the <b>key()</b> method which will take the index as an argument and return the element with corresponding index value.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">function</span><span class=\"pln\"> getLocalStorageByKey</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">localStorage</span><span class=\"pun\">.</span><span class=\"pln\">key</span><span class=\"pun\">(</span><span class=\"lit\">0</span><span class=\"pun\">));</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>Now when we tap the <b>GET BY KEY</b> button, the following output will be displayed.</p>\n<img src=\"/cordova/images/show-local-storage-key.jpg\" alt=\"Show Local Storage Key\">\n<h3>NOTE</h3>\n<p>When we use the <b>key()</b> method, the console will log the <b>job</b> instead of the <b>name</b> even though we passed argument <b>0</b> to retrieve the  first object. This is because the local storage is storing data in alphabetical order.</p>\n<p>The following table shows all the available local storage methods.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">S.No</th>\n<th style=\"text-align:center;\">Methods &amp; Details</th>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">1</td>\n<td><p><b>setItem(key, value)</b></p>\n<p>Used for setting the item to local storage.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">2</td>\n<td><p><b>getItem(key)</b></p>\n<p>Used for getting the item from local storage.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">3</td>\n<td><p><b>removeItem(key)</b></p>\n<p>Used for removing the item from local storage.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">4</td>\n<td><p><b>key(index)</b></p>\n<p>Used for getting the item by using the <b>index</b> of the item in local storage. This helps sort the items alphabetically.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">5</td>\n<td><p><b>length()</b></p>\n<p>Used for retrieving the number of items that exists in local storage.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">6</td>\n<td><p><b>clear()</b></p>\n<p>Used for removing all the key/value pairs from local storage.</p></td></tr></tbody></table>"
          ]
        },
        {
          "tag_line": "Cordova - Events (Auf Englisch)",
          "details": [
            "<p>There are various events that can be used in Cordova projects. The following table shows the available events.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">S.No</th>\n<th style=\"text-align:center;\">Events &amp; Details</th>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">1</td>\n<td><p><b>deviceReady</b></p>\n<p>This event is triggered once Cordova is fully loaded. This helps to ensure that no Cordova functions are called before everything is loaded.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">2</td>\n<td><p><b>pause</b></p>\n<p>This event is triggered when the app is put into background.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">3</td>\n<td><p><b>resume</b></p>\n<p>This event is triggered when the app is returned from background.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">4</td>\n<td><p><b>backbutton</b></p>\n<p>This event is triggered when the back button is pressed.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">5</td>\n<td><p><b>menubutton</b></p>\n<p>This event is triggered when the menu button is pressed.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">6</td>\n<td><p><b>searchbutton</b></p>\n<p>This event is triggered when the Android search button is pressed.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">7</td>\n<td><p><b>startcallbutton</b></p>\n<p>This event is triggered when the start call button is pressed.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">8</td>\n<td><p><b>endcallbutton</b></p>\n<p>This event is triggered when the end call button is pressed.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">9</td>\n<td><p><b>volumedownbutton</b></p>\n<p>This event is triggered when the volume down button is pressed.</p></td>\n</tr>\n<tr>\n<td style=\"text-align:center;vertical-align:middle;\">10</td>\n<td><p><b>volumeupbutton</b></p>\n<p>This event is triggered when the volume up button is pressed.</p></td>\n</tr>\n</tbody></table>\n<h2>Using Events</h2>\n<p>All of the events are used almost the same way. We should always add event listeners in our <b>js</b> instead of the <b>inline event calling</b> since the <b>Cordova Content Security Policy</b> doesn't allow inline Javascript. If we try to call event inline, the following error will be displayed.</p>\n<img src=\"/cordova/images/event-error.jpg\" alt=\"Event Error\">\n<p>The right way of working with events is by using <b>addEventListener</b>. We will understand how to use the <b>volumeupbutton</b> event through an example.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">document</span><span class=\"pun\">.</span><span class=\"pln\">addEventListener</span><span class=\"pun\">(</span><span class=\"str\">\"volumeupbutton\"</span><span class=\"pun\">,</span><span class=\"pln\"> callbackFunction</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">);</span><span class=\"pln\">  \n</span><span class=\"kwd\">function</span><span class=\"pln\"> callbackFunction</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n   alert</span><span class=\"pun\">(</span><span class=\"str\">'Volume Up Button is pressed!'</span><span class=\"pun\">);</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>Once we press the <b>volume up</b> button, the screen will display the following alert.</p>\n<img src=\"/cordova/images/event-volume-up.jpg\" alt=\"Event Volume Up\">\n<h2>Handling Back Button</h2>\n<p>We should use the Android back button for app functionalities like returning to the previous screen. To implement your own functionality, we should first disable the back button that is used to exit the App.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">document</span><span class=\"pun\">.</span><span class=\"pln\">addEventListener</span><span class=\"pun\">(</span><span class=\"str\">\"backbutton\"</span><span class=\"pun\">,</span><span class=\"pln\"> onBackKeyDown</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">);</span><span class=\"pln\">  \n</span><span class=\"kwd\">function</span><span class=\"pln\"> onBackKeyDown</span><span class=\"pun\">(</span><span class=\"pln\">e</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n   e</span><span class=\"pun\">.</span><span class=\"pln\">preventDefault</span><span class=\"pun\">();</span><span class=\"pln\"> \n   alert</span><span class=\"pun\">(</span><span class=\"str\">'Back Button is Pressed!'</span><span class=\"pun\">);</span><span class=\"pln\"> \n</span><span class=\"pun\">}</span><span class=\"pln\"> </span></pre>\n<p>Now when we press the native Android back button, the alert will appear on the screen instead of exiting the app. This is done by using the <b>e.preventDefault()</b> command.</p>\n"
          ]
        },
        {
          "tag_line": "Cordova - Best Practices (Auf Englisch)",
          "details": [
            "<p>Cordova is used for creating hybrid mobile apps, so you need to consider this before you choose it for your project. Below are the best practices for Cordova apps development.</p>\n<h2>Single Page Apps</h2>\n<p>This is the recommended design for all Cordova apps. SPA is using client-side router and navigation loaded on the single page (usually <b>index.html</b>). The routing is handled via AJAX. If you have followed our tutorials, you probably noticed that almost every Cordova plugin needs to wait until the device is ready before it can be used. SPA design will improve loading speed and overall performance.</p>\n<h2>Touch Events</h2>\n<p>Since Cordova is used for mobile world it is natural to use <b>touchstart</b> and <b>touchend</b> events instead of <b>click</b> events. The click events have 300ms delay, so the clicks don’t feel native. On the other hand, touch events aren't supported on every platform. You should take this into consideration before you decide what to use.</p>\n<h2>Animations</h2>\n<p>You should always use hardware accelerated <b>CSS Transitions</b> instead of JavaScript animations since they will perform better on mobile devices.</p>\n<h2>Storage</h2>\n<p>Use storage caching as much as possible. Mobile network connections are usually bad, so you should minimize network calls inside your app. You should also handle offline status of the app, since there will be times when user's devices are offline.</p>\n<h2>Scrolling</h2>\n<p>Most of the time the first slow part inside your app will be scrolling lists. There are couple of ways to improve scrolling performance of the app. Our recommendation is to use native scrolling. When there are lots of items in the list, you should load them partially. Use loaders when necessary.</p>\n<h2>Images</h2>\n<p>Images can also slow the mobile app. You should use CSS image sprites whenever possible. Try to fit the images perfectly instead of scaling it.</p>\n<h2>CSS styles</h2>\n<p>You should avoid shadows and gradients, since they slow the rendering time of the page.</p>\n<h2>Simplification</h2>\n<p>Browser's DOM is slow, so you should try to minimize DOM manipulation and number of DOM elements.</p>\n<h2>Testing</h2>\n<p>Ensure that you test your app on as many devices and operating system versions as possible. If app works flawlessly on one device, it doesn't necessary mean that it will work on some other device or platform.</p>"
          ]
        }
      ]
    },
    {
      "title": "jQuery Mobile",
      "content": [
        {
          "tag_line": "jQuery Mobile - Pages (Auf Englisch)",
          "details": [
            "\n<header id=\"header\">\n<!-- Top sub-menu Starts Here -->\n<div class=\"mui-appbar mui-container-fulid top-menu\">\n<div class=\"mui-container\">\n<div class=\"top-menu-item home\">\n<a href=\"https://www.tutorialspoint.com/index.htm\" target=\"_blank\" title=\"TutorialsPoint - Home\"><i class=\"fal fa-home\"></i> <span>Home</span></a>\n</div>\n<div class=\"top-menu-item qa\">\n<a href=\"https://www.tutorialspoint.com/about/about_careers.htm\" target=\"_blank\" title=\"Job @ Tutorials Point\"><i class=\"fa fa-suitcase\"></i> <span>Jobs</span></a>\n</div>\n<div class=\"top-menu-item tools\">\n<a href=\"https://www.tutorialspoint.com/online_dev_tools.htm\" target=\"_blank\" title=\"Tools - Online Development and Testing Tools\"><i class=\"fal fa-cogs\"></i> <span>Tools</span></a>\n</div>\n<div class=\"top-menu-item coding-ground\">\n<a href=\"https://www.tutorialspoint.com/codingground.htm\" target=\"_blank\" title=\"Coding Ground - Free Online IDE and Terminal\"><i class=\"fal fa-code\"></i> <span>Coding Ground </span></a> \n</div>\n<div class=\"top-menu-item current-affairs\">\n<a href=\"https://www.tutorialspoint.com/current_affairs.htm\" target=\"_blank\" title=\"Daily Current Affairs\"><i class=\"fal fa-layer-plus\"></i> <span>Current Affairs</span></a>\n</div>\n<div class=\"top-menu-item upsc-notes\">\n<a href=\"https://www.tutorialspoint.com/upsc_ias_exams.htm\" target=\"_blank\" title=\"UPSC IAS Exams Notes - TutorialsPoint\"><i class=\"fal fa-user-tie\"></i> <span>UPSC Notes</span></a>\n</div>      \n<div class=\"top-menu-item online-tutoris\">\n<a href=\"https://www.tutorialspoint.com/tutor_connect/index.php\" target=\"_blank\" title=\"Top Online Tutors - Tutor Connect\"><i class=\"fal fa-user\"></i> <span>Online Tutors</span></a>\n</div>\n<div class=\"top-menu-item whiteboard\">\n<a href=\"https://www.tutorialspoint.com/whiteboard.htm\" target=\"_blank\" title=\"Free Online Whiteboard\"><i class=\"fal fa-chalkboard\"></i> <span>Whiteboard</span></a>\n</div>\n<div class=\"top-menu-item net-meeting\">\n<a href=\"https://www.tutorialspoint.com/netmeeting.php\" target=\"_blank\" title=\"A free tool for online video conferencing\"><i class=\"fal fa-chalkboard-teacher\"></i> <span>Net Meeting</span></a> \n</div>\n<div class=\"top-menu-item articles\">\n<a href=\"https://www.tutorix.com\" target=\"_blank\" title=\"Tutorx - The Best Learning App\" rel=\"nofollow\"><i class=\"fal fa-video\"></i> <span>Tutorix</span></a> \n</div>        \n<div class=\"social-menu-item\">\n<a href=\"https://www.facebook.com/tutorialspointindia\" target=\"_blank\" rel=\"nofollow\" data-placement=\"bottom\" title=\"tutorialspoint @ Facebook\"><i class=\"fab fa-facebook-f\"></i></a> \n<a href=\"https://www.twitter.com/tutorialspoint\" target=\"_blank\" rel=\"nofollow\" data-placement=\"bottom\" title=\"tutorialspoint @ Twitter\"><i class=\"fab fa-twitter\"></i></a>\n<a href=\"https://www.linkedin.com/company/tutorialspoint\" target=\"_blank\" rel=\"nofollow\" data-placement=\"bottom\" title=\"tutorialspoint @ Linkedin\"><i class=\"fab fa-linkedin-in\"></i></a>\n<a href=\"https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg\" target=\"_blank\" rel=\"nofollow\" data-placement=\"bottom\" title=\"tutorialspoint YouTube\"><i class=\"fab fa-youtube\"></i></a>\n</div>        \n</div>\n</div>\n<!-- Top sub-menu Ends Here -->\n<!-- Top main-menu Starts Here -->\n<div class=\"mui-appbar mui-container-fulid mui--appbar-line-height mui--z1\" id=\"logo-menu\">\n<div class=\"mui-container\">\n<div class=\"left-menu\">\n<a href=\"https://www.tutorialspoint.com/index.htm\" title=\"Tutorialspoint\">\n<img class=\"tp-logo\" alt=\"tutorialspoint\" src=\"/jquery_mobile/images/logo.png\">\n</a>\n<div class=\"mui-dropdown\">\n<a class=\"mui-btn mui-btn--primary categories\" data-mui-toggle=\"dropdown\"><i class=\"fa fa-th-large\"></i> \n<span>Categories <span class=\"mui-caret\"></span></span></a>            \n<ul class=\"mui-dropdown__menu cat-menu\">\n<li>\n<ul>\n<li><a href=\"/academic_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Academic Tutorials</a></li>\n<li><a href=\"/big_data_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Big Data &amp; Analytics </a></li>\n<li><a href=\"/computer_programming_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Computer Programming </a></li>\n<li><a href=\"/computer_science_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Computer Science </a></li>\n<li><a href=\"/database_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Databases </a></li>\n<li><a href=\"/devops_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> DevOps </a></li>\n<li><a href=\"/digital_marketing_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Digital Marketing </a></li>\n<li><a href=\"/engineering_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Engineering Tutorials </a></li>\n<li><a href=\"/upsc_ias_exams.htm\"><i class=\"fa fa-caret-right\"></i> Exams Syllabus </a></li>\n<li><a href=\"/famous_monuments.htm\"><i class=\"fa fa-caret-right\"></i> Famous Monuments </a></li>\n<li><a href=\"/gate_exams_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> GATE Exams Tutorials</a></li>\n<li><a href=\"/latest_technologies.htm\"><i class=\"fa fa-caret-right\"></i> Latest Technologies </a></li>\n<li><a href=\"/machine_learning_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Machine Learning </a></li>\n<li><a href=\"/mainframe_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Mainframe Development </a></li>\n<li><a href=\"/management_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Management Tutorials </a></li>\n<li><a href=\"/maths_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Mathematics Tutorials</a></li>\n<li><a href=\"/microsoft_technologies_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Microsoft Technologies </a></li>\n<li><a href=\"/misc_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Misc tutorials </a></li>\n<li><a href=\"/mobile_development_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Mobile Development </a></li>\n<li><a href=\"/java_technology_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Java Technologies </a></li>\n<li><a href=\"/python_technologies_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Python Technologies </a></li>\n<li><a href=\"/sap_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> SAP Tutorials </a></li>\n<li><a href=\"/scripting_lnaguage_tutorials.htm\"><i class=\"fa fa-caret-right\"></i>Programming Scripts </a></li>\n<li><a href=\"/selected_reading.htm\"><i class=\"fa fa-caret-right\"></i> Selected Reading </a></li>\n<li><a href=\"/software_quality_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Software Quality </a></li>\n<li><a href=\"/soft_skill_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Soft Skills </a></li>\n<li><a href=\"/telecom_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Telecom Tutorials </a></li>\n<li><a href=\"/upsc_ias_exams.htm\"><i class=\"fa fa-caret-right\"></i> UPSC IAS Exams </a></li>\n<li><a href=\"/web_development_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Web Development </a></li>\n<li><a href=\"/sports_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Sports Tutorials </a></li>\n<li><a href=\"/xml_technologies_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> XML Technologies </a></li>\n<li><a href=\"/multi_language_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Multi-Language</a></li>\n<li><a href=\"/questions_and_answers.htm\"><i class=\"fa fa-caret-right\"></i> Interview Questions</a></li>\n</ul>\n</li>\n</ul>\n<div class=\"clear\"></div>\n</div> \n</div>\n<div class=\"right-menu\">\n<div class=\"toc-toggle\">\n<a href=\"javascript:void(0);\"><i class=\"fa fa-bars\"></i></a>\n</div>\n<div class=\"mobile-search-btn\">\n<a href=\"https://www.tutorialspoint.com/search.htm\"><i class=\"fal fa-search\"></i></a>\n</div>\n<div class=\"search-box\">\n<form method=\"get\" class=\"\" name=\"searchform\" action=\"https://www.google.com/search\" target=\"_blank\" novalidate=\"\">\n<input type=\"hidden\" name=\"sitesearch\" value=\"www.tutorialspoint.com\" class=\"user-valid valid\">\n<input class=\"header-search-box\" type=\"text\" id=\"search-string\" name=\"q\" placeholder=\"Search your favorite tutorials...\" onfocus=\"if (this.value == 'Search your favorite tutorials...') {this.value = '';}\" onblur=\"if (this.value == '') {this.value = 'Search your favorite tutorials...';}\" autocomplete=\"off\">\n<button><i class=\"fal fa-search\"></i></button>\n</form>\n</div>\n<div class=\"menu-btn library-btn\">\n<a href=\"https://www.tutorialspoint.com/tutorialslibrary.htm\"><i class=\"fal fa-cubes\"></i> <span>Library</span></a>\n</div>\n<div class=\"menu-btn videos-btn\">\n<a href=\"https://www.tutorialspoint.com/videotutorials/index.php\"><i class=\"fal fa-video\"></i> <span>Videos</span></a> \n</div>\n<div class=\"menu-btn videos-btn\">\n<a href=\"https://www.tutorialspoint.com/questions/index.php\"><i class=\"fa fa-location-arrow\"></i> <span>Q/A</span></a>\n</div>\n<div class=\"menu-btn ebooks-btn\">\n<a href=\"https://store.tutorialspoint.com\"><i class=\"fal fa-book\"></i> <span>eBooks</span></a>\n</div>\n<div class=\"mui-dropdown\">\n<button class=\"mui-btn mui-btn--primary\" data-mui-toggle=\"dropdown\" type=\"button\">\n<span class=\"mui-caret\"></span>\n</button>\n<ul class=\"mui-dropdown__menu\">\n<li><a href=\"https://www.tutorialspoint.com/tutorialslibrary.htm\"><i class=\"fal fa-cubes\"></i> <span>Library</span></a></li>\n<li><a href=\"https://www.tutorialspoint.com/videotutorials/index.php\"><i class=\"fal fa-video\"></i> <span>Videos</span></a></li>\n<li><a href=\"https://store.tutorialspoint.com\"><i class=\"fal fa-book\"></i> <span>eBooks</span></a></li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<!-- Top main-menu Ends Here -->\n</header>\n<div class=\"mui-container-fluid content\">\n<div class=\"mui-container\">\n<!-- Tutorial ToC Starts Here -->\n<div class=\"mui-col-md-3 tutorial-toc\">\n<div class=\"mini-logo\">\n<img src=\"/jquery_mobile/images/jquery-mobile-mini-logo.jpg\" alt=\"jQuery Mobile Tutorial\">\n</div>\n<ul class=\"toc chapters\">\n<li class=\"heading\">jQuery Mobile Tutorial</li>\n<li><a href=\"/jquery_mobile/index.htm\">jQuery Mobile - Home</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_overview.htm\">jQuery Mobile - Overview</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_setup.htm\">jQuery Mobile - Setup</a></li>\n<li style=\"background-color: rgb(214, 214, 214);\"><a href=\"/jquery_mobile/jquery_mobile_pages.htm\">jQuery Mobile - Pages</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_icons.htm\">jQuery Mobile - Icons</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_transitions.htm\">jQuery Mobile - Transitions</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_layouts.htm\">jQuery Mobile - Layouts</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_widgets.htm\">jQuery Mobile - Widgets</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_events.htm\">jQuery Mobile - Events</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_forms.htm\">jQuery Mobile - Forms</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_themes.htm\">jQuery Mobile - Themes</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_css_classes.htm\">jQuery Mobile - CSS Classes</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_data_attributes.htm\">jQuery Mobile - Data Attributes</a></li>\n</ul>\n<ul class=\"toc chapters\">\n<li class=\"heading\">jQuery Mobile Useful Resources</li>\n<li><a href=\"/jquery_mobile/jquery_mobile_interview_questions.htm\">jQuery Mobile - Interview Questions</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_quick_guide.htm\">jQuery Mobile - Quick Guide</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_useful_resources.htm\">jQuery Mobile - Useful Resources</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_discussion.htm\">jQuery Mobile - Discussion</a></li>\n</ul>\n<ul class=\"toc reading\">\n<li class=\"sreading\">Selected Reading</li>\n<li><a target=\"_top\" href=\"/upsc_ias_exams.htm\">UPSC IAS Exams Notes</a></li>\n<li><a target=\"_top\" href=\"/developers_best_practices/index.htm\">Developer's Best Practices</a></li>\n<li><a target=\"_top\" href=\"/questions_and_answers.htm\">Questions and Answers</a></li>\n<li><a target=\"_top\" href=\"/effective_resume_writing.htm\">Effective Resume Writing</a></li>\n<li><a target=\"_top\" href=\"/hr_interview_questions/index.htm\">HR Interview Questions</a></li>\n<li><a target=\"_top\" href=\"/computer_glossary.htm\">Computer Glossary</a></li>\n<li><a target=\"_top\" href=\"/computer_whoiswho.htm\">Who is Who</a></li>\n</ul>\n</div>\n<!-- Tutorial ToC Ends Here -->\n<!-- Tutorial Content Starts Here -->\n<div class=\"mui-col-md-6 tutorial-content\">\n<h1>jQuery Mobile - Pages</h1>\n<hr>\n<div class=\"top-ad-heading\">Advertisements</div>\n<div style=\"text-align:center;\" class=\"google-top-ads\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\nvar width = document.getElementsByClassName(\"tutorial-content\")[0].clientWidth - 40;\ngoogle_ad_width = width;\ngoogle_ad_height = 150;\ngoogle_ad_format = width + \"x150_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"mui-container-fluid button-borders\">\n<div class=\"pre-btn\">\n<a href=\"/jquery_mobile/jquery_mobile_setup.htm\"><i class=\"fal fa-chevron-circle-left\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/jquery_mobile/jquery_mobile_icons.htm\">Next Page <i class=\"fal fa-chevron-circle-right\"></i>&nbsp;</a>\n</div>\n</div>\n<div class=\"clearer\"></div>\n<p>The user can interact with jQuery Mobile pages, which groups the content into logical views and page views. Page view can be animated using page transitions. Multiple pages can be created using HTML document and therefore, there is no need of requesting the content from the server.</p>\n<p>Following table demonstrates the types of pages in detail.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Type &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><a href=\"/jquery_mobile/single_page.htm\">Single Page</a>\n<p>A single page is created in HTML document using a standard way of writing a template.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><a href=\"/jquery_mobile/multi_page.htm\">Multi-Page Template</a>\n<p>Multiple pages can be included in the single HTML document, which loads together by adding multiple divs with <i>data-role = \"page\"</i>.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><a href=\"/jquery_mobile/dialogs_page.htm\">Dialogs Page</a>\n<p>Modal dialogs open content in an interactive overlay above the page.</p>\n</td>\n</tr>\n</tbody></table>\n<h2>Conventions, not requirements</h2>\n<ul class=\"list\">\n<li><p>The data-role attribute elements such as the header, footer, page, and content are used to provide the basic format and structure of a page.</p></li>\n<li><p>For single page documents, the page wrapper was required for auto-initialization is set as optional.</p></li>\n<li><p>The structural element can be excluded for a webpage with custom layout.</p></li>\n<li><p>To manage pages, the page wrapper is injected by the framework when it is not included by the markup.</p></li>\n</ul>\n<h2>Prefetching pages</h2>\n<p>Including the attribute <i>data-prefetch</i>, we can prefetch pages into the DOM in the single page templates. For more information <a href=\"/jquery_mobile/jquery_mobile_prefetching.htm\">click here</a>.</p>\n<h2>DOM Cache</h2>\n<p>When the browser memory gets full in DOM, then it slow downs the mobile browser or might crash due to loading of multiple pages. There is a simple method to keep the DOM tidy −</p>\n<ul class=\"list\">\n<li><p>When a page is loaded via ajax, then it indicates to remove the page from DOM when you redirect to another page.</p></li>\n<li><p>The previous page which you have visited can be retrived from the cache when you revisit it.</p></li>\n<li><p>Instead of removing the pages, you can tell jQuery mobile to keep it in DOM by using the following line −</p></li>\n</ul>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">$</span><span class=\"pun\">.</span><span class=\"pln\">mobile</span><span class=\"pun\">.</span><span class=\"pln\">page</span><span class=\"pun\">.</span><span class=\"pln\">prototype</span><span class=\"pun\">.</span><span class=\"pln\">options</span><span class=\"pun\">.</span><span class=\"pln\">domCache </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">;</span></pre>\n<ul class=\"list\">\n<li><p>Set the domCache option as true on the page plugin to keep all the pages in the DOM, which was visited previously.</p></li>\n</ul>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">pageContainerElement</span><span class=\"pun\">.</span><span class=\"pln\">page</span><span class=\"pun\">({</span><span class=\"pln\"> domCache</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pln\"> </span><span class=\"pun\">});</span></pre>\n<div class=\"mui-container-fluid button-borders show\">\n<div class=\"pre-btn\">\n<a href=\"/jquery_mobile/jquery_mobile_setup.htm\"><i class=\"fal fa-chevron-circle-left\"></i> Previous Page</a>\n<a class=\"hide-on-mobile\" href=\"javascript:printPage();\"><i class=\"fa fa-print\"></i> Print Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/jquery_mobile/jquery_mobile_icons.htm\">Next Page <i class=\"fal fa-chevron-circle-right\"></i>&nbsp;</a>\n</div>\n</div>\n<div class=\"google-bottom-ads\">\n<div>Advertisements</div>\n<div>\n   <div id=\"vi_bottom_ads\"><div class=\"adsbyvli\" data-ad-slot=\"vi_9013190\"></div></div>\n   <script>\n     (function() {\n     var adPos = document.getElementById('vi_bottom_ads');\n     var mobile_ad_id = \"vi_9012177\";\n     var desktop_ad_id = \"vi_9013190\";\n     var ad_id = window.innerWidth <= 768 ? mobile_ad_id : desktop_ad_id;\n     adPos.innerHTML = '<div class=\"adsbyvli\" data-ad-slot=\"' + ad_id + '\"></div>';\n     (vitag.displayInit = window.vitag.displayInit || []).push(function () {\n         viAPItag.display(ad_id);\n     });\n     }())\n   </script>\n</div>\n<div class=\"space-bottom\"></div>\n</div>\n</div>\n<!-- Tutorial Content Ends Here -->\n<!-- Right Column Starts Here -->\n<div class=\"mui-col-md-2 google-right-ads\">\n<div class=\"space-top\"></div>\n<div class=\"google-right-ad\" style=\"margin: 0px auto !important;margin-top:5px;\">\n<div class=\"adsbyvli\" data-ad-slot=\"vi_9012177\"></div>\n<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display(\"vi_9012177\")})</script>\n</div>\n<div class=\"google-right-ad\" style=\"margin-top:5px;\">\n<div class=\"adsbyvli\" data-ad-slot=\"vi_9012177\"></div>\n<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display(\"vi_9012177\")})</script>\n</div>\n<div class=\"google-right-ad\" style=\"margin-top:5px;\">\n<div class=\"adsbyvli\" data-ad-slot=\"vi_9013289\"></div>\n<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display(\"vi_9013289\")})</script>\n</div>\n<div class=\"space-bottom\" style=\"margin-bottom:15px;\"></div>\n</div>\n<!-- Right Column Ends Here -->\n</div>\n</div>\n<div class=\"clear\"></div>\n<footer id=\"footer\">\n<div class=\"mui--text-center\">\n<div class=\"mui--text-caption mui--text-light\">\n<a href=\"/index.htm\" class=\"logo\"><img class=\"img-responsive\" src=\"/images/logo-black.png\" alt=\"Tutorials Point\" title=\"Tutorials Point\"></a>\n</div>\n<ul class=\"mui-list--inline mui--text-body2 mui--text-light\">\n<li><a href=\"/about/index.htm\"><i class=\"fal fa-globe\"></i> About us</a></li>\n<li><a href=\"/about/about_terms_of_use.htm\"><i class=\"fal fa-asterisk\"></i> Terms of use</a></li>\n<li><a href=\"/about/about_privacy.htm#cookies\"> <i class=\"fal fa-shield-check\"></i> Cookies Policy</a></li>\n<li><a href=\"/about/faq.htm\"><i class=\"fal fa-question-circle\"></i> FAQ's</a></li>\n<li><a href=\"/about/about_helping.htm\"><i class=\"fal fa-hands-helping\"></i> Helping</a></li>\n<li><a href=\"/about/contact_us.htm\"><i class=\"fal fa-map-marker-alt\"></i> Contact</a></li>\n</ul>\n<div class=\"mui--text-caption mui--text-light bottom-copyright-text\">© Copyright 2019. All Rights Reserved.</div>\n</div>\n<script async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=UA-232293-17\"></script>\n<script>\nwindow.dataLayer = window.dataLayer || [];\nfunction gtag(){dataLayer.push(arguments);}\ngtag('js', new Date());\ngtag('config', 'UA-232293-6');\n</script>\n</footer>\n\n\n"
          ]
        },
        {
          "tag_line": "jQuery Mobile - Icons (Auf Englisch)",
          "details": [
            "<p>jQuery Mobile provides a set of built-in icons, which can be used with buttons, listview buttons which will make the buttons more attractive.</p>\n<p>Following table lists down some of the icons used in the jQuery Mobile framework.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Icon Area &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><a href=\"/jquery_mobile/icons_icon_set.htm\">Icon Set</a>\n<p>It sets the icon in the button.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><a href=\"/jquery_mobile/icons_positioning.htm\">Positioning Icons</a>\n<p>It specifies the position of the icon in the button.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><a href=\"/jquery_mobile/icons_only_icon.htm\">Icon-only</a>\n<p>It displays only an icon in the button.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><a href=\"/jquery_mobile/icons_shadow_icon.htm\">Icon shadow</a>\n<p>It adds an icon shadow in your button.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><a href=\"/jquery_mobile/icons_removing_circle.htm\">Removing Circle</a>\n<p>It removes the grey circle around the icon.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><a href=\"/jquery_mobile/icons_black_white_icon.htm\">Black or White Icons</a>\n<p>It changes the color of icons to black or white.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><a href=\"/jquery_mobile/icons_combng_alt_nodisc.htm\">Combining alt and nodisc</a>\n<p>It combines the <i>alt</i> and <i>nodisc</i> classes to the icon.</p></td></tr></tbody></table>"
          ]
        },
        {
          "tag_line": "jQuery Mobile - Transitions (Auf Englisch)",
          "details": [
            "<p>It allows to change property values which occurs over specified duration and alters behavior of an element from one state to another state by applying different styles for each state.</p>\n<p>Following table lists down some of the page transitions used in the jQuery Mobile framework −</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th class=\"ts\">Sr.No.</th>\n<th style=\"text-align:center;\">Transition &amp; Description</th>\n<th class=\"ts\" style=\"width:27.5%\">For Pages</th>\n<th class=\"ts\" style=\"width:30%;\">For Dialogs</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>fade</b></p>\n<p>You can make elements fade in and out of visibility.</p></td>\n<td class=\"ts\"><a href=\"/jquery_mobile/page_fade.htm\">Fade Page</a></td>\n<td class=\"ts\"><a href=\"/jquery_mobile/dialog_fade.htm\">Fade Dialog</a></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>flip</b></p>\n<p>Flip the elements from back to front to the next page.</p></td>\n<td class=\"ts\"><a href=\"/jquery_mobile/page_flip.htm\">Flip Page</a></td>\n<td class=\"ts\"><a href=\"/jquery_mobile/dialog_flip.htm\">Flip Dialog</a></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>pop</b></p>\n<p>You can create a popup window.</p></td>\n<td class=\"ts\"><a href=\"/jquery_mobile/page_popup.htm\">Pop Page</a></td>\n<td class=\"ts\"><a href=\"/jquery_mobile/dialog_popup.htm\">Pop Dialog</a></td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>flow</b></p>\n<p>Display the next page by keeping current page away.</p></td>\n<td class=\"ts\"><a href=\"/jquery_mobile/page_flow.htm\">Flow Page</a></td>\n<td class=\"ts\"><a href=\"/jquery_mobile/dialog_flow.htm\">Flow Dialog</a></td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>slide</b></p>\n<p>You can slide the page from right to left.</p></td>\n<td class=\"ts\"><a href=\"/jquery_mobile/page_slide.htm\">Slide Page</a></td>\n<td class=\"ts\"><a href=\"/jquery_mobile/dialog_slide.htm\">Slide Dialog</a></td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>slidefade</b></p>\n<p>Slides the page from right to left and fades in the next page.</p></td>\n<td class=\"ts\"><a href=\"/jquery_mobile/page_slidefade.htm\">Slidefade Page</a></td>\n<td class=\"ts\"><a href=\"/jquery_mobile/dialog_slidefade.htm\">Slidefade Dialog</a></td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><p><b>slideup</b></p>\n<p>Slides the page from bottom to up.</p></td>\n<td class=\"ts\"><a href=\"/jquery_mobile/page_slideup.htm\">Slideup Page</a></td>\n<td class=\"ts\"><a href=\"/jquery_mobile/dialog_slideup.htm\">Slideup Dialog</a></td>\n</tr>\n<tr>\n<td class=\"ts\">8</td>\n<td><p><b>slidedown</b></p>\n<p>Slides the page from top to bottom.</p></td>\n<td class=\"ts\"><a href=\"/jquery_mobile/page_slidedown.htm\">Slidedown Page</a></td>\n<td class=\"ts\"><a href=\"/jquery_mobile/dialog_slidedown.htm\">Slidedown Dialog</a></td>\n</tr>\n<tr>\n<td class=\"ts\">9</td>\n<td><p><b>turn</b></p>\n<p>You can turn to the next page.</p></td>\n<td class=\"ts\"><a href=\"/jquery_mobile/page_turn.htm\">Turn Page</a></td>\n<td class=\"ts\"><a href=\"/jquery_mobile/dialog_turn.htm\">Turn Dialog</a></td>\n</tr>\n<tr>\n<td class=\"ts\">10</td>\n<td><p><b>none</b></p>\n<p>You cannot use any transition effect by using this attribute.</p></td>\n<td class=\"ts\"><a href=\"/jquery_mobile/page_none.htm\">None Page</a></td>\n<td class=\"ts\"><a href=\"/jquery_mobile/dialog_none.htm\">None Dialog</a></td>\n</tr>\n</tbody></table>\n<h2>Setting Transition and Global Configuration</h2>\n<p>By default, pages will have <b><i>fade</i></b> transition in the framework. You can use custom transitions by adding the <b><i>data-transition</i></b> attribute to the link. You can use different default transition effects for the page using <b><i>defaultPageTransition</i></b> option globally. For dialogs, you can make use of <b><i>defaultDialogTransition</i></b> option.</p>\n<h2>Fallback Transition</h2>\n<p>All transitions support 3D transformations except the fade transition. The devices which do not support 3D transformation, they will have to make use of fade transition. Some browsers do not support 3D transformations for each transition type, so you can use the <b><i>fade</i></b> as default transition fallback.</p>\n<h2>Max Scroll for Transitions</h2>\n<p>The transitions are set to none when you are scrolling from or to a page and the scroll position will be three times the height of the device screen. Sometimes, you may get slow in responding or the browser may crash when you click any navigation element; so to avoid this we are using the scroll position for transition by using <b><i>getMaxScrollForTransition</i></b> function.</p>\n<h2>Max Width for Transitions</h2>\n<p>You can disable the transition when the window width is higher than the pixel width. You can configure the max width for transitions using the <b><i>$.mobile.maxTransitionWidth</i></b> global option, which is set to false by default. It takes values such as pixel width or false value, and the transition will be set to none if it is not a false value when the window is higher than the specified value.</p>\n<h2>Same Page Transition</h2>\n<p>You can add the transitions to the current page using the <b><i>allowSamePageTransition</i></b> option of page container widget's <b><i>change()</i></b> method.</p>\n<h2>Creating Custom Transitions</h2>\n<p>You can create the custom transitions in the page using the <b><i>$.mobile.transitionHandlers</i></b> option that expands the selection of transitions on the website or application.</p>"
          ]
        },
        {
          "tag_line": "jQuery Mobile - Layouts (Auf Englisch)",
          "details": [
            "<p>Grid systems are used to create page layouts through a series of rows and columns that house your content.</p>\n<p>Below table demonstrates the types of grids in detail.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Type &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><a href=\"/jquery_mobile/grid.htm\">Grid</a>\n<p>jQuery mobile grid system creates page layouts through a series of rows and columns.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><a href=\"/jquery_mobile/buttons_in_grids.htm\">Buttons in grids</a>\n<p>Collection of button in grid format in jQuery mobile.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><a href=\"/jquery_mobile/custom_responsive_grid.htm\">Custom responsive grid</a>\n<p>The basic grid style can be easily extended to the custom responsive layout using media queries in CSS.</p></td></tr></tbody></table>"
          ]
        },
        {
          "tag_line": "jQuery Mobile - Widgets (Auf Englisch)",
          "details": [
            "<p>A widget is a small gadget or control of your jQuery mobile application. Widgets can be very handy as they allow you to put your favorite applications on your home screen in order to quickly access them.</p>\n<p>Following table demonstrates the types of Widgets in detail.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Type &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><a href=\"/jquery_mobile/jqm_buttons.htm\">Buttons</a>\n<p>It specifies clickable button that includes content like text or images.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><a href=\"/jquery_mobile/widget_checkbox.htm\">Checkbox</a>\n<p>Checkboxes are used when more than one option is required to be selected.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><a href=\"/jquery_mobile/widget_radio.htm\">Radiobox</a>\n<p>Radio buttons are used when out of many options, just one option is required to be selected.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><a href=\"/jquery_mobile/widget_datapicker.htm\">Datepicker</a>\n<p>It is focused on the input to open an interactive calendar in a small overlay.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><a href=\"/jquery_mobile/collapsible_widget.htm\">Collapsible</a>\n<p>Collapsible allows you to expand or collapse the content whenever clicked on it. It is very helpful for mobile device, which presents a brief content.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><a href=\"/jquery_mobile/jqm_controlgroup_widget.htm\">Controlgroup</a>\n<p>Controlgroups provide a set of buttons to specify a single block that looks like a navigation component.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><a href=\"/jquery_mobile/filterable_widget.htm\">Filterable</a>\n<p>By using the <i>data-filter = \"true\"</i> attribute, you can filter the children of any element.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">8</td>\n<td><a href=\"/jquery_mobile/widget_flipswitch.htm\">Flipswitch</a>\n<p>Flip Switch allows you to turn off/on or true/false the switch by clicking on it for boolean style input.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">9</td>\n<td><a href=\"/jquery_mobile/widget_listview.htm\">Listview</a>\n<p>The purpose of listview component is to render complex and customized content in lists.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">10</td>\n<td><a href=\"/jquery_mobile/jqm_loader_widget.htm\">Loader</a>\n<p>The jQuery Mobile provides different ways of loading states to an element.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">11</td>\n<td><a href=\"/jquery_mobile/navbar_widget.htm\">Navbar</a>\n<p>The navbar widget is a set of buttons which links you to other web pages or sections.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">12</td>\n<td><a href=\"/jquery_mobile/jqm_panels_widget.htm\">Panels</a>\n<p>Panels are used to display the DOM components in the box.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">13</td>\n<td><a href=\"/jquery_mobile/jqm_popups_widget.htm\">Popups</a>\n<p>Popup is a user interface that appears within a small window to display text, images, and other content.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">14</td>\n<td><a href=\"/jquery_mobile/range_slider_widget.htm\">Rangeslider</a>\n<p>Rangeslider widget provides you with a pair of handles allowing you to select a numeric value range.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">15</td>\n<td><a href=\"/jquery_mobile/widget_selectmenu.htm\">Selectmenu</a>\n<p>A select menu provides various options in the form of dropdown list, from where a user can select one or more options.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">16</td>\n<td><a href=\"/jquery_mobile/slider_widget.htm\">Slider</a>\n<p>Slider allows you to choose a value by sliding the handle of the slider.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">17</td>\n<td><a href=\"/jquery_mobile/jqm_table_widget.htm\">Table</a>\n<p>jQuery Mobile uses the table to represent the data in terms of rows and columns, i.e. displays the data in a tabular format.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">18</td>\n<td><a href=\"/jquery_mobile/tabs_widget.htm\">Tabs</a>\n<p>The tabs widget is jQuery ui tabs widget's extension, which accepts all the methods and options.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">19</td>\n<td><a href=\"/jquery_mobile/widget_textinput.htm\">Textinput</a>\n<p>The &lt;input&gt; tag is used to declare an input element, a control that allows the user to input data.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">20</td>\n<td><a href=\"/jquery_mobile/toolbar_widget.htm\">Toolbar</a>\n<p>The jQuery mobile toolbar widget allows you to create headers and footers.</p></td></tr></tbody></table>"
          ]
        },
        {
          "tag_line": "jQuery Mobile - Events (Auf Englisch)",
          "details": [
            "<p>jQuery Mobile allows to create dynamic web pages. By using events, you can set up event-driven process on the elements, which are triggered by the user's interaction such as mouse click, mouse hover on an element, key press on the keyboard, etc.</p>\n<p>Following table lists some of the events for the mobile devices, which are supported by jQuery Mobile.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Event &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><a href=\"/jquery_mobile/jqm_mobile_events.htm\">jQuery Mobile Events</a>\n<p>It responds to user interaction when the user clicks on a certain page or hovers the mouse over an element, etc.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><a href=\"/jquery_mobile/jqm_touch_events.htm\">jQuery Touch Events</a>\n<p>It provides touch events when the user touches the screen.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><a href=\"/jquery_mobile/jqm_scroll_events.htm\">jQuery Scroll Events</a>\n<p>It fires the scroll events when the user scrolls up and down.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><a href=\"/jquery_mobile/jqm_orientation_event.htm\">jQuery Orientation Event</a>\n<p>It triggers the orientation event when the user rotates the device vertically or horizontally.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><a href=\"/jquery_mobile/jqm_page_events.htm\">jQuery Page Events</a>\n<p>It provides the page events when the user hides, creates, loads, or unloads the pages.</p></td></tr></tbody></table>"
          ]
        },
        {
          "tag_line": "jQuery Mobile - Forms (Auf Englisch)",
          "details": [
            "<p>Creation of forms is easy and very flexible, which are built with a combination of standardized form elements and buttons.</p>\n<p>Following table demonstrates the types of form in detail.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Type &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><a href=\"/jquery_mobile/form_basic.htm\">Form Basic</a>\n<p>jQuery Mobile provides powerful, easy, and versatile layout system for Forms, which combines form styles, input button, and slider support.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><a href=\"/jquery_mobile/form_inputs.htm\">Form Inputs</a>\n<p>The &lt;input&gt; tag is a control that allows the user to input data.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><a href=\"/jquery_mobile/form_select.htm\">Form Select</a>\n<p>In form of option, a dropdown list is provided for select menu.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><a href=\"/jquery_mobile/form_slider.htm\">Form Sliders</a>\n<p>Slider allows you to choose a value by sliding the handle of the slider.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><a href=\"/jquery_mobile/form_refresh_auto_initialization_form.htm\">Refreshing and auto initialization of form elements</a>\n<p>Refresh method is used to update the new state of form control by itself and updates the form control with JavaScript.</p></td></tr></tbody></table>"
          ]
        },
        {
          "tag_line": "jQuery Mobile - Themes (Auf Englisch)",
          "details": [
            "\n<header id=\"header\">\n<!-- Top sub-menu Starts Here -->\n<div class=\"mui-appbar mui-container-fulid top-menu\">\n<div class=\"mui-container\">\n<div class=\"top-menu-item home\">\n<a href=\"https://www.tutorialspoint.com/index.htm\" target=\"_blank\" title=\"TutorialsPoint - Home\"><i class=\"fal fa-home\"></i> <span>Home</span></a>\n</div>\n<div class=\"top-menu-item qa\">\n<a href=\"https://www.tutorialspoint.com/about/about_careers.htm\" target=\"_blank\" title=\"Job @ Tutorials Point\"><i class=\"fa fa-suitcase\"></i> <span>Jobs</span></a>\n</div>\n<div class=\"top-menu-item tools\">\n<a href=\"https://www.tutorialspoint.com/online_dev_tools.htm\" target=\"_blank\" title=\"Tools - Online Development and Testing Tools\"><i class=\"fal fa-cogs\"></i> <span>Tools</span></a>\n</div>\n<div class=\"top-menu-item coding-ground\">\n<a href=\"https://www.tutorialspoint.com/codingground.htm\" target=\"_blank\" title=\"Coding Ground - Free Online IDE and Terminal\"><i class=\"fal fa-code\"></i> <span>Coding Ground </span></a> \n</div>\n<div class=\"top-menu-item current-affairs\">\n<a href=\"https://www.tutorialspoint.com/current_affairs.htm\" target=\"_blank\" title=\"Daily Current Affairs\"><i class=\"fal fa-layer-plus\"></i> <span>Current Affairs</span></a>\n</div>\n<div class=\"top-menu-item upsc-notes\">\n<a href=\"https://www.tutorialspoint.com/upsc_ias_exams.htm\" target=\"_blank\" title=\"UPSC IAS Exams Notes - TutorialsPoint\"><i class=\"fal fa-user-tie\"></i> <span>UPSC Notes</span></a>\n</div>      \n<div class=\"top-menu-item online-tutoris\">\n<a href=\"https://www.tutorialspoint.com/tutor_connect/index.php\" target=\"_blank\" title=\"Top Online Tutors - Tutor Connect\"><i class=\"fal fa-user\"></i> <span>Online Tutors</span></a>\n</div>\n<div class=\"top-menu-item whiteboard\">\n<a href=\"https://www.tutorialspoint.com/whiteboard.htm\" target=\"_blank\" title=\"Free Online Whiteboard\"><i class=\"fal fa-chalkboard\"></i> <span>Whiteboard</span></a>\n</div>\n<div class=\"top-menu-item net-meeting\">\n<a href=\"https://www.tutorialspoint.com/netmeeting.php\" target=\"_blank\" title=\"A free tool for online video conferencing\"><i class=\"fal fa-chalkboard-teacher\"></i> <span>Net Meeting</span></a> \n</div>\n<div class=\"top-menu-item articles\">\n<a href=\"https://www.tutorix.com\" target=\"_blank\" title=\"Tutorx - The Best Learning App\" rel=\"nofollow\"><i class=\"fal fa-video\"></i> <span>Tutorix</span></a> \n</div>        \n<div class=\"social-menu-item\">\n<a href=\"https://www.facebook.com/tutorialspointindia\" target=\"_blank\" rel=\"nofollow\" data-placement=\"bottom\" title=\"tutorialspoint @ Facebook\"><i class=\"fab fa-facebook-f\"></i></a> \n<a href=\"https://www.twitter.com/tutorialspoint\" target=\"_blank\" rel=\"nofollow\" data-placement=\"bottom\" title=\"tutorialspoint @ Twitter\"><i class=\"fab fa-twitter\"></i></a>\n<a href=\"https://www.linkedin.com/company/tutorialspoint\" target=\"_blank\" rel=\"nofollow\" data-placement=\"bottom\" title=\"tutorialspoint @ Linkedin\"><i class=\"fab fa-linkedin-in\"></i></a>\n<a href=\"https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg\" target=\"_blank\" rel=\"nofollow\" data-placement=\"bottom\" title=\"tutorialspoint YouTube\"><i class=\"fab fa-youtube\"></i></a>\n</div>        \n</div>\n</div>\n<!-- Top sub-menu Ends Here -->\n<!-- Top main-menu Starts Here -->\n<div class=\"mui-appbar mui-container-fulid mui--appbar-line-height mui--z1\" id=\"logo-menu\">\n<div class=\"mui-container\">\n<div class=\"left-menu\">\n<a href=\"https://www.tutorialspoint.com/index.htm\" title=\"Tutorialspoint\">\n<img class=\"tp-logo\" alt=\"tutorialspoint\" src=\"/jquery_mobile/images/logo.png\">\n</a>\n<div class=\"mui-dropdown\">\n<a class=\"mui-btn mui-btn--primary categories\" data-mui-toggle=\"dropdown\"><i class=\"fa fa-th-large\"></i> \n<span>Categories <span class=\"mui-caret\"></span></span></a>            \n<ul class=\"mui-dropdown__menu cat-menu\">\n<li>\n<ul>\n<li><a href=\"/academic_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Academic Tutorials</a></li>\n<li><a href=\"/big_data_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Big Data &amp; Analytics </a></li>\n<li><a href=\"/computer_programming_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Computer Programming </a></li>\n<li><a href=\"/computer_science_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Computer Science </a></li>\n<li><a href=\"/database_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Databases </a></li>\n<li><a href=\"/devops_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> DevOps </a></li>\n<li><a href=\"/digital_marketing_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Digital Marketing </a></li>\n<li><a href=\"/engineering_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Engineering Tutorials </a></li>\n<li><a href=\"/upsc_ias_exams.htm\"><i class=\"fa fa-caret-right\"></i> Exams Syllabus </a></li>\n<li><a href=\"/famous_monuments.htm\"><i class=\"fa fa-caret-right\"></i> Famous Monuments </a></li>\n<li><a href=\"/gate_exams_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> GATE Exams Tutorials</a></li>\n<li><a href=\"/latest_technologies.htm\"><i class=\"fa fa-caret-right\"></i> Latest Technologies </a></li>\n<li><a href=\"/machine_learning_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Machine Learning </a></li>\n<li><a href=\"/mainframe_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Mainframe Development </a></li>\n<li><a href=\"/management_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Management Tutorials </a></li>\n<li><a href=\"/maths_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Mathematics Tutorials</a></li>\n<li><a href=\"/microsoft_technologies_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Microsoft Technologies </a></li>\n<li><a href=\"/misc_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Misc tutorials </a></li>\n<li><a href=\"/mobile_development_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Mobile Development </a></li>\n<li><a href=\"/java_technology_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Java Technologies </a></li>\n<li><a href=\"/python_technologies_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Python Technologies </a></li>\n<li><a href=\"/sap_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> SAP Tutorials </a></li>\n<li><a href=\"/scripting_lnaguage_tutorials.htm\"><i class=\"fa fa-caret-right\"></i>Programming Scripts </a></li>\n<li><a href=\"/selected_reading.htm\"><i class=\"fa fa-caret-right\"></i> Selected Reading </a></li>\n<li><a href=\"/software_quality_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Software Quality </a></li>\n<li><a href=\"/soft_skill_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Soft Skills </a></li>\n<li><a href=\"/telecom_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Telecom Tutorials </a></li>\n<li><a href=\"/upsc_ias_exams.htm\"><i class=\"fa fa-caret-right\"></i> UPSC IAS Exams </a></li>\n<li><a href=\"/web_development_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Web Development </a></li>\n<li><a href=\"/sports_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Sports Tutorials </a></li>\n<li><a href=\"/xml_technologies_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> XML Technologies </a></li>\n<li><a href=\"/multi_language_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Multi-Language</a></li>\n<li><a href=\"/questions_and_answers.htm\"><i class=\"fa fa-caret-right\"></i> Interview Questions</a></li>\n</ul>\n</li>\n</ul>\n<div class=\"clear\"></div>\n</div> \n</div>\n<div class=\"right-menu\">\n<div class=\"toc-toggle\">\n<a href=\"javascript:void(0);\"><i class=\"fa fa-bars\"></i></a>\n</div>\n<div class=\"mobile-search-btn\">\n<a href=\"https://www.tutorialspoint.com/search.htm\"><i class=\"fal fa-search\"></i></a>\n</div>\n<div class=\"search-box\">\n<form method=\"get\" class=\"\" name=\"searchform\" action=\"https://www.google.com/search\" target=\"_blank\" novalidate=\"\">\n<input type=\"hidden\" name=\"sitesearch\" value=\"www.tutorialspoint.com\" class=\"user-valid valid\">\n<input class=\"header-search-box\" type=\"text\" id=\"search-string\" name=\"q\" placeholder=\"Search your favorite tutorials...\" onfocus=\"if (this.value == 'Search your favorite tutorials...') {this.value = '';}\" onblur=\"if (this.value == '') {this.value = 'Search your favorite tutorials...';}\" autocomplete=\"off\">\n<button><i class=\"fal fa-search\"></i></button>\n</form>\n</div>\n<div class=\"menu-btn library-btn\">\n<a href=\"https://www.tutorialspoint.com/tutorialslibrary.htm\"><i class=\"fal fa-cubes\"></i> <span>Library</span></a>\n</div>\n<div class=\"menu-btn videos-btn\">\n<a href=\"https://www.tutorialspoint.com/videotutorials/index.php\"><i class=\"fal fa-video\"></i> <span>Videos</span></a> \n</div>\n<div class=\"menu-btn videos-btn\">\n<a href=\"https://www.tutorialspoint.com/questions/index.php\"><i class=\"fa fa-location-arrow\"></i> <span>Q/A</span></a>\n</div>\n<div class=\"menu-btn ebooks-btn\">\n<a href=\"https://store.tutorialspoint.com\"><i class=\"fal fa-book\"></i> <span>eBooks</span></a>\n</div>\n<div class=\"mui-dropdown\">\n<button class=\"mui-btn mui-btn--primary\" data-mui-toggle=\"dropdown\" type=\"button\">\n<span class=\"mui-caret\"></span>\n</button>\n<ul class=\"mui-dropdown__menu\">\n<li><a href=\"https://www.tutorialspoint.com/tutorialslibrary.htm\"><i class=\"fal fa-cubes\"></i> <span>Library</span></a></li>\n<li><a href=\"https://www.tutorialspoint.com/videotutorials/index.php\"><i class=\"fal fa-video\"></i> <span>Videos</span></a></li>\n<li><a href=\"https://store.tutorialspoint.com\"><i class=\"fal fa-book\"></i> <span>eBooks</span></a></li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<!-- Top main-menu Ends Here -->\n</header>\n<div class=\"mui-container-fluid content\">\n<div class=\"mui-container\">\n<!-- Tutorial ToC Starts Here -->\n<div class=\"mui-col-md-3 tutorial-toc\">\n<div class=\"mini-logo\">\n<img src=\"/jquery_mobile/images/jquery-mobile-mini-logo.jpg\" alt=\"jQuery Mobile Tutorial\">\n</div>\n<ul class=\"toc chapters\">\n<li class=\"heading\">jQuery Mobile Tutorial</li>\n<li><a href=\"/jquery_mobile/index.htm\">jQuery Mobile - Home</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_overview.htm\">jQuery Mobile - Overview</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_setup.htm\">jQuery Mobile - Setup</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_pages.htm\">jQuery Mobile - Pages</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_icons.htm\">jQuery Mobile - Icons</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_transitions.htm\">jQuery Mobile - Transitions</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_layouts.htm\">jQuery Mobile - Layouts</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_widgets.htm\">jQuery Mobile - Widgets</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_events.htm\">jQuery Mobile - Events</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_forms.htm\">jQuery Mobile - Forms</a></li>\n<li style=\"background-color: rgb(214, 214, 214);\"><a href=\"/jquery_mobile/jquery_mobile_themes.htm\">jQuery Mobile - Themes</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_css_classes.htm\">jQuery Mobile - CSS Classes</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_data_attributes.htm\">jQuery Mobile - Data Attributes</a></li>\n</ul>\n<ul class=\"toc chapters\">\n<li class=\"heading\">jQuery Mobile Useful Resources</li>\n<li><a href=\"/jquery_mobile/jquery_mobile_interview_questions.htm\">jQuery Mobile - Interview Questions</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_quick_guide.htm\">jQuery Mobile - Quick Guide</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_useful_resources.htm\">jQuery Mobile - Useful Resources</a></li>\n<li><a href=\"/jquery_mobile/jquery_mobile_discussion.htm\">jQuery Mobile - Discussion</a></li>\n</ul>\n<ul class=\"toc reading\">\n<li class=\"sreading\">Selected Reading</li>\n<li><a target=\"_top\" href=\"/upsc_ias_exams.htm\">UPSC IAS Exams Notes</a></li>\n<li><a target=\"_top\" href=\"/developers_best_practices/index.htm\">Developer's Best Practices</a></li>\n<li><a target=\"_top\" href=\"/questions_and_answers.htm\">Questions and Answers</a></li>\n<li><a target=\"_top\" href=\"/effective_resume_writing.htm\">Effective Resume Writing</a></li>\n<li><a target=\"_top\" href=\"/hr_interview_questions/index.htm\">HR Interview Questions</a></li>\n<li><a target=\"_top\" href=\"/computer_glossary.htm\">Computer Glossary</a></li>\n<li><a target=\"_top\" href=\"/computer_whoiswho.htm\">Who is Who</a></li>\n</ul>\n</div>\n<!-- Tutorial ToC Ends Here -->\n<!-- Tutorial Content Starts Here -->\n<div class=\"mui-col-md-6 tutorial-content\" style=\"min-height: 1196px;\">\n<h1>jQuery Mobile - Themes</h1>\n<hr>\n<div class=\"top-ad-heading\">Advertisements</div>\n<div style=\"text-align:center;\" class=\"google-top-ads\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\nvar width = document.getElementsByClassName(\"tutorial-content\")[0].clientWidth - 40;\ngoogle_ad_width = width;\ngoogle_ad_height = 150;\ngoogle_ad_format = width + \"x150_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"mui-container-fluid button-borders\">\n<div class=\"pre-btn\">\n<a href=\"/jquery_mobile/jquery_mobile_forms.htm\"><i class=\"fal fa-chevron-circle-left\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/jquery_mobile/jquery_mobile_css_classes.htm\">Next Page <i class=\"fal fa-chevron-circle-right\"></i>&nbsp;</a>\n</div>\n</div>\n<div class=\"clearer\"></div>\n<p>It sets different types of theme on the buttons, navbars, blocks, links and so on. You can set the theme using <i><b>data-theme</b></i> attribute.</p>\n<p>Following table describes the use of the theme functionality in different areas which is supported by jQuery Mobile.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th>Sr.No.</th>\n<th style=\"text-align:center;\">Functionality &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><a href=\"/jquery_mobile/jqm_themes_types.htm\">Themes</a>\n<p>It provides two different types of themes such as theme \"a\" and theme \"b\" to customize the look of the application.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><a href=\"/jquery_mobile/dialogs_styling_theming.htm\">Theming Header and Footer in Dialogs</a>\n<p>Sets the theme for header and footer in the dialog box.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><a href=\"/jquery_mobile/jqm_theming_buttons_icons_popups.htm\">Theming Buttons, Icons and Popups</a>\n<p>Specifies the theme for buttons, icons and popups.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><a href=\"/jquery_mobile/toolbar_buttons_footer.htm\">Theming Buttons in Header and Footer</a>\n<p>Displays the theme for buttons in the header and footer.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><a href=\"/jquery_mobile/navbar_themes.htm\">Theming Navigation Bars</a>\n<p>Applies the theme for navigation bars in header or footer.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><a href=\"/jquery_mobile/jqm_theming_panels.htm\">Theming Panels</a>\n<p>You can apply the theme for panel.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><a href=\"/jquery_mobile/jqm_theming_collapsible_split_buttons.htm\">Theming Collapsible Button and Split Buttons</a>\n<p>Displays the theme for collapsible and split buttons.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">8</td>\n<td><a href=\"/jquery_mobile/jqm_theming_lists_collapsible_lists.htm\">Theming Lists and Collapsible Lists</a>\n<p>Displays the theme for lists and collapsible lists.</p></td>\n</tr>\n<tr>\n<td class=\"ts\">9</td>\n<td><a href=\"/jquery_mobile/jqm_collapsible_forms.htm\">Collapsible Forms</a>\n<p>You can apply the theme for forms.</p></td>\n</tr>\n</tbody></table>\n<div class=\"mui-container-fluid button-borders show\">\n<div class=\"pre-btn\">\n<a href=\"/jquery_mobile/jquery_mobile_forms.htm\"><i class=\"fal fa-chevron-circle-left\"></i> Previous Page</a>\n<a class=\"hide-on-mobile\" href=\"javascript:printPage();\"><i class=\"fa fa-print\"></i> Print Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/jquery_mobile/jquery_mobile_css_classes.htm\">Next Page <i class=\"fal fa-chevron-circle-right\"></i>&nbsp;</a>\n</div>\n</div>\n<div class=\"google-bottom-ads\">\n<div>Advertisements</div>\n<div>\n   <div id=\"vi_bottom_ads\"><div class=\"adsbyvli\" data-ad-slot=\"vi_9013190\"></div></div>\n   <script>\n     (function() {\n     var adPos = document.getElementById('vi_bottom_ads');\n     var mobile_ad_id = \"vi_9012177\";\n     var desktop_ad_id = \"vi_9013190\";\n     var ad_id = window.innerWidth <= 768 ? mobile_ad_id : desktop_ad_id;\n     adPos.innerHTML = '<div class=\"adsbyvli\" data-ad-slot=\"' + ad_id + '\"></div>';\n     (vitag.displayInit = window.vitag.displayInit || []).push(function () {\n         viAPItag.display(ad_id);\n     });\n     }())\n   </script>\n</div>\n<div class=\"space-bottom\"></div>\n</div>\n</div>\n<!-- Tutorial Content Ends Here -->\n<!-- Right Column Starts Here -->\n<div class=\"mui-col-md-2 google-right-ads\">\n<div class=\"space-top\"></div>\n<div class=\"google-right-ad\" style=\"margin: 0px auto !important;margin-top:5px;\">\n<div class=\"adsbyvli\" data-ad-slot=\"vi_9012177\"></div>\n<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display(\"vi_9012177\")})</script>\n</div>\n<div class=\"google-right-ad\" style=\"margin-top:5px;\">\n<div class=\"adsbyvli\" data-ad-slot=\"vi_9012177\"></div>\n<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display(\"vi_9012177\")})</script>\n</div>\n<div class=\"google-right-ad\" style=\"margin-top:5px;\">\n<div class=\"adsbyvli\" data-ad-slot=\"vi_9013289\"></div>\n<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display(\"vi_9013289\")})</script>\n</div>\n<div class=\"space-bottom\" style=\"margin-bottom:15px;\"></div>\n</div>\n<!-- Right Column Ends Here -->\n</div>\n</div>\n<div class=\"clear\"></div>\n<footer id=\"footer\">\n<div class=\"mui--text-center\">\n<div class=\"mui--text-caption mui--text-light\">\n<a href=\"/index.htm\" class=\"logo\"><img class=\"img-responsive\" src=\"/images/logo-black.png\" alt=\"Tutorials Point\" title=\"Tutorials Point\"></a>\n</div>\n<ul class=\"mui-list--inline mui--text-body2 mui--text-light\">\n<li><a href=\"/about/index.htm\"><i class=\"fal fa-globe\"></i> About us</a></li>\n<li><a href=\"/about/about_terms_of_use.htm\"><i class=\"fal fa-asterisk\"></i> Terms of use</a></li>\n<li><a href=\"/about/about_privacy.htm#cookies\"> <i class=\"fal fa-shield-check\"></i> Cookies Policy</a></li>\n<li><a href=\"/about/faq.htm\"><i class=\"fal fa-question-circle\"></i> FAQ's</a></li>\n<li><a href=\"/about/about_helping.htm\"><i class=\"fal fa-hands-helping\"></i> Helping</a></li>\n<li><a href=\"/about/contact_us.htm\"><i class=\"fal fa-map-marker-alt\"></i> Contact</a></li>\n</ul>\n<div class=\"mui--text-caption mui--text-light bottom-copyright-text\">© Copyright 2019. All Rights Reserved.</div>\n</div>\n<script async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=UA-232293-17\"></script>\n<script>\nwindow.dataLayer = window.dataLayer || [];\nfunction gtag(){dataLayer.push(arguments);}\ngtag('js', new Date());\ngtag('config', 'UA-232293-6');\n</script>\n</footer>\n\n\n"
          ]
        },
        {
          "tag_line": "jQuery Mobile - CSS Classes (Auf Englisch)",
          "details": [
            "<h2>jQuery CSS Classes</h2>\n<p>You can use different types of CSS classes to style the elements as described in the below sections.</p>\n<h2>Global Classes</h2>\n<p>The following classes can be used as global classes on jQuery Mobile widgets −</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;width:5%\">Sr.No.</th>\n<th style=\"text-align:center;\">Class &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>ui-corner-all</b></p>\n<p>It displays the elements with rounded corners.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>ui-shadow</b></p>\n<p>It displays the shadow for the elements.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>ui-overlay-shadow</b></p>\n<p>It displays the overlay shadow for the elements.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>ui-mini</b></p>\n<p>It displays the smaller elements.</p>\n</td>\n</tr>\n</tbody></table>\n<h2>Button Classes</h2>\n<p>The following table lists button classes that are used with anchor or button elements −</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;width:5%\">Sr.No.</th>\n<th style=\"text-align:center;\">Class &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>ui-btn</b></p>\n<p>It specifies that the element will be styled as button.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>ui-btn-inline</b></p>\n<p>It shows the button as inline element which saves the space as needed for the label.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>ui-btn-icon-top</b></p>\n<p>It places the icon above the text.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>ui-btn-icon-right</b></p>\n<p>It places the icon right of the text.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>ui-btn-icon-bottom</b></p>\n<p>It places the icon below the text.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>ui-btn-icon-left</b></p>\n<p>It places the icon left of the text.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><p><b>ui-btn-icon-notext</b></p>\n<p>It shows the only icon.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">8</td>\n<td><p><b>ui-btn-a|b</b></p>\n<p>It displays the color of the button (\"a\" will be the default background color i.e. gray and \"b\" will change the background color to black).</p>\n</td>\n</tr>\n</tbody></table>\n<h2>Icon Classes</h2>\n<p>The following table lists icon classes that are used with anchor or button elements −</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;width:5%\">Sr.No.</th>\n<th style=\"text-align:center;\">Class &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>ui-icon-action</b></p>\n<p>It shows the action icon.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>ui-icon-alert</b></p>\n<p>It display the exclamation mark inside a triangle.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>ui-icon-arrow-d-l</b></p>\n<p>It specifies down with left arrow.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>ui-icon-arrow-d-r</b></p>\n<p>It specifies down with right arrow.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>ui-icon-arrow-u-l</b></p>\n<p>It specifies up with left arrow.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>ui-icon-arrow-u-r</b></p>\n<p>It specifies up with right arrow.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><p><b>ui-icon-arrow-l</b></p>\n<p>It specifies the left arrow.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">8</td>\n<td><p><b>ui-icon-arrow-r</b></p>\n<p>It specifies the right arrow.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">9</td>\n<td><p><b>ui-icon-arrow-u</b></p>\n<p>It specifies the up arrow.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">10</td>\n<td><p><b>ui-icon-arrow-d</b></p>\n<p>It specifies the down arrow.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">11</td>\n<td><p><b>ui-icon-bars</b></p>\n<p>It shows the 3 horizontal bars one above the other.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">12</td>\n<td><p><b>ui-icon-bullets</b></p>\n<p>It shows the 3 horizontal bullets one above the other.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">13</td>\n<td><p><b>ui-icon-carat-d</b></p>\n<p>It displays the carat to down.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">14</td>\n<td><p><b>ui-icon-carat-l</b></p>\n<p>It displays the carat to left.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">15</td>\n<td><p><b>ui-icon-carat-r</b></p>\n<p>It displays the carat to right.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">16</td>\n<td><p><b>ui-icon-carat-u</b></p>\n<p>It displays the carat to up.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">17</td>\n<td><p><b>ui-icon-check</b></p>\n<p>It shows the checkmark icon.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">18</td>\n<td><p><b>ui-icon-comment</b></p>\n<p>It specifies the comment or message.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">19</td>\n<td><p><b>ui-icon-forbidden</b></p>\n<p>It displays the forbidden icon.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">20</td>\n<td><p><b>ui-icon-forward</b></p>\n<p>It specifies the forward icon.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">21</td>\n<td><p><b>ui-icon-navigation</b></p>\n<p>It specifies the navigation icon.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">22</td>\n<td><p><b>ui-icon-recycle</b></p>\n<p>It displays the recycle icon.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">23</td>\n<td><p><b>ui-icon-refresh</b></p>\n<p>It shows the refresh icon.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">24</td>\n<td><p><b>ui-icon-tag</b></p>\n<p>It indicates the tag icon.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">25</td>\n<td><p><b>ui-icon-video</b></p>\n<p>It indicates the video or camera icon.</p>\n</td>\n</tr>\n</tbody></table>\n<h2>Theme Classes</h2>\n<p>It provides two different types of themes such as theme \"a\" and theme \"b\" to customize the look of the application. You can create your own theme classes by appending swatch letter (a-z). Following table lists theme classes which are specified from letter a to z.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;width:5%\">Sr.No.</th>\n<th style=\"text-align:center;\">Class &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>ui-bar-(a-z)</b></p>\n<p>It displays the color for bar including headers, footers, and other bars in the page.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>ui-body-(a-z)</b></p>\n<p>It displays the color for content block including listview, popups, sliders, panels, loaders, etc.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>ui-btn-(a-z)</b></p>\n<p>It displays the color for button.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>ui-group-theme-(a-z)</b></p>\n<p>It displays the color for controlgroups, listviews, and collapsible sets.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>ui-overlay-(a-z)</b></p>\n<p>It displays the background color for popup, dialog, and page containers.</p>\n</td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>ui-page-theme-(a-z)</b></p>\n<p>It displays the color for pages.</p>\n</td>\n</tr>\n</tbody></table>\n<h2>Grid Classes</h2>\n<p>Following table lists grid classes that are used with equal width, no border, background, margin or padding.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Grid Class</th>\n<th style=\"text-align:center;\">Columns</th>\n<th style=\"text-align:center;\">Column Widths</th>\n<th style=\"text-align:center;\">Corresponds To</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td>ui-grid-solo</td>\n<td class=\"ts\">1</td>\n<td>100%</td>\n<td>ui-block-a</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td>ui-grid-a</td>\n<td class=\"ts\">2</td>\n<td>50%/50%</td>\n<td>ui-block-a|b</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td>ui-grid-b</td>\n<td class=\"ts\">3</td>\n<td>33%/33%/33%</td>\n<td>ui-block-a|b|c</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td>ui-grid-c</td>\n<td class=\"ts\">4</td>\n<td>25%/25%/25%/25%</td>\n<td>ui-block-a|b|c|d</td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td>ui-grid-d</td>\n<td class=\"ts\">5</td>\n<td>20%/20%/20%/20%/20%</td>\n<td>ui-block-a|b|c|d|e</td></tr></tbody></table>"
          ]
        },
        {
          "tag_line": "jQuery Mobile - Data Attributes (Auf Englisch)",
          "details": [
            "<h2>Button</h2>\n<p>It specifies a clickable button that includes content like text or images using the class <i>ui-btn</i>. It is deprecated in version 1.4. Use the <i>ui-btn</i> attribute instead of using <i>data-role = \"button\"</i> attribute.</p>\n<p>Following table lists the button elements used with data attribute.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data-attribute &amp; Description</th>\n<th style=\"text-align:center;\">Value</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>data-corners</b></p>\n<p>It defines whether the button should contain rounded corners or not.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>data-icon</b></p>\n<p>It defines the icon of the button.</p>\n</td>\n<td style=\"vertical-align:middle;\">Default is no icon</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>data-iconpos</b></p>\n<p>It defines the position of the icon.</p>\n</td>\n<td style=\"vertical-align:middle;\">left | right | top | bottom</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>data-iconshadow</b></p>\n<p>It defines whether the icon of the button should contain shadow or not.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>data-inline</b></p>\n<p>It defines whether the button should be inline or not.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>data-mini</b></p>\n<p>It defines whether the button should display in smaller size or regular size.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><p><b>data-shadow</b></p>\n<p>It defines whether the button should contain shadow or not.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">8</td>\n<td><p><b>data-theme</b></p>\n<p>It displays the theme color for the button.</p>\n</td>\n<td style=\"vertical-align:middle;\">letter (a-z)</td>\n</tr>\n</tbody></table>\n<h2>Checkbox</h2>\n<p>Following table lists the checkbox elements used with <b><i>type = \"checkbox\"</i></b>.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data-attribute &amp; Description</th>\n<th style=\"text-align:center;\">Value</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>data-mini</b></p>\n<p>It defines whether the checkbox should display in smaller size or regular size.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>data-role</b></p>\n<p>It stops styling of checkboxes as buttons.</p>\n</td>\n<td class=\"ts\">none</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>data-theme</b></p>\n<p>It displays the theme color for the checkbox.</p>\n</td>\n<td style=\"vertical-align:middle;\">letter (a-z)</td>\n</tr>\n</tbody></table>\n<h2>Collapsible</h2>\n<p>Following table lists collapsible elements used with <b><i>data-role = \"collapsible\"</i></b> attribute.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data-attribute &amp; Description</th>\n<th style=\"text-align:center;\">Value</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>data-collapsed</b></p>\n<p>It indicates whether the content should be closed or expanded.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>data-collapsed-cue-text</b></p>\n<p>It displays feedback for users with screen reader software.</p>\n</td>\n<td style=\"vertical-align:middle;\">Default is collapsing content</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>data-collapsed-icon</b></p>\n<p>It defines the icon of collapsible button.</p>\n</td>\n<td style=\"vertical-align:middle;\">Default icon is \"plus\"</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>data-content-theme</b></p>\n<p>It displays the theme color for the collapsible content.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>data-expanded-cue-text</b></p>\n<p>It displays feedback for users with screen reader software.</p>\n</td>\n<td style=\"vertical-align:middle;\">Default is expanding content</td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>data-expanded-icon</b></p>\n<p>It displays the collapsible button when you expand the content.</p>\n</td>\n<td style=\"vertical-align:middle;\">Default icon is \"minus\"</td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><p><b>data-iconpos</b></p>\n<p>It defines the position of the icon.</p>\n</td>\n<td style=\"vertical-align:middle;\">left | right | top | bottom</td>\n</tr>\n<tr>\n<td class=\"ts\">8</td>\n<td><p><b>data-inset</b></p>\n<p>It defines whether the collapsible button should display with rounded corners and margin or not.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">9</td>\n<td><p><b>data-mini</b></p>\n<p>It defines whether the collapsible buttons should display in smaller size or regular size.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">10</td>\n<td><p><b>data-theme</b></p>\n<p>It displays the theme color for the collapsible button.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n</tbody></table>\n<h2>Collapsible Set</h2>\n<p>Following table lists the collapsible set elements used with the <b><i>data-role = \"collapsibleset\"</i></b> attribute.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data-attribute &amp; Description</th>\n<th style=\"text-align:center;\">Value</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>data-collapsed-icon</b></p>\n<p>It defines the icon of collapsible button.</p>\n</td>\n<td style=\"vertical-align:middle;\">Default icon is \"plus\"</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>data-content-theme</b></p>\n<p>It displays the theme color for the collapsible content.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>data-expanded-icon</b></p>\n<p>It displays the collapsible button when you expand the content.</p>\n</td>\n<td style=\"vertical-align:middle;\">Default icon is \"minus\"</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>data-iconpos</b></p>\n<p>It defines the position of the icon.</p>\n</td>\n<td style=\"vertical-align:middle;\">left | right | top | bottom</td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>data-inset</b></p>\n<p>It defines whether the collapsible button should display with rounded corners and margin or not.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>data-mini</b></p>\n<p>It defines whether the collapsible buttons should display in smaller size or regular size.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><p><b>data-theme</b></p>\n<p>It displays the theme color for the collapsible button.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n</tbody></table>\n<h2>Controlgroup</h2>\n<p>Following table lists Controlgroup elements used with <b><i>data-role = \"controlgroup\"</i></b> attribute −</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data-attribute &amp; Description</th>\n<th style=\"text-align:center;\">Value</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>data-exclude-invisible</b></p>\n<p>It defines whether to exclude invisible children in the assignment of rounded corners.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>data-mini</b></p>\n<p>It defines whether the group should display in smaller size or regular size.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>data-theme</b></p>\n<p>It displays the theme color for the controlgroup.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>data-type</b></p>\n<p>It indicates whether the group should display in horizontal or vertical format.</p>\n</td>\n<td style=\"vertical-align:middle;\">horizontal | vertical</td>\n</tr>\n</tbody></table>\n<h2>Dialog</h2>\n<p>Following table lists dialog elements used with <b><i>data-dialog=\"true\"</i></b> attribute.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data-attribute &amp; Description</th>\n<th style=\"text-align:center;\">Value</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>data-close-btn</b></p>\n<p>It defines the position of the close button.</p>\n</td>\n<td style=\"vertical-align:middle;\">left | right | none</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>data-close-btn-text</b></p>\n<p>It defines the text for the close button.</p>\n</td>\n<td class=\"ts\">text</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>data-corners</b></p>\n<p>It defines whether dialog should display with rounded corners or not.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>data-dom-cache</b></p>\n<p>It indicates whether DOM cache must clear or not for individual pages.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>data-overlay-theme</b></p>\n<p>It defines the overlay color of the dialog page.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>data-theme</b></p>\n<p>It defines the theme color of the dialog page.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><p><b>data-title</b></p>\n<p>It defines the title of the dialog page.</p>\n</td>\n<td class=\"ts\">text</td>\n</tr>\n</tbody></table>\n<h2>Enhancement</h2>\n<p>Following table lists enhancement elements used with <b><i>data-enhance=\"false\" or data-ajax = \"false\"</i></b> attribute.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data-attribute &amp; Description</th>\n<th style=\"text-align:center;\">Value</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>data-enhance</b></p>\n<p>You can style the page by setting this attribute to \"true\". You cannot style the page if it is set to \"false\".</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>data-ajax</b></p>\n<p>It indicates whether pages must load from Ajax or not.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n</tbody></table><h2>Fixed Toolbar</h2><p>Following table lists the toolbar elements used with <b><i>data-position = \"fixed\"</i></b> attribute.</p><table>\n\n\n</table><table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data-attribute &amp; Description</th>\n<th style=\"text-align:center;\">Value</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>data-disable-page-zoom</b></p>\n<p>It defines whether the user is able to scale/zoom the page or not.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>data-fullscreen</b></p>\n<p>It defines toolbars must be positioned at the top and/or bottom.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>data-tap-toggle</b></p>\n<p>It indicates whether the user can toggle toolbar-visibility on taps or not.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>data-transition</b></p>\n<p>It shows a transition effect when you tap or click the element.</p>\n</td>\n<td style=\"vertical-align:middle;\">slide | fade | none</td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>data-update-page-padding</b></p>\n<p>It updates the padding of page by using resize, transition and update layout events.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>data-visible-on-page-show</b></p>\n<p>It defines toolbar-visibility when the parent page is shown.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n</tbody></table><h2>Flip Toggle Switch</h2><p>Following table lists the flip toggle elements used with <b><i>data-role = \"flipswitch\"</i></b> attribute −</p><table>\n\n\n</table><table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data-attribute &amp; Description</th>\n<th style=\"text-align:center;\">Value</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>data-mini</b></p>\n<p>It defines whether the switch should display in smaller size or regular size.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>data-on-text</b></p>\n<p>It defines the \"on\" text on the flip switch.</p>\n</td>\n<td style=\"vertical-align:middle;\">Default is \"on\"</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>data-off-text</b></p>\n<p>It defines the \"off\" text on the flip switch.</p>\n</td>\n<td style=\"vertical-align:middle;\">Default is \"off\"</td>\n</tr>\n</tbody></table><h2>Footer</h2><p>The following table lists footer elements used with <i>data-role=\"footer\"</i> attribute −</p><table>\n\n\n</table><table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data-attribute &amp; Description</th>\n<th style=\"text-align:center;\">Value</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>data-id</b></p>\n<p>It defines the unique ID.</p>\n</td>\n<td class=\"ts\">text</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>data-position</b></p>\n<p>It defines whether the footer should be positioned at the bottom or inline with page content.</p>\n</td>\n<td style=\"vertical-align:middle;\">inline | fixed</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>data-fullscreen</b></p>\n<p>It defines whether the footer should be positioned at the bottom and over the page content or not.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>data-theme</b></p>\n<p>It defines the theme color of the footer.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n</tbody></table><h2>Header</h2><p>Following table lists the header elements used with <b><i>data-role = \"header\"</i></b> attribute.</p><table>\n\n\n</table><table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data-attribute &amp; Description</th>\n<th style=\"text-align:center;\">Value</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>data-id</b></p>\n<p>It defines the unique ID.</p>\n</td>\n<td class=\"ts\">text</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>data-position</b></p>\n<p>It defines whether the header should be positioned at the bottom or inline with the page content.</p>\n</td>\n<td style=\"vertical-align:middle;\">inline | fixed</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>data-fullscreen</b></p>\n<p>It defines whether the header should be positioned at the bottom and over the page content or not.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>data-theme</b></p>\n<p>It defines the theme color of the header.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n</tbody></table><h2>Inputs</h2><p>Following table lists the input elements used with <b><i>type = \"text|search|etc\"</i></b> attribute.</p><table>\n\n\n</table><table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data-attribute &amp; Description</th>\n<th style=\"text-align:center;\">Value</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>data-clear-btn</b></p>\n<p>It defines whether the input element should contain clear button or not.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>data-clear-btn-text</b></p>\n<p>It defines the text for the clear button.</p>\n</td>\n<td class=\"ts\">text</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>data-mini</b></p>\n<p>It defines whether input should display in smaller size or regular size.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>data-role</b></p>\n<p>It stops styling input or text areas as buttons.</p>\n</td>\n<td class=\"ts\">none</td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>data-theme</b></p>\n<p>It defines the theme color of the input element.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n</tbody></table><h2>Link</h2><p>Following table lists the link elements used with jQuery Mobile.</p><table>\n\n\n</table><table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data-attribute &amp; Description</th>\n<th style=\"text-align:center;\">Value</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>data-ajax</b></p>\n<p>It indicates whether the pages must be loaded through Ajax or not.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>data-direction</b></p>\n<p>It is used for reverse transition.</p>\n</td>\n<td class=\"ts\">reverse</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>data-dom-cache</b></p>\n<p>It indicates whether jQuery DOM cache must be clear or not for pages.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>data-prefetch</b></p>\n<p>It is used to prefetch the pages into DOM.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>data-rel</b></p>\n<p>It specifies the behavior of the link.</p>\n</td>\n<td style=\"vertical-align:middle;\">back | dialog | external | popup</td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>data-transition</b></p>\n<p>It defines the transition from one page to another.</p>\n</td>\n<td style=\"vertical-align:middle;\">fade | flip | flow | pop | slide | slidedown | slidefade | slideup | turn | none</td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><p><b>data-position-to</b></p>\n<p>It defines the position of the popup boxes.</p>\n</td>\n<td style=\"vertical-align:middle;\">origin | jQuery selector | window</td>\n</tr>\n</tbody></table><h2>List</h2><p>Following table shows the list elements used with <b><i>data-role = \"listview\"</i></b> attribute.</p><table>\n\n\n</table><table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data-attribute &amp; Description</th>\n<th style=\"text-align:center;\">Value</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>data-autodividers</b></p>\n<p>It divides the list automatically.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>data-count-theme</b></p>\n<p>It defines the theme color of the count element.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>data-divider-theme</b></p>\n<p>It defines the theme color for list divider.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>data-filter</b></p>\n<p>It is used to filter the list values in the search box.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>data-filter-placeholder</b></p>\n<p>It defines some text inside the search box.</p>\n</td>\n<td class=\"ts\">text</td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>data-filter-theme</b></p>\n<p>It defines the theme color for search filter.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><p><b>data-icon</b></p>\n<p>It provides the icon for the list.</p>\n</td>\n<td style=\"vertical-align:middle;\">Default is no icon</td>\n</tr>\n<tr>\n<td class=\"ts\">8</td>\n<td><p><b>data-inset</b></p>\n<p>It defines whether list should display with rounded corners and margin or not.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">9</td>\n<td><p><b>data-split-icon</b></p>\n<p>It defines the icon for split button.</p>\n</td>\n<td style=\"vertical-align:middle;\">The default icon is \"arrow-r\"</td>\n</tr>\n<tr>\n<td class=\"ts\">10</td>\n<td><p><b>data-split-theme</b></p>\n<p>It defines the theme color for split button.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n<tr>\n<td class=\"ts\">11</td>\n<td><p><b>data-theme</b></p>\n<p>It defines the theme color for the list.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n</tbody></table>\n<h2>List Item</h2>\n<p>Following table shows list item elements used with <b><i>data-role = \"listview\"</i></b> attribute.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data-attribute &amp; Description</th>\n<th style=\"text-align:center;\">Value</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>data-filtertext</b></p>\n<p>It is used to filter the list values using the text in the search box.</p>\n</td>\n<td class=\"ts\">text</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>data-icon</b></p>\n<p>It provides the icon for the list item.</p>\n</td>\n<td style=\"vertical-align:middle;\">Default is no icon</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>data-role</b></p>\n<p>It defines the divider for list items.</p>\n</td>\n<td style=\"vertical-align:middle;\">list-divider</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>data-theme</b></p>\n<p>It defines the theme color for the list item.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n</tbody></table>\n<h2>Navbar</h2>\n<p>Following table lists the navbar elements used with <b><i>data-role = \"navbar\"</i></b> attribute.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data-attribute &amp; Description</th>\n<th style=\"text-align:center;\">Value</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>data-icon</b></p>\n<p>It provides the icon for the list item.</p>\n</td>\n<td class=\"ts\">Default is no icon</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>data-iconpos</b></p>\n<p>It defines the position for the icon.</p>\n</td>\n<td class=\"ts\">left | right | top | bottom | notext</td>\n</tr>\n</tbody></table>\n<h2>Page</h2>\n<p>Following table lists the page elements used with <b><i>data-role = \"page\"</i></b> attribute.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data-attribute &amp; Description</th>\n<th style=\"text-align:center;\">Value</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>data-dom-cache</b></p>\n<p>It indicates whether DOM cache must clear or not for individual pages.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>data-overlay-theme</b></p>\n<p>It defines the overlay color of the dialog pages.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>data-theme</b></p>\n<p>It defines theme color for the page.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>data-title</b></p>\n<p>It provides the title for the page.</p>\n</td>\n<td style=\"vertical-align:middle;\">Default is no icon</td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>data-url</b></p>\n<p>It is used to updating the URL.</p>\n</td>\n<td style=\"vertical-align:middle;\">url</td>\n</tr>\n</tbody></table>\n<h2>Popup</h2>\n<p>Following table lists the popup elements used with <b><i>data-role = \"popup\"</i></b> attribute.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data-attribute &amp; Description</th>\n<th style=\"text-align:center;\">Value</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>data-corners</b></p>\n<p>It defines whether the popup should display with rounded corners and margin or not.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>data-dismissible</b></p>\n<p>It defines the whether popup should be close by clicking outside or not.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>data-history</b></p>\n<p>It defines the whether popup should display the history of item when opened.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>data-overlay-theme</b></p>\n<p>It defines the overlay color of the popup box.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>data-shadow</b></p>\n<p>It displays the shadow for the popup box.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>data-theme</b></p>\n<p>It defines theme color for the popup box.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><p><b>data-tolerance</b></p>\n<p>It defines the edges of the window.</p>\n</td>\n<td style=\"vertical-align:middle;\">30, 15, 30, 15</td>\n</tr>\n</tbody></table>\n<h2>Radio Button</h2>\n<p>Following table lists the radio button elements used with <b><i>type = \"radio\"</i></b> attribute.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data-attribute &amp; Description</th>\n<th style=\"text-align:center;\">Value</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>data-mini</b></p>\n<p>It defines whether the button should display in smaller size or regular size.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>data-role</b></p>\n<p>It stops the styling of radio buttons as enhanced buttons.</p>\n</td>\n<td class=\"ts\">none</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>data-theme</b></p>\n<p>It defines the theme color for the radio button.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n</tbody></table>\n<h2>Select</h2>\n<p>Following table lists the select elements used with jQuery Mobile.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data-attribute &amp; Description</th>\n<th style=\"text-align:center;\">Value</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>data-icon</b></p>\n<p>It provides the icon for the select element.</p>\n</td>\n<td style=\"vertical-align:middle;\">Default is \"arrow-d\"</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>data-iconpos</b></p>\n<p>It defines the position of the icon.</p>\n</td>\n<td style=\"vertical-align:middle;\">left | right | top | bottom</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>data-inline</b></p>\n<p>It defines whether the button should be inline or not.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>data-mini</b></p>\n<p>It defines whether select should display in smaller size or regular size.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>data-native-menu</b></p>\n<p>It use custom menu when it has been set to false.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><p><b>data-overlay-theme</b></p>\n<p>It defines the overlay color for the custom select menu.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n<tr>\n<td class=\"ts\">7</td>\n<td><p><b>data-placeholder</b></p>\n<p>It is used to set an option element of non-native select.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">8</td>\n<td><p><b>data-role</b></p>\n<p>It stops the styling of select elements as buttons.</p>\n</td>\n<td class=\"ts\">none</td>\n</tr>\n<tr>\n<td class=\"ts\">9</td>\n<td><p><b>data-theme</b></p>\n<p>It displays the theme color for the select elements.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n</tbody></table>\n<h2>Slider</h2>\n<p>Following table lists the slider elements used with <b><i>type = \"range\"</i></b> attribute.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Sr.No.</th>\n<th style=\"text-align:center;\">Data-attribute &amp; Description</th>\n<th style=\"text-align:center;\">Value</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><p><b>data-highlight</b></p>\n<p>It highlights the slider.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><p><b>data-mini</b></p>\n<p>It defines whether the slider should display in smaller size or regular size.</p>\n</td>\n<td class=\"ts\">true | false</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><p><b>data-role</b></p>\n<p>It stops the styling of slider controls as buttons.</p>\n</td>\n<td class=\"ts\">none</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><p><b>data-theme</b></p>\n<p>It displays the theme color for the slider control.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><p><b>data-track-theme</b></p>\n<p>It displays the theme color for the slider track.</p>\n</td>\n<td class=\"ts\">letter (a-z)</td></tr></tbody></table>"
          ]
        }
      ]
    },
    {
      "title": "React Native",
      "content": [
        {
          "tag_line": "React Native - View (Auf Englisch)",
          "details": [
            "<p>View is the most common element in React Native. You can consider it as an equivalent of the <b>div</b> element used in web development.</p>\n<h2>Use Cases</h2>\n<p>Let us now see a few common use cases.</p>\n<ul class=\"list\">\n<li><p>When you need to wrap your elements inside the container, you can use <b>View</b> as a container element.</p></li>\n<li><p>When you want to nest more elements inside the parent element, both parent and child can be <b>View</b>. It can have as many children as you want.</p></li>\n<li><p>When you want to style different elements, you can place them inside <b>View</b> since it supports <b>style</b> property, <b>flexbox</b> etc.</p></li>\n<li><p><b>View</b> also supports synthetic touch events, which can be useful for different purposes.</p></li>\n</ul>\n<p>We already used <b>View</b> in our previous chapters and we will use it in almost all subsequent chapters as well. The <b>View</b> can be assumed as a default element in React Native. In example given below, we will nest two Views and a text.</p>\n<h3>App.js</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">React</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">Component</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react'</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">View</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Text</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react-native'</span><span class=\"pln\">\n\n</span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"typ\">App</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">\n      </span><span class=\"pun\">&lt;</span><span class=\"typ\">View</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n         </span><span class=\"pun\">&lt;</span><span class=\"typ\">View</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"typ\">This</span><span class=\"pln\"> </span><span class=\"kwd\">is</span><span class=\"pln\"> </span><span class=\"kwd\">my</span><span class=\"pln\"> text</span><span class=\"pun\">&lt;/</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n         </span><span class=\"pun\">&lt;/</span><span class=\"typ\">View</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n      </span><span class=\"pun\">&lt;/</span><span class=\"typ\">View</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n   </span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">export</span><span class=\"pln\"> </span><span class=\"kwd\">default</span><span class=\"pln\"> </span><span class=\"typ\">App</span></pre>"
          ]
        },
        {
          "tag_line": "React Native - WebView (Auf Englisch)",
          "details": [
            "<p>In this chapter, we will learn how to use WebView. It is used when you want to render web page to your mobile app inline.</p>\n<h2>Using WebView</h2>\n<p>The <b>HomeContainer</b> will be a container component.</p>\n<h3>App.js</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">React</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">Component</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react'</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">WebViewExample</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'./web_view_example.js'</span><span class=\"pln\">\n\n</span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"typ\">App</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">\n      </span><span class=\"pun\">&lt;</span><span class=\"typ\">WebViewExample</span><span class=\"pun\">/&gt;</span><span class=\"pln\">\n   </span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">export</span><span class=\"pln\"> </span><span class=\"kwd\">default</span><span class=\"pln\"> </span><span class=\"typ\">App</span><span class=\"pun\">;</span></pre>\n<p>Let us create a new file called <b>WebViewExample.js</b> inside the <b>src/components/home</b> folder.</p>\n<h3>web_view_example.js</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">React</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">Component</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react'</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">View</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">WebView</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">StyleSheet</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\">\n\n</span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react-native'</span><span class=\"pln\">\n</span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"typ\">WebViewExample</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">\n      </span><span class=\"pun\">&lt;</span><span class=\"typ\">View</span><span class=\"pln\"> style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">container</span><span class=\"pun\">}&gt;</span><span class=\"pln\">\n         </span><span class=\"pun\">&lt;</span><span class=\"typ\">WebView</span><span class=\"pln\">\n         source </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{{</span><span class=\"pln\"> uri</span><span class=\"pun\">:</span><span class=\"pln\">\n         </span><span class=\"str\">'https://www.google.com/?gws_rd=cr,ssl&amp;ei=SICcV9_EFqqk6ASA3ZaABA#q=tutorialspoint'</span><span class=\"pln\"> </span><span class=\"pun\">}}</span><span class=\"pln\">\n         </span><span class=\"pun\">/&gt;</span><span class=\"pln\">\n      </span><span class=\"pun\">&lt;/</span><span class=\"typ\">View</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n   </span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">export</span><span class=\"pln\"> </span><span class=\"kwd\">default</span><span class=\"pln\"> </span><span class=\"typ\">WebViewExample</span><span class=\"pun\">;</span><span class=\"pln\">\n\n</span><span class=\"kwd\">const</span><span class=\"pln\"> styles </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">StyleSheet</span><span class=\"pun\">.</span><span class=\"pln\">create</span><span class=\"pun\">({</span><span class=\"pln\">\n   container</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      height</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">350</span><span class=\"pun\">,</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">})</span></pre>"
          ]
        },
        {
          "tag_line": "React Native - Modal (Auf Englisch)",
          "details": [
            "<p>In this chapter, we will show you how to use the modal component in React Native.</p>\n<p>Let us now create a new file: <b>ModalExample.js</b></p>\n<p>We will put logic inside <b>ModalExample</b>. We can update the initial state by running the <b>toggleModal</b>.</p>\n<p>After updating the initial state by running the <b>toggleModal</b>, we will set the <b>visible</b> property to our modal. This prop will be updated when the state changes.</p>\n<p>The <b>onRequestClose</b> is required for Android devices.</p>\n<h2>App.js</h2>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">React</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">Component</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react'</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">WebViewExample</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'./modal_example.js'</span><span class=\"pln\">\n\n</span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"typ\">Home</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">\n      </span><span class=\"pun\">&lt;</span><span class=\"typ\">WebViewExample</span><span class=\"pun\">/&gt;</span><span class=\"pln\">\n   </span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">export</span><span class=\"pln\"> </span><span class=\"kwd\">default</span><span class=\"pln\"> </span><span class=\"typ\">Home</span><span class=\"pun\">;</span></pre>\n<h2>modal_example.js</h2>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">React</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">Component</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react'</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">Modal</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Text</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">TouchableHighlight</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">View</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">StyleSheet</span><span class=\"pun\">}</span><span class=\"pln\">\n\n</span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react-native'</span><span class=\"pln\">\n</span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">ModalExample</span><span class=\"pln\"> </span><span class=\"kwd\">extends</span><span class=\"pln\"> </span><span class=\"typ\">Component</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   state </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      modalVisible</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n   toggleModal</span><span class=\"pun\">(</span><span class=\"pln\">visible</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">setState</span><span class=\"pun\">({</span><span class=\"pln\"> modalVisible</span><span class=\"pun\">:</span><span class=\"pln\"> visible </span><span class=\"pun\">});</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n   render</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">\n         </span><span class=\"pun\">&lt;</span><span class=\"typ\">View</span><span class=\"pln\"> style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">container</span><span class=\"pun\">}&gt;</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;</span><span class=\"typ\">Modal</span><span class=\"pln\"> animationType </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"str\">\"slide\"</span><span class=\"pun\">}</span><span class=\"pln\"> transparent </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"kwd\">false</span><span class=\"pun\">}</span><span class=\"pln\">\n               visible </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">state</span><span class=\"pun\">.</span><span class=\"pln\">modalVisible</span><span class=\"pun\">}</span><span class=\"pln\">\n               onRequestClose </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\"Modal has been closed.\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"pun\">}&gt;</span><span class=\"pln\">\n               \n               </span><span class=\"pun\">&lt;</span><span class=\"typ\">View</span><span class=\"pln\"> style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">modal</span><span class=\"pun\">}&gt;</span><span class=\"pln\">\n                  </span><span class=\"pun\">&lt;</span><span class=\"typ\">Text</span><span class=\"pln\"> style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">text</span><span class=\"pun\">}&gt;</span><span class=\"typ\">Modal</span><span class=\"pln\"> </span><span class=\"kwd\">is</span><span class=\"pln\"> open</span><span class=\"pun\">!&lt;/</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n                  \n                  </span><span class=\"pun\">&lt;</span><span class=\"typ\">TouchableHighlight</span><span class=\"pln\"> onPress </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n                     </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">toggleModal</span><span class=\"pun\">(!</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">state</span><span class=\"pun\">.</span><span class=\"pln\">modalVisible</span><span class=\"pun\">)}}&gt;</span><span class=\"pln\">\n                     \n                     </span><span class=\"pun\">&lt;</span><span class=\"typ\">Text</span><span class=\"pln\"> style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">text</span><span class=\"pun\">}&gt;</span><span class=\"typ\">Close</span><span class=\"pln\"> </span><span class=\"typ\">Modal</span><span class=\"pun\">&lt;/</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n                  </span><span class=\"pun\">&lt;/</span><span class=\"typ\">TouchableHighlight</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n               </span><span class=\"pun\">&lt;/</span><span class=\"typ\">View</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;/</span><span class=\"typ\">Modal</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n            \n            </span><span class=\"pun\">&lt;</span><span class=\"typ\">TouchableHighlight</span><span class=\"pln\"> onPress </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">toggleModal</span><span class=\"pun\">(</span><span class=\"kwd\">true</span><span class=\"pun\">)}}&gt;</span><span class=\"pln\">\n               </span><span class=\"pun\">&lt;</span><span class=\"typ\">Text</span><span class=\"pln\"> style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">text</span><span class=\"pun\">}&gt;</span><span class=\"typ\">Open</span><span class=\"pln\"> </span><span class=\"typ\">Modal</span><span class=\"pun\">&lt;/</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;/</span><span class=\"typ\">TouchableHighlight</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n         </span><span class=\"pun\">&lt;/</span><span class=\"typ\">View</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n      </span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">export</span><span class=\"pln\"> </span><span class=\"kwd\">default</span><span class=\"pln\"> </span><span class=\"typ\">ModalExample</span><span class=\"pln\">\n\n</span><span class=\"kwd\">const</span><span class=\"pln\"> styles </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">StyleSheet</span><span class=\"pun\">.</span><span class=\"pln\">create </span><span class=\"pun\">({</span><span class=\"pln\">\n   container</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      alignItems</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'center'</span><span class=\"pun\">,</span><span class=\"pln\">\n      backgroundColor</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'#ede3f2'</span><span class=\"pun\">,</span><span class=\"pln\">\n      padding</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">100</span><span class=\"pln\">\n   </span><span class=\"pun\">},</span><span class=\"pln\">\n   modal</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      flex</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\">\n      alignItems</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'center'</span><span class=\"pun\">,</span><span class=\"pln\">\n      backgroundColor</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'#f7021a'</span><span class=\"pun\">,</span><span class=\"pln\">\n      padding</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">100</span><span class=\"pln\">\n   </span><span class=\"pun\">},</span><span class=\"pln\">\n   text</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      color</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'#3f2949'</span><span class=\"pun\">,</span><span class=\"pln\">\n      marginTop</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">10</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">})</span></pre>"
          ]
        },
        {
          "tag_line": "React Native - ActivityIndicator (Auf Englisch)",
          "details": [
            "<p>In this chapter we will show you how to use the activity indicator in React Native.</p>\n<h2>Step 1: App</h2>\n<p><b>App</b> component will be used to import and show our <b>ActivityIndicator</b>.</p>\n<h3>App.js</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">React</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react'</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">ActivityIndicatorExample</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'./activity_indicator_example.js'</span><span class=\"pln\">\n\n</span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"typ\">Home</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">\n      </span><span class=\"pun\">&lt;</span><span class=\"typ\">ActivityIndicatorExample</span><span class=\"pln\"> </span><span class=\"pun\">/&gt;</span><span class=\"pln\">\n   </span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">export</span><span class=\"pln\"> </span><span class=\"kwd\">default</span><span class=\"pln\"> </span><span class=\"typ\">Home</span></pre>\n<h2>Step 2: ActivityIndicatorExample</h2>\n<p>Animating property is a Boolean which is used for showing the activity indicator. The latter closes six seconds after the component is mounted. This is done using the <b>closeActivityIndicator()</b> function.</p>\n<h3>activity_indicator_example.js</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">React</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">Component</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react'</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">ActivityIndicator</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">View</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Text</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">TouchableOpacity</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">StyleSheet</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react-native'</span><span class=\"pun\">;</span><span class=\"pln\">\n\n</span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">ActivityIndicatorExample</span><span class=\"pln\"> </span><span class=\"kwd\">extends</span><span class=\"pln\"> </span><span class=\"typ\">Component</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   state </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> animating</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\">\n   \n   closeActivityIndicator </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> setTimeout</span><span class=\"pun\">(()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">setState</span><span class=\"pun\">({</span><span class=\"pln\">\n   animating</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pln\"> </span><span class=\"pun\">}),</span><span class=\"pln\"> </span><span class=\"lit\">60000</span><span class=\"pun\">)</span><span class=\"pln\">\n   \n   componentDidMount </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">closeActivityIndicator</span><span class=\"pun\">()</span><span class=\"pln\">\n   render</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">const</span><span class=\"pln\"> animating </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">state</span><span class=\"pun\">.</span><span class=\"pln\">animating\n      </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">\n         </span><span class=\"pun\">&lt;</span><span class=\"typ\">View</span><span class=\"pln\"> style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">container</span><span class=\"pun\">}&gt;</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;</span><span class=\"typ\">ActivityIndicator</span><span class=\"pln\">\n               animating </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">animating</span><span class=\"pun\">}</span><span class=\"pln\">\n               color </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">'#bc2b78'</span><span class=\"pln\">\n               size </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"large\"</span><span class=\"pln\">\n               style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">activityIndicator</span><span class=\"pun\">}/&gt;</span><span class=\"pln\">\n         </span><span class=\"pun\">&lt;/</span><span class=\"typ\">View</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n      </span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">export</span><span class=\"pln\"> </span><span class=\"kwd\">default</span><span class=\"pln\"> </span><span class=\"typ\">ActivityIndicatorExample</span><span class=\"pln\">\n\n</span><span class=\"kwd\">const</span><span class=\"pln\"> styles </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">StyleSheet</span><span class=\"pun\">.</span><span class=\"pln\">create </span><span class=\"pun\">({</span><span class=\"pln\">\n   container</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      flex</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\">\n      justifyContent</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'center'</span><span class=\"pun\">,</span><span class=\"pln\">\n      alignItems</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'center'</span><span class=\"pun\">,</span><span class=\"pln\">\n      marginTop</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">70</span><span class=\"pln\">\n   </span><span class=\"pun\">},</span><span class=\"pln\">\n   activityIndicator</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      flex</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\">\n      justifyContent</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'center'</span><span class=\"pun\">,</span><span class=\"pln\">\n      alignItems</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'center'</span><span class=\"pun\">,</span><span class=\"pln\">\n      height</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">80</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">})</span></pre>"
          ]
        },
        {
          "tag_line": "React Native - Picker (Auf Englisch)",
          "details": [
            "<p>In this chapter, we will create simple Picker with two available options.</p>\n<h2>Step 1: Create File</h2>\n<p>Here, the <b>App.js</b> folder will be used as a presentational component.</p>\n<h3>App.js</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">React</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react'</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">PickerExample</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'./PickerExample.js'</span><span class=\"pln\">\n\n</span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"typ\">App</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">\n      </span><span class=\"pun\">&lt;</span><span class=\"typ\">PickerExample</span><span class=\"pln\"> </span><span class=\"pun\">/&gt;</span><span class=\"pln\">\n   </span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">export</span><span class=\"pln\"> </span><span class=\"kwd\">default</span><span class=\"pln\"> </span><span class=\"typ\">App</span></pre>\n<h2>Step 2: Logic</h2>\n<p><b>this.state.user</b> is used for picker control.</p>\n<p>The <b>updateUser</b> function will be triggered when a user is picked.</p>\n<h3>PickerExample.js</h3>\n<!--<img src=\"/react_native/images/react-native-picker.jpg\" alt=\"React Native Picker\" />-->\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">React</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">Component</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react'</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">View</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Text</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Picker</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">StyleSheet</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react-native'</span><span class=\"pln\">\n\n</span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">PickerExample</span><span class=\"pln\"> </span><span class=\"kwd\">extends</span><span class=\"pln\"> </span><span class=\"typ\">Component</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   state </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">user</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">''</span><span class=\"pun\">}</span><span class=\"pln\">\n   updateUser </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">user</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">setState</span><span class=\"pun\">({</span><span class=\"pln\"> user</span><span class=\"pun\">:</span><span class=\"pln\"> user </span><span class=\"pun\">})</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n   render</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">\n         </span><span class=\"pun\">&lt;</span><span class=\"typ\">View</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;</span><span class=\"typ\">Picker</span><span class=\"pln\"> selectedValue </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">state</span><span class=\"pun\">.</span><span class=\"pln\">user</span><span class=\"pun\">}</span><span class=\"pln\"> onValueChange </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">updateUser</span><span class=\"pun\">}&gt;</span><span class=\"pln\">\n               </span><span class=\"pun\">&lt;</span><span class=\"typ\">Picker</span><span class=\"pun\">.</span><span class=\"typ\">Item</span><span class=\"pln\"> label </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"Steve\"</span><span class=\"pln\"> </span><span class=\"kwd\">value</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"steve\"</span><span class=\"pln\"> </span><span class=\"pun\">/&gt;</span><span class=\"pln\">\n               </span><span class=\"pun\">&lt;</span><span class=\"typ\">Picker</span><span class=\"pun\">.</span><span class=\"typ\">Item</span><span class=\"pln\"> label </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"Ellen\"</span><span class=\"pln\"> </span><span class=\"kwd\">value</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"ellen\"</span><span class=\"pln\"> </span><span class=\"pun\">/&gt;</span><span class=\"pln\">\n               </span><span class=\"pun\">&lt;</span><span class=\"typ\">Picker</span><span class=\"pun\">.</span><span class=\"typ\">Item</span><span class=\"pln\"> label </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"Maria\"</span><span class=\"pln\"> </span><span class=\"kwd\">value</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"maria\"</span><span class=\"pln\"> </span><span class=\"pun\">/&gt;</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;/</span><span class=\"typ\">Picker</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;</span><span class=\"typ\">Text</span><span class=\"pln\"> style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">text</span><span class=\"pun\">}&gt;{</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">state</span><span class=\"pun\">.</span><span class=\"pln\">user</span><span class=\"pun\">}&lt;/</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n         </span><span class=\"pun\">&lt;/</span><span class=\"typ\">View</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n      </span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">export</span><span class=\"pln\"> </span><span class=\"kwd\">default</span><span class=\"pln\"> </span><span class=\"typ\">PickerExample</span><span class=\"pln\">\n\n</span><span class=\"kwd\">const</span><span class=\"pln\"> styles </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">StyleSheet</span><span class=\"pun\">.</span><span class=\"pln\">create</span><span class=\"pun\">({</span><span class=\"pln\">\n   text</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      fontSize</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">30</span><span class=\"pun\">,</span><span class=\"pln\">\n      alignSelf</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'center'</span><span class=\"pun\">,</span><span class=\"pln\">\n      color</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'red'</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">})</span></pre>"
          ]
        },
        {
          "tag_line": "React Native - Status Bar (Auf Englisch)",
          "details": [
            "<p>In this chapter, we will show you how to control the status bar appearance in React Native.</p>\n<p>The Status bar is easy to use and all you need to do is set properties to change it.</p>\n<p>The <b>hidden</b> property can be used to hide the status bar. In our example it is set to <b>false</b>. This is default value.</p>\n<p>The <b>barStyle</b> can have three values – <b>dark-content, light-content</b> and <b>default</b>.</p>\n<p>This component has several other properties that can be used. Some of them are Android or IOS specific. You can check it in official documentation.</p>\n<h2>App.js</h2>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">React</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">Component</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react'</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">StatusBar</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react-native'</span><span class=\"pln\">\n\n</span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"typ\">App</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">\n      </span><span class=\"pun\">&lt;</span><span class=\"typ\">StatusBar</span><span class=\"pln\"> barStyle </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"dark-content\"</span><span class=\"pln\"> hidden </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"kwd\">false</span><span class=\"pun\">}</span><span class=\"pln\"> backgroundColor </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"#00BCD4\"</span><span class=\"pln\"> translucent </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"kwd\">true</span><span class=\"pun\">}/&gt;</span><span class=\"pln\">\n   </span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">export</span><span class=\"pln\"> </span><span class=\"kwd\">default</span><span class=\"pln\"> </span><span class=\"typ\">App</span></pre>"
          ]
        },
        {
          "tag_line": "React Native - Switch (Auf Englisch)",
          "details": [
            "<p>In this chapter, we will explain the <b>Switch</b> component in a couple of steps.</p>\n<h2>Step 1: Create File</h2>\n<p>We will use the <b>HomeContainer</b> component for logic, but we need to create the presentational component.</p>\n<p>Let us now create a new file: <b>SwitchExample.js</b>.</p>\n<h2>Step 2: Logic</h2>\n<p>We are passing value from the <b>state</b> and functions for toggling switch items to <b>SwitchExample</b> component. Toggle functions will be used for updating the state.</p>\n<h3>App.js</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">React</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">Component</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react'</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">View</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react-native'</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">SwitchExample</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'./switch_example.js'</span><span class=\"pln\">\n\n</span><span class=\"kwd\">export</span><span class=\"pln\"> </span><span class=\"kwd\">default</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">HomeContainer</span><span class=\"pln\"> </span><span class=\"kwd\">extends</span><span class=\"pln\"> </span><span class=\"typ\">Component</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">constructor</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">super</span><span class=\"pun\">();</span><span class=\"pln\">\n      </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">state </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         switch1Value</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">,</span><span class=\"pln\">\n      </span><span class=\"pun\">}</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n   toggleSwitch1 </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">value</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">setState</span><span class=\"pun\">({</span><span class=\"pln\">switch1Value</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">value</span><span class=\"pun\">})</span><span class=\"pln\">\n      console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">'Switch 1 is: '</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"kwd\">value</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n   render</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">\n         </span><span class=\"pun\">&lt;</span><span class=\"typ\">View</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;</span><span class=\"typ\">SwitchExample</span><span class=\"pln\">\n            toggleSwitch1 </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">toggleSwitch1</span><span class=\"pun\">}</span><span class=\"pln\">\n            switch1Value </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">state</span><span class=\"pun\">.</span><span class=\"pln\">switch1Value</span><span class=\"pun\">}/&gt;</span><span class=\"pln\">\n         </span><span class=\"pun\">&lt;/</span><span class=\"typ\">View</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n      </span><span class=\"pun\">);</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<h2>Step 3: Presentation</h2>\n<p>Switch component takes two props. The <b>onValueChange</b> prop will trigger our toggle functions after a user presses the switch. The <b>value</b> prop is bound to the state of the <b>HomeContainer</b> component.</p>\n<h3>switch_example.js</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">React</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">Component</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react'</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">View</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Switch</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">StyleSheet</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\">\n\n</span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react-native'</span><span class=\"pln\">\n\n</span><span class=\"kwd\">export</span><span class=\"pln\"> </span><span class=\"kwd\">default</span><span class=\"pln\"> </span><span class=\"typ\">SwitchExample</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">props</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">\n      </span><span class=\"pun\">&lt;</span><span class=\"typ\">View</span><span class=\"pln\"> style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">container</span><span class=\"pun\">}&gt;</span><span class=\"pln\">\n         </span><span class=\"pun\">&lt;</span><span class=\"typ\">Switch</span><span class=\"pln\">\n         onValueChange </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">props</span><span class=\"pun\">.</span><span class=\"pln\">toggleSwitch1</span><span class=\"pun\">}</span><span class=\"pln\">\n         </span><span class=\"kwd\">value</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">props</span><span class=\"pun\">.</span><span class=\"pln\">switch1Value</span><span class=\"pun\">}/&gt;</span><span class=\"pln\">\n      </span><span class=\"pun\">&lt;/</span><span class=\"typ\">View</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n   </span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">const</span><span class=\"pln\"> styles </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">StyleSheet</span><span class=\"pun\">.</span><span class=\"pln\">create </span><span class=\"pun\">({</span><span class=\"pln\">\n   container</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      flex</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\">\n      alignItems</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'center'</span><span class=\"pun\">,</span><span class=\"pln\">\n      marginTop</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">100</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">})</span></pre>"
          ]
        },
        {
          "tag_line": "React Native - Text (Auf Englisch)",
          "details": [
            "<p>In this chapter, we will talk about <b>Text</b> component in React Native.</p>\n<p>This component can be nested and it can inherit properties from parent to child. This can be useful in many ways. We will show you example of capitalizing the first letter, styling words or parts of the text, etc.</p>\n<h2>Step 1: Create File</h2>\n<p>The file we are going to create is <b>text_example.js</b></p>\n<h2>Step 2: App.js</h2>\n<p>In this step, we will just create a simple container.</p>\n<h3>App.js</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">React</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">Component</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react'</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">TextExample</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'./text_example.js'</span><span class=\"pln\">\n\n</span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"typ\">App</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">\n      </span><span class=\"pun\">&lt;</span><span class=\"typ\">TextExample</span><span class=\"pun\">/&gt;</span><span class=\"pln\">\n   </span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">export</span><span class=\"pln\"> </span><span class=\"kwd\">default</span><span class=\"pln\"> </span><span class=\"typ\">App</span></pre>\n<h2>Step 3: Text</h2>\n<p>In this step, we will use the inheritance pattern. <b>styles.text</b> will be applied to all <b>Text</b> components.</p>\n<p>You can also notice how we set other styling properties to some parts of the text. It is important to know that all child elements have parent styles passed to them.</p>\n<h3>text_example.js</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">React</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">Component</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react'</span><span class=\"pun\">;</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">View</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Text</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Image</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">StyleSheet</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react-native'</span><span class=\"pln\">\n\n</span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"typ\">TextExample</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">\n      </span><span class=\"pun\">&lt;</span><span class=\"typ\">View</span><span class=\"pln\"> style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">container</span><span class=\"pun\">}&gt;</span><span class=\"pln\">\n         </span><span class=\"pun\">&lt;</span><span class=\"typ\">Text</span><span class=\"pln\"> style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">text</span><span class=\"pun\">}&gt;</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;</span><span class=\"typ\">Text</span><span class=\"pln\"> style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">capitalLetter</span><span class=\"pun\">}&gt;</span><span class=\"pln\">\n               L\n            </span><span class=\"pun\">&lt;/</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n            \n            </span><span class=\"pun\">&lt;</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n               orem ipsum dolor sit amet</span><span class=\"pun\">,</span><span class=\"pln\"> sed </span><span class=\"kwd\">do</span><span class=\"pln\"> eiusmod</span><span class=\"pun\">.</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;/</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n            \n            </span><span class=\"pun\">&lt;</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n               </span><span class=\"typ\">Ut</span><span class=\"pln\"> enim ad </span><span class=\"pun\">&lt;</span><span class=\"typ\">Text</span><span class=\"pln\"> style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">wordBold</span><span class=\"pun\">}&gt;</span><span class=\"pln\">minim </span><span class=\"pun\">&lt;/</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\"> veniam</span><span class=\"pun\">,</span><span class=\"pln\">\n               quis aliquip ex ea commodo consequat</span><span class=\"pun\">.</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;/</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n            \n            </span><span class=\"pun\">&lt;</span><span class=\"typ\">Text</span><span class=\"pln\"> style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">italicText</span><span class=\"pun\">}&gt;</span><span class=\"pln\">\n               </span><span class=\"typ\">Duis</span><span class=\"pln\"> aute irure dolor </span><span class=\"kwd\">in</span><span class=\"pln\"> reprehenderit </span><span class=\"kwd\">in</span><span class=\"pln\"> voluptate velit esse cillum</span><span class=\"pun\">.</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;/</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n            \n            </span><span class=\"pun\">&lt;</span><span class=\"typ\">Text</span><span class=\"pln\"> style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">textShadow</span><span class=\"pun\">}&gt;</span><span class=\"pln\">\n               </span><span class=\"typ\">Excepteur</span><span class=\"pln\"> sint occaecat cupidatat non proident</span><span class=\"pun\">,</span><span class=\"pln\"> sunt </span><span class=\"kwd\">in</span><span class=\"pln\"> culpa qui officia\n               deserunt mollit anim id est laborum</span><span class=\"pun\">.</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;/</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n         </span><span class=\"pun\">&lt;/</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n      \n      </span><span class=\"pun\">&lt;/</span><span class=\"typ\">View</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n   </span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">export</span><span class=\"pln\"> </span><span class=\"kwd\">default</span><span class=\"pln\"> </span><span class=\"typ\">TextExample</span><span class=\"pln\">\n\n</span><span class=\"kwd\">const</span><span class=\"pln\"> styles </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">StyleSheet</span><span class=\"pun\">.</span><span class=\"pln\">create </span><span class=\"pun\">({</span><span class=\"pln\">\n   container</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      alignItems</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'center'</span><span class=\"pun\">,</span><span class=\"pln\">\n      marginTop</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">100</span><span class=\"pun\">,</span><span class=\"pln\">\n      padding</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">20</span><span class=\"pln\">\n   </span><span class=\"pun\">},</span><span class=\"pln\">\n   text</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      color</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'#41cdf4'</span><span class=\"pun\">,</span><span class=\"pln\">\n   </span><span class=\"pun\">},</span><span class=\"pln\">\n   capitalLetter</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      color</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'red'</span><span class=\"pun\">,</span><span class=\"pln\">\n      fontSize</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">20</span><span class=\"pln\">\n   </span><span class=\"pun\">},</span><span class=\"pln\">\n   wordBold</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      fontWeight</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'bold'</span><span class=\"pun\">,</span><span class=\"pln\">\n      color</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'black'</span><span class=\"pln\">\n   </span><span class=\"pun\">},</span><span class=\"pln\">\n   italicText</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      color</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'#37859b'</span><span class=\"pun\">,</span><span class=\"pln\">\n      fontStyle</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'italic'</span><span class=\"pln\">\n   </span><span class=\"pun\">},</span><span class=\"pln\">\n   textShadow</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      textShadowColor</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'red'</span><span class=\"pun\">,</span><span class=\"pln\">\n      textShadowOffset</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> width</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">,</span><span class=\"pln\"> height</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pln\"> </span><span class=\"pun\">},</span><span class=\"pln\">\n      textShadowRadius </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">5</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">})</span></pre>"
          ]
        },
        {
          "tag_line": "React Native - Alert (Auf Englisch)",
          "details": [
            "<p>In this chapter, we will understand how to create custom <b>Alert</b> component.</p>\n<h2>Step 1: App.js</h2>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">React</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react'</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">AlertExample</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'./alert_example.js'</span><span class=\"pln\">\n\n</span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"typ\">App</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">\n      </span><span class=\"pun\">&lt;</span><span class=\"typ\">AlertExample</span><span class=\"pln\"> </span><span class=\"pun\">/&gt;</span><span class=\"pln\">\n   </span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">export</span><span class=\"pln\"> </span><span class=\"kwd\">default</span><span class=\"pln\"> </span><span class=\"typ\">App</span></pre>\n<h2>Step 2: alert_example.js</h2>\n<p>We will create a button for triggering the <b>showAlert</b> function.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">React</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react'</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">Alert</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Text</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">TouchableOpacity</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">StyleSheet</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react-native'</span><span class=\"pln\">\n\n</span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"typ\">AlertExample</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">const</span><span class=\"pln\"> showAlert </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;{</span><span class=\"pln\">\n      </span><span class=\"typ\">Alert</span><span class=\"pun\">.</span><span class=\"pln\">alert</span><span class=\"pun\">(</span><span class=\"pln\">\n         </span><span class=\"str\">'You need to...'</span><span class=\"pln\">\n      </span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n   </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">\n      </span><span class=\"pun\">&lt;</span><span class=\"typ\">TouchableOpacity</span><span class=\"pln\"> onPress </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">showAlert</span><span class=\"pun\">}</span><span class=\"pln\"> style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">button</span><span class=\"pun\">}&gt;</span><span class=\"pln\">\n         </span><span class=\"pun\">&lt;</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"typ\">Alert</span><span class=\"pun\">&lt;/</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n      </span><span class=\"pun\">&lt;/</span><span class=\"typ\">TouchableOpacity</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n   </span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">export</span><span class=\"pln\"> </span><span class=\"kwd\">default</span><span class=\"pln\"> </span><span class=\"typ\">AlertExample</span><span class=\"pln\">\n\n</span><span class=\"kwd\">const</span><span class=\"pln\"> styles </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">StyleSheet</span><span class=\"pun\">.</span><span class=\"pln\">create </span><span class=\"pun\">({</span><span class=\"pln\">\n   button</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      backgroundColor</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'#4ba37b'</span><span class=\"pun\">,</span><span class=\"pln\">\n      width</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">100</span><span class=\"pun\">,</span><span class=\"pln\">\n      borderRadius</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">50</span><span class=\"pun\">,</span><span class=\"pln\">\n      alignItems</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'center'</span><span class=\"pun\">,</span><span class=\"pln\">\n      marginTop</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">100</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">})</span></pre>"
          ]
        },
        {
          "tag_line": "React Native - Geolocation (Auf Englisch)",
          "details": [
            "<p>In this chapter, we will show you how to use <b>Geolocation</b>.</p>\n<h2>Step 1: App.js</h2>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">React</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react'</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">GeolocationExample</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'./geolocation_example.js'</span><span class=\"pln\">\n\n</span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"typ\">App</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">\n      </span><span class=\"pun\">&lt;</span><span class=\"typ\">GeolocationExample</span><span class=\"pln\"> </span><span class=\"pun\">/&gt;</span><span class=\"pln\">\n   </span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">export</span><span class=\"pln\"> </span><span class=\"kwd\">default</span><span class=\"pln\"> </span><span class=\"typ\">App</span></pre>\n<h2>Step 2: Geolocation</h2>\n<p>We will start by setting up the initial state for that will hold the initial and the last position.</p>\n<p>Now, we need to get current position of the device when a component is mounted using the <b>navigator.geolocation.getCurrentPosition</b>. We will stringify the response so we can update the state.</p>\n<p><b>navigator.geolocation.watchPosition</b> is used for tracking the users’ position. We also clear the watchers in this step.</p>\n<h3>AsyncStorageExample.js</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">React</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">Component</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react'</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">View</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Text</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Switch</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">StyleSheet</span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react-native'</span><span class=\"pln\">\n\n</span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">SwichExample</span><span class=\"pln\"> </span><span class=\"kwd\">extends</span><span class=\"pln\"> </span><span class=\"typ\">Component</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   state </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      initialPosition</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'unknown'</span><span class=\"pun\">,</span><span class=\"pln\">\n      lastPosition</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'unknown'</span><span class=\"pun\">,</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n   watchID</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">?</span><span class=\"pln\">number </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">null</span><span class=\"pun\">;</span><span class=\"pln\">\n   componentDidMount </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      navigator</span><span class=\"pun\">.</span><span class=\"pln\">geolocation</span><span class=\"pun\">.</span><span class=\"pln\">getCurrentPosition</span><span class=\"pun\">(</span><span class=\"pln\">\n         </span><span class=\"pun\">(</span><span class=\"pln\">position</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n            </span><span class=\"kwd\">const</span><span class=\"pln\"> initialPosition </span><span class=\"pun\">=</span><span class=\"pln\"> JSON</span><span class=\"pun\">.</span><span class=\"pln\">stringify</span><span class=\"pun\">(</span><span class=\"pln\">position</span><span class=\"pun\">);</span><span class=\"pln\">\n            </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">setState</span><span class=\"pun\">({</span><span class=\"pln\"> initialPosition </span><span class=\"pun\">});</span><span class=\"pln\">\n         </span><span class=\"pun\">},</span><span class=\"pln\">\n         </span><span class=\"pun\">(</span><span class=\"pln\">error</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> alert</span><span class=\"pun\">(</span><span class=\"pln\">error</span><span class=\"pun\">.</span><span class=\"pln\">message</span><span class=\"pun\">),</span><span class=\"pln\">\n         </span><span class=\"pun\">{</span><span class=\"pln\"> enableHighAccuracy</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span><span class=\"pln\"> timeout</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">20000</span><span class=\"pun\">,</span><span class=\"pln\"> maximumAge</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">1000</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\">\n      </span><span class=\"pun\">);</span><span class=\"pln\">\n      </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">watchID </span><span class=\"pun\">=</span><span class=\"pln\"> navigator</span><span class=\"pun\">.</span><span class=\"pln\">geolocation</span><span class=\"pun\">.</span><span class=\"pln\">watchPosition</span><span class=\"pun\">((</span><span class=\"pln\">position</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         </span><span class=\"kwd\">const</span><span class=\"pln\"> lastPosition </span><span class=\"pun\">=</span><span class=\"pln\"> JSON</span><span class=\"pun\">.</span><span class=\"pln\">stringify</span><span class=\"pun\">(</span><span class=\"pln\">position</span><span class=\"pun\">);</span><span class=\"pln\">\n         </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">setState</span><span class=\"pun\">({</span><span class=\"pln\"> lastPosition </span><span class=\"pun\">});</span><span class=\"pln\">\n      </span><span class=\"pun\">});</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n   componentWillUnmount </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      navigator</span><span class=\"pun\">.</span><span class=\"pln\">geolocation</span><span class=\"pun\">.</span><span class=\"pln\">clearWatch</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">watchID</span><span class=\"pun\">);</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n   render</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">\n         </span><span class=\"pun\">&lt;</span><span class=\"typ\">View</span><span class=\"pln\"> style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">container</span><span class=\"pun\">}&gt;</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;</span><span class=\"typ\">Text</span><span class=\"pln\"> style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">boldText</span><span class=\"pun\">}&gt;</span><span class=\"pln\">\n               </span><span class=\"typ\">Initial</span><span class=\"pln\"> position</span><span class=\"pun\">:</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;/</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n            \n            </span><span class=\"pun\">&lt;</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n               </span><span class=\"pun\">{</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">state</span><span class=\"pun\">.</span><span class=\"pln\">initialPosition</span><span class=\"pun\">}</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;/</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n            \n            </span><span class=\"pun\">&lt;</span><span class=\"typ\">Text</span><span class=\"pln\"> style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">boldText</span><span class=\"pun\">}&gt;</span><span class=\"pln\">\n               </span><span class=\"typ\">Current</span><span class=\"pln\"> position</span><span class=\"pun\">:</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;/</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n            \n            </span><span class=\"pun\">&lt;</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n               </span><span class=\"pun\">{</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">state</span><span class=\"pun\">.</span><span class=\"pln\">lastPosition</span><span class=\"pun\">}</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;/</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n         </span><span class=\"pun\">&lt;/</span><span class=\"typ\">View</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n      </span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">export</span><span class=\"pln\"> </span><span class=\"kwd\">default</span><span class=\"pln\"> </span><span class=\"typ\">SwichExample</span><span class=\"pln\">\n\n</span><span class=\"kwd\">const</span><span class=\"pln\"> styles </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">StyleSheet</span><span class=\"pun\">.</span><span class=\"pln\">create </span><span class=\"pun\">({</span><span class=\"pln\">\n   container</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      flex</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\">\n      alignItems</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'center'</span><span class=\"pun\">,</span><span class=\"pln\">\n      marginTop</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">50</span><span class=\"pln\">\n   </span><span class=\"pun\">},</span><span class=\"pln\">\n   boldText</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      fontSize</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">30</span><span class=\"pun\">,</span><span class=\"pln\">\n      color</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'red'</span><span class=\"pun\">,</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">})</span></pre>"
          ]
        },
        {
          "tag_line": "React Native - AsyncStorage (Auf Englisch)",
          "details": [
            "\n<header id=\"header\" class=\"fixed\">\n<!-- Top sub-menu Starts Here -->\n<div class=\"mui-appbar mui-container-fulid top-menu\">\n<div class=\"mui-container\">\n<div class=\"top-menu-item home\">\n<a href=\"https://www.tutorialspoint.com/index.htm\" target=\"_blank\" title=\"TutorialsPoint - Home\"><i class=\"fal fa-home\"></i> <span>Home</span></a>\n</div>\n<div class=\"top-menu-item qa\">\n<a href=\"https://www.tutorialspoint.com/about/about_careers.htm\" target=\"_blank\" title=\"Job @ Tutorials Point\"><i class=\"fa fa-suitcase\"></i> <span>Jobs</span></a>\n</div>\n<div class=\"top-menu-item tools\">\n<a href=\"https://www.tutorialspoint.com/online_dev_tools.htm\" target=\"_blank\" title=\"Tools - Online Development and Testing Tools\"><i class=\"fal fa-cogs\"></i> <span>Tools</span></a>\n</div>\n<div class=\"top-menu-item coding-ground\">\n<a href=\"https://www.tutorialspoint.com/codingground.htm\" target=\"_blank\" title=\"Coding Ground - Free Online IDE and Terminal\"><i class=\"fal fa-code\"></i> <span>Coding Ground </span></a> \n</div>\n<div class=\"top-menu-item current-affairs\">\n<a href=\"https://www.tutorialspoint.com/current_affairs.htm\" target=\"_blank\" title=\"Daily Current Affairs\"><i class=\"fal fa-layer-plus\"></i> <span>Current Affairs</span></a>\n</div>\n<div class=\"top-menu-item upsc-notes\">\n<a href=\"https://www.tutorialspoint.com/upsc_ias_exams.htm\" target=\"_blank\" title=\"UPSC IAS Exams Notes - TutorialsPoint\"><i class=\"fal fa-user-tie\"></i> <span>UPSC Notes</span></a>\n</div>      \n<div class=\"top-menu-item online-tutoris\">\n<a href=\"https://www.tutorialspoint.com/tutor_connect/index.php\" target=\"_blank\" title=\"Top Online Tutors - Tutor Connect\"><i class=\"fal fa-user\"></i> <span>Online Tutors</span></a>\n</div>\n<div class=\"top-menu-item whiteboard\">\n<a href=\"https://www.tutorialspoint.com/whiteboard.htm\" target=\"_blank\" title=\"Free Online Whiteboard\"><i class=\"fal fa-chalkboard\"></i> <span>Whiteboard</span></a>\n</div>\n<div class=\"top-menu-item net-meeting\">\n<a href=\"https://www.tutorialspoint.com/netmeeting.php\" target=\"_blank\" title=\"A free tool for online video conferencing\"><i class=\"fal fa-chalkboard-teacher\"></i> <span>Net Meeting</span></a> \n</div>\n<div class=\"top-menu-item articles\">\n<a href=\"https://www.tutorix.com\" target=\"_blank\" title=\"Tutorx - The Best Learning App\" rel=\"nofollow\"><i class=\"fal fa-video\"></i> <span>Tutorix</span></a> \n</div>        \n<div class=\"social-menu-item\">\n<a href=\"https://www.facebook.com/tutorialspointindia\" target=\"_blank\" rel=\"nofollow\" data-placement=\"bottom\" title=\"tutorialspoint @ Facebook\"><i class=\"fab fa-facebook-f\"></i></a> \n<a href=\"https://www.twitter.com/tutorialspoint\" target=\"_blank\" rel=\"nofollow\" data-placement=\"bottom\" title=\"tutorialspoint @ Twitter\"><i class=\"fab fa-twitter\"></i></a>\n<a href=\"https://www.linkedin.com/company/tutorialspoint\" target=\"_blank\" rel=\"nofollow\" data-placement=\"bottom\" title=\"tutorialspoint @ Linkedin\"><i class=\"fab fa-linkedin-in\"></i></a>\n<a href=\"https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg\" target=\"_blank\" rel=\"nofollow\" data-placement=\"bottom\" title=\"tutorialspoint YouTube\"><i class=\"fab fa-youtube\"></i></a>\n</div>        \n</div>\n</div>\n<!-- Top sub-menu Ends Here -->\n<!-- Top main-menu Starts Here -->\n<div class=\"mui-appbar mui-container-fulid mui--appbar-line-height mui--z1 sticky\" id=\"logo-menu\">\n<div class=\"mui-container\">\n<div class=\"left-menu\">\n<a href=\"https://www.tutorialspoint.com/index.htm\" title=\"Tutorialspoint\">\n<img class=\"tp-logo\" alt=\"tutorialspoint\" src=\"/react_native/images/logo.png\">\n</a>\n<div class=\"mui-dropdown\">\n<a class=\"mui-btn mui-btn--primary categories\" data-mui-toggle=\"dropdown\"><i class=\"fa fa-th-large\"></i> \n<span>Categories <span class=\"mui-caret\"></span></span></a>            \n<ul class=\"mui-dropdown__menu cat-menu\">\n<li>\n<ul>\n<li><a href=\"/academic_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Academic Tutorials</a></li>\n<li><a href=\"/big_data_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Big Data &amp; Analytics </a></li>\n<li><a href=\"/computer_programming_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Computer Programming </a></li>\n<li><a href=\"/computer_science_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Computer Science </a></li>\n<li><a href=\"/database_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Databases </a></li>\n<li><a href=\"/devops_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> DevOps </a></li>\n<li><a href=\"/digital_marketing_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Digital Marketing </a></li>\n<li><a href=\"/engineering_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Engineering Tutorials </a></li>\n<li><a href=\"/upsc_ias_exams.htm\"><i class=\"fa fa-caret-right\"></i> Exams Syllabus </a></li>\n<li><a href=\"/famous_monuments.htm\"><i class=\"fa fa-caret-right\"></i> Famous Monuments </a></li>\n<li><a href=\"/gate_exams_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> GATE Exams Tutorials</a></li>\n<li><a href=\"/latest_technologies.htm\"><i class=\"fa fa-caret-right\"></i> Latest Technologies </a></li>\n<li><a href=\"/machine_learning_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Machine Learning </a></li>\n<li><a href=\"/mainframe_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Mainframe Development </a></li>\n<li><a href=\"/management_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Management Tutorials </a></li>\n<li><a href=\"/maths_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Mathematics Tutorials</a></li>\n<li><a href=\"/microsoft_technologies_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Microsoft Technologies </a></li>\n<li><a href=\"/misc_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Misc tutorials </a></li>\n<li><a href=\"/mobile_development_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Mobile Development </a></li>\n<li><a href=\"/java_technology_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Java Technologies </a></li>\n<li><a href=\"/python_technologies_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Python Technologies </a></li>\n<li><a href=\"/sap_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> SAP Tutorials </a></li>\n<li><a href=\"/scripting_lnaguage_tutorials.htm\"><i class=\"fa fa-caret-right\"></i>Programming Scripts </a></li>\n<li><a href=\"/selected_reading.htm\"><i class=\"fa fa-caret-right\"></i> Selected Reading </a></li>\n<li><a href=\"/software_quality_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Software Quality </a></li>\n<li><a href=\"/soft_skill_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Soft Skills </a></li>\n<li><a href=\"/telecom_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Telecom Tutorials </a></li>\n<li><a href=\"/upsc_ias_exams.htm\"><i class=\"fa fa-caret-right\"></i> UPSC IAS Exams </a></li>\n<li><a href=\"/web_development_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Web Development </a></li>\n<li><a href=\"/sports_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Sports Tutorials </a></li>\n<li><a href=\"/xml_technologies_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> XML Technologies </a></li>\n<li><a href=\"/multi_language_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Multi-Language</a></li>\n<li><a href=\"/questions_and_answers.htm\"><i class=\"fa fa-caret-right\"></i> Interview Questions</a></li>\n</ul>\n</li>\n</ul>\n<div class=\"clear\"></div>\n</div> \n</div>\n<div class=\"right-menu\">\n<div class=\"toc-toggle\">\n<a href=\"javascript:void(0);\"><i class=\"fa fa-bars\"></i></a>\n</div>\n<div class=\"mobile-search-btn\">\n<a href=\"https://www.tutorialspoint.com/search.htm\"><i class=\"fal fa-search\"></i></a>\n</div>\n<div class=\"search-box\">\n<form method=\"get\" class=\"\" name=\"searchform\" action=\"https://www.google.com/search\" target=\"_blank\" novalidate=\"\">\n<input type=\"hidden\" name=\"sitesearch\" value=\"www.tutorialspoint.com\" class=\"user-valid valid\">\n<input class=\"header-search-box\" type=\"text\" id=\"search-string\" name=\"q\" placeholder=\"Search your favorite tutorials...\" onfocus=\"if (this.value == 'Search your favorite tutorials...') {this.value = '';}\" onblur=\"if (this.value == '') {this.value = 'Search your favorite tutorials...';}\" autocomplete=\"off\">\n<button><i class=\"fal fa-search\"></i></button>\n</form>\n</div>\n<div class=\"menu-btn library-btn\">\n<a href=\"https://www.tutorialspoint.com/tutorialslibrary.htm\"><i class=\"fal fa-cubes\"></i> <span>Library</span></a>\n</div>\n<div class=\"menu-btn videos-btn\">\n<a href=\"https://www.tutorialspoint.com/videotutorials/index.php\"><i class=\"fal fa-video\"></i> <span>Videos</span></a> \n</div>\n<div class=\"menu-btn videos-btn\">\n<a href=\"https://www.tutorialspoint.com/questions/index.php\"><i class=\"fa fa-location-arrow\"></i> <span>Q/A</span></a>\n</div>\n<div class=\"menu-btn ebooks-btn\">\n<a href=\"https://store.tutorialspoint.com\"><i class=\"fal fa-book\"></i> <span>eBooks</span></a>\n</div>\n<div class=\"mui-dropdown\">\n<button class=\"mui-btn mui-btn--primary\" data-mui-toggle=\"dropdown\" type=\"button\">\n<span class=\"mui-caret\"></span>\n</button>\n<ul class=\"mui-dropdown__menu\">\n<li><a href=\"https://www.tutorialspoint.com/tutorialslibrary.htm\"><i class=\"fal fa-cubes\"></i> <span>Library</span></a></li>\n<li><a href=\"https://www.tutorialspoint.com/videotutorials/index.php\"><i class=\"fal fa-video\"></i> <span>Videos</span></a></li>\n<li><a href=\"https://store.tutorialspoint.com\"><i class=\"fal fa-book\"></i> <span>eBooks</span></a></li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<!-- Top main-menu Ends Here -->\n</header>\n<div class=\"mui-container-fluid content\">\n<div class=\"mui-container\">\n<!-- Tutorial ToC Starts Here -->\n<div class=\"mui-col-md-3 tutorial-toc\">\n<div class=\"mini-logo\">\n<img src=\"/react_native/images/react-native-mini-logo.jpg\" alt=\"React Native Tutorial\">\n</div>\n<ul class=\"toc chapters\">\n<li class=\"heading\">React Native Tutorial</li>\n<li><a href=\"/react_native/index.htm\">React Native - Home</a></li>\n</ul>\n<ul class=\"toc chapters\">\n<li class=\"heading\">Core Concepts</li>\n<li><a href=\"/react_native/react_native_overview.htm\">React Native - Overview</a></li>\n<li><a href=\"/react_native/react_native_environment_setup.htm\">React Native - Environment Setup</a></li>\n<li><a href=\"/react_native/react_native_app.htm\">React Native - App</a></li>\n<li><a href=\"/react_native/react_native_state.htm\">React Native - State</a></li>\n<li><a href=\"/react_native/react_native_props.htm\">React Native - Props</a></li>\n<li><a href=\"/react_native/react_native_styling.htm\">React Native - Styling</a></li>\n<li><a href=\"/react_native/react_native_flexbox.htm\">React Native - Flexbox</a></li>\n<li><a href=\"/react_native/react_native_listview.htm\">React Native - ListView</a></li>\n<li><a href=\"/react_native/react_native_text_input.htm\">React Native - Text Input</a></li>\n<li><a href=\"/react_native/react_native_scrollview.htm\">React Native - ScrollView</a></li>\n<!--<li><a href=\"/react_native/react_native_mapview.htm\">React Native - MapView</a></li>-->\n<li><a href=\"/react_native/react_native_images.htm\">React Native - Images</a></li>\n<li><a href=\"/react_native/react_native_http.htm\">React Native - HTTP</a></li>\n<!--<li><a href=\"/react_native/react_native_touches.htm\">React Native - Touches</a></li>-->\n<li><a href=\"/react_native/react_native_buttons.htm\">React Native - Buttons</a></li>\n<li><a href=\"/react_native/react_native_animations.htm\">React Native - Animations</a></li>\n<li><a href=\"/react_native/react_native_debugging.htm\">React Native - Debugging</a></li>\n<!--<li><a href=\"/react_native/react_native_navigation.htm\">React Native - Navigation</a></li>-->\n<li><a href=\"/react_native/react_native_router.htm\">React Native - Router</a></li>\n<li><a href=\"/react_native/react_native_running_ios.htm\">React Native - Running IOS</a></li>\n<li><a href=\"/react_native/react_native_running_android.htm\">React Native - Running Android</a></li>\n</ul>\n<ul class=\"toc chapters\">\n<li class=\"heading\">Components and APIs</li>\n<!--<li><a href=\"/react_native/react_native_touchablehighlight.htm\">React Native - TouchableHighlight</a></li>\n<li><a href=\"/react_native/react_native_touchableopacity.htm\">React Native - TouchableOpacity</a></li>-->\n<li><a href=\"/react_native/react_native_view.htm\">React Native - View</a></li>\n<li><a href=\"/react_native/react_native_webview.htm\">React Native - WebView</a></li>\n<li><a href=\"/react_native/react_native_modal.htm\">React Native - Modal</a></li>\n<li><a href=\"/react_native/react_native_activityindicator.htm\">React Native - ActivityIndicator</a></li>\n<li><a href=\"/react_native/react_native_picker.htm\">React Native - Picker</a></li>\n<li><a href=\"/react_native/react_native_status_bar.htm\">React Native - Status Bar</a></li>\n<li><a href=\"/react_native/react_native_switch.htm\">React Native - Switch</a></li>\n<li><a href=\"/react_native/react_native_text.htm\">React Native - Text</a></li>\n<li><a href=\"/react_native/react_native_alert.htm\">React Native - Alert</a></li>\n<li><a href=\"/react_native/react_native_geolocation.htm\">React Native - Geolocation</a></li>\n<li style=\"background-color: rgb(214, 214, 214);\"><a href=\"/react_native/react_native_asyncstorage.htm\">React Native - AsyncStorage</a></li>\n<!--<li><a href=\"/react_native/react_native_cameraroll.htm\">React Native - CameraRoll</a></li>-->\n</ul>\n<ul class=\"toc chapters\">\n<li class=\"heading\">React Native Useful Resources</li>\n<li><a href=\"/react_native/react_native_quick_guide.htm\">React Native - Quick Guide</a></li>\n<li><a href=\"/react_native/react_native_useful_resources.htm\">React Native - Useful Resources</a></li>\n<li><a href=\"/react_native/react_native_discussion.htm\">React Native - Discussion</a></li>\n</ul>\n<ul class=\"toc reading\">\n<li class=\"sreading\">Selected Reading</li>\n<li><a target=\"_top\" href=\"/upsc_ias_exams.htm\">UPSC IAS Exams Notes</a></li>\n<li><a target=\"_top\" href=\"/developers_best_practices/index.htm\">Developer's Best Practices</a></li>\n<li><a target=\"_top\" href=\"/questions_and_answers.htm\">Questions and Answers</a></li>\n<li><a target=\"_top\" href=\"/effective_resume_writing.htm\">Effective Resume Writing</a></li>\n<li><a target=\"_top\" href=\"/hr_interview_questions/index.htm\">HR Interview Questions</a></li>\n<li><a target=\"_top\" href=\"/computer_glossary.htm\">Computer Glossary</a></li>\n<li><a target=\"_top\" href=\"/computer_whoiswho.htm\">Who is Who</a></li>\n</ul>\n</div>\n<!-- Tutorial ToC Ends Here -->\n<!-- Tutorial Content Starts Here -->\n<div class=\"mui-col-md-6 tutorial-content\">\n<h1>React Native - AsyncStorage</h1>\n<hr>\n<div class=\"top-ad-heading\">Advertisements</div>\n<div style=\"text-align:center;\" class=\"google-top-ads\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\nvar width = document.getElementsByClassName(\"tutorial-content\")[0].clientWidth - 40;\ngoogle_ad_width = width;\ngoogle_ad_height = 150;\ngoogle_ad_format = width + \"x150_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"mui-container-fluid button-borders\">\n<div class=\"pre-btn\">\n<a href=\"/react_native/react_native_geolocation.htm\"><i class=\"fal fa-chevron-circle-left\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/react_native/react_native_quick_guide.htm\">Next Page <i class=\"fal fa-chevron-circle-right\"></i>&nbsp;</a>\n</div>\n</div>\n<div class=\"clearer\"></div>\n<p>In this chapter, we will show you how to persist your data using <b>AsyncStorage</b>.</p>\n<h2>Step 1: Presentation</h2>\n<p>In this step, we will create the <b>App.js</b> file.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">React</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react'</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">AsyncStorageExample</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'./async_storage_example.js'</span><span class=\"pln\">\n\n</span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"typ\">App</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">\n      </span><span class=\"pun\">&lt;</span><span class=\"typ\">AsyncStorageExample</span><span class=\"pln\"> </span><span class=\"pun\">/&gt;</span><span class=\"pln\">\n   </span><span class=\"pun\">)</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">export</span><span class=\"pln\"> </span><span class=\"kwd\">default</span><span class=\"pln\"> </span><span class=\"typ\">App</span></pre>\n<h2>Step 2: Logic</h2>\n<p><b>Name</b> from the initial state is empty string. We will update it from persistent storage when the component is mounted.</p>\n<p><b>setName</b> will take the text from our input field, save it using <b>AsyncStorage</b> and update the state.</p>\n<h3>async_storage_example.js</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">React</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">Component</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react'</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">StatusBar</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react-native'</span><span class=\"pln\">\n</span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"typ\">AsyncStorage</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Text</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">View</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">TextInput</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">StyleSheet</span><span class=\"pln\"> </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">from</span><span class=\"pln\"> </span><span class=\"str\">'react-native'</span><span class=\"pln\">\n\n</span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">AsyncStorageExample</span><span class=\"pln\"> </span><span class=\"kwd\">extends</span><span class=\"pln\"> </span><span class=\"typ\">Component</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   state </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"str\">'name'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">''</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n   componentDidMount </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"typ\">AsyncStorage</span><span class=\"pun\">.</span><span class=\"pln\">getItem</span><span class=\"pun\">(</span><span class=\"str\">'name'</span><span class=\"pun\">).</span><span class=\"kwd\">then</span><span class=\"pun\">((</span><span class=\"kwd\">value</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">setState</span><span class=\"pun\">({</span><span class=\"pln\"> </span><span class=\"str\">'name'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">value</span><span class=\"pln\"> </span><span class=\"pun\">}))</span><span class=\"pln\">\n   \n   setName </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">value</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"typ\">AsyncStorage</span><span class=\"pun\">.</span><span class=\"pln\">setItem</span><span class=\"pun\">(</span><span class=\"str\">'name'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">value</span><span class=\"pun\">);</span><span class=\"pln\">\n      </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">setState</span><span class=\"pun\">({</span><span class=\"pln\"> </span><span class=\"str\">'name'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">value</span><span class=\"pln\"> </span><span class=\"pun\">});</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n   render</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">\n         </span><span class=\"pun\">&lt;</span><span class=\"typ\">View</span><span class=\"pln\"> style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">container</span><span class=\"pun\">}&gt;</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;</span><span class=\"typ\">TextInput</span><span class=\"pln\"> style </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">styles</span><span class=\"pun\">.</span><span class=\"pln\">textInput</span><span class=\"pun\">}</span><span class=\"pln\"> autoCapitalize </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">'none'</span><span class=\"pln\">\n            onChangeText </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">setName</span><span class=\"pun\">}/&gt;</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n               </span><span class=\"pun\">{</span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">state</span><span class=\"pun\">.</span><span class=\"pln\">name</span><span class=\"pun\">}</span><span class=\"pln\">\n            </span><span class=\"pun\">&lt;/</span><span class=\"typ\">Text</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n         </span><span class=\"pun\">&lt;/</span><span class=\"typ\">View</span><span class=\"pun\">&gt;</span><span class=\"pln\">\n      </span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"kwd\">export</span><span class=\"pln\"> </span><span class=\"kwd\">default</span><span class=\"pln\"> </span><span class=\"typ\">AsyncStorageExample</span><span class=\"pln\">\n\n</span><span class=\"kwd\">const</span><span class=\"pln\"> styles </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">StyleSheet</span><span class=\"pun\">.</span><span class=\"pln\">create </span><span class=\"pun\">({</span><span class=\"pln\">\n   container</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      flex</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\">\n      alignItems</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'center'</span><span class=\"pun\">,</span><span class=\"pln\">\n      marginTop</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">50</span><span class=\"pln\">\n   </span><span class=\"pun\">},</span><span class=\"pln\">\n   textInput</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      margin</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">5</span><span class=\"pun\">,</span><span class=\"pln\">\n      height</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">100</span><span class=\"pun\">,</span><span class=\"pln\">\n      borderWidth</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\">\n      backgroundColor</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'#7685ed'</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">})</span></pre>\n<p>When we run the app, we can update the text by typing into the input field.</p>\n<!--<img src=\"/react_native/images/react-native-async-storage.jpg\" alt=\"React Native Async Storage\" />\n<p></p>\n<img src=\"/react_native/images/react-native-async-storage2.jpg\" alt=\"React Native Async Storage 2\" />\n<p></p>-->\n<img src=\"/react_native/images/react_native_asyncstorage.jpg\" alt=\"React Native AsyncStorage\">\n<div class=\"mui-container-fluid button-borders show\">\n<div class=\"pre-btn\">\n<a href=\"/react_native/react_native_geolocation.htm\"><i class=\"fal fa-chevron-circle-left\"></i> Previous Page</a>\n<a class=\"hide-on-mobile\" href=\"javascript:printPage();\"><i class=\"fa fa-print\"></i> Print Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/react_native/react_native_quick_guide.htm\">Next Page <i class=\"fal fa-chevron-circle-right\"></i>&nbsp;</a>\n</div>\n</div>\n<div class=\"google-bottom-ads\">\n<div>Advertisements</div>\n<div>\n   <div id=\"vi_bottom_ads\"><div class=\"adsbyvli\" data-ad-slot=\"vi_9013190\"></div></div>\n   <script>\n     (function() {\n     var adPos = document.getElementById('vi_bottom_ads');\n     var mobile_ad_id = \"vi_9012177\";\n     var desktop_ad_id = \"vi_9013190\";\n     var ad_id = window.innerWidth <= 768 ? mobile_ad_id : desktop_ad_id;\n     adPos.innerHTML = '<div class=\"adsbyvli\" data-ad-slot=\"' + ad_id + '\"></div>';\n     (vitag.displayInit = window.vitag.displayInit || []).push(function () {\n         viAPItag.display(ad_id);\n     });\n     }())\n   </script>\n</div>\n<div class=\"space-bottom\"></div>\n</div>\n</div>\n<!-- Tutorial Content Ends Here -->\n<!-- Right Column Starts Here -->\n<div class=\"mui-col-md-2 google-right-ads\">\n<div class=\"space-top\"></div>\n<div class=\"google-right-ad\" style=\"margin: 0px auto !important;margin-top:5px;\">\n<div class=\"adsbyvli\" data-ad-slot=\"vi_9012177\"></div>\n<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display(\"vi_9012177\")})</script>\n</div>\n<div class=\"google-right-ad\" style=\"margin-top:5px;\">\n<div class=\"adsbyvli\" data-ad-slot=\"vi_9012177\"></div>\n<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display(\"vi_9012177\")})</script>\n</div>\n<div class=\"google-right-ad\" style=\"margin-top:5px;\">\n<div class=\"adsbyvli\" data-ad-slot=\"vi_9013289\"></div>\n<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display(\"vi_9013289\")})</script>\n</div>\n<div class=\"space-bottom\" style=\"margin-bottom:15px;\"></div>\n</div>\n<!-- Right Column Ends Here -->\n</div>\n</div>\n<div class=\"clear\"></div>\n<footer id=\"footer\">\n<div class=\"mui--text-center\">\n<div class=\"mui--text-caption mui--text-light\">\n<a href=\"/index.htm\" class=\"logo\"><img class=\"img-responsive\" src=\"/images/logo-black.png\" alt=\"Tutorials Point\" title=\"Tutorials Point\"></a>\n</div>\n<ul class=\"mui-list--inline mui--text-body2 mui--text-light\">\n<li><a href=\"/about/index.htm\"><i class=\"fal fa-globe\"></i> About us</a></li>\n<li><a href=\"/about/about_terms_of_use.htm\"><i class=\"fal fa-asterisk\"></i> Terms of use</a></li>\n<li><a href=\"/about/about_privacy.htm#cookies\"> <i class=\"fal fa-shield-check\"></i> Cookies Policy</a></li>\n<li><a href=\"/about/faq.htm\"><i class=\"fal fa-question-circle\"></i> FAQ's</a></li>\n<li><a href=\"/about/about_helping.htm\"><i class=\"fal fa-hands-helping\"></i> Helping</a></li>\n<li><a href=\"/about/contact_us.htm\"><i class=\"fal fa-map-marker-alt\"></i> Contact</a></li>\n</ul>\n<div class=\"mui--text-caption mui--text-light bottom-copyright-text\">© Copyright 2019. All Rights Reserved.</div>\n</div>\n<script async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=UA-232293-17\"></script>\n<script>\nwindow.dataLayer = window.dataLayer || [];\nfunction gtag(){dataLayer.push(arguments);}\ngtag('js', new Date());\ngtag('config', 'UA-232293-6');\n</script>\n</footer>\n\n\n"
          ]
        }
      ]
    },
    {
      "title": "Ionic",
      "content": [
        {
          "tag_line": "Ionic - Cordova Integration (Auf Englisch)",
          "details": [
            "<p>Cordova offers <b>ngCordova</b>, which is set of wrappers specifically designed to work with AngularJS.</p>\n<h2>Installing ngCordova</h2>\n<p>When you the start Ionic app, you will notice that it is using <b>bower</b>. It can be used for managing ngCordova plugins. If you have bower installed skip this step, if you do not have it, then you can install it in the command prompt window.</p>\n<pre class=\"result notranslate\">C:\\Users\\Username\\Desktop\\MyApp&gt; npm install -g bower\n</pre>\n<p>Now we need to install <b>ngCordova</b>. Open your app in the command prompt window. The following example is used for the app that is located on the desktop and is named <b>MyApp</b>.</p>\n<pre class=\"result notranslate\">C:\\Users\\Username\\Desktop\\MyApp&gt; bower install ngCordova\n</pre>\n<p>Next, we need to include ngCordova to our app. Open <b>index.html</b> file and add the following scripts. It is important to add these scripts before <b>cordova.js</b> and after <b>ionic</b> scripts.</p>\n<pre class=\"result notranslate\">&lt;script src = \"lib/ngCordova/dist/ng-cordova.js\"&gt;&lt;/script&gt;\n</pre>\n<p>Now, we need to inject ngCordova as angular dependency. Open your app.js file and add the ngCordova to angular module. If you have used one of the Ionic template apps, you will notice that there is injected ionic, controllers and services. In that case, you will just add ngCordova at the end of the array.</p>\n<pre class=\"result notranslate\">angular.module('myApp', ['ngCordova'])\n</pre>\n<p>You can always check the plugins that are already installed by typing the following command. </p>\n<pre class=\"result notranslate\">C:\\Users\\Username\\Desktop\\MyApp&gt; cordova plugins ls\n</pre>\n<p>Now, we can use the Cordova plugins. You can check all the other plugins <a rel=\"nofollow\" target=\"_blank\" href=\"http://ngcordova.com/docs/plugins/\">here</a>.</p>"
          ]
        },
        {
          "tag_line": "Ionic - Cordova AdMob (Auf Englisch)",
          "details": [
            "<p>The Cordova AdMob plugin is used for integrating ads natively. We will use the <b>admobpro</b> plugin in this chapter, since the admob is deprecated.</p>\n<h2>Using AdMob</h2>\n<p>To be able to use ads in your app, you need to sign up to admob and create a banner. When you do this, you will get an <b>Ad Publisher ID.</b> Since these steps are not a part of the Ionic framework, we will not explain it here. You can follow the steps by Google support team <a rel=\"nofollow\" target=\"_blank\" href=\"https://support.google.com/admob/?hl=en#topic=2740022\">here</a>.</p>\n<p>You will also need to have android or iOS platform installed, since the cordova plugins work only on native platforms. We have already discussed how to do this in our environment setup chapter.</p>\n<p>The AdMob plugin can be installed in the command prompt window.</p>\n<pre class=\"result notranslate\">C:\\Users\\Username\\Desktop\\MyApp&gt; cordova plugin add cordova-plugin-admobpro\n</pre>\n<p>Now that we have installed the plugin, we need to check if the device is ready before we are able to use it. This is why we need to add the following code in the <b>$ionicPlatform.ready</b> function inside the <b>app.js</b>.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\"> ionic</span><span class=\"pun\">.</span><span class=\"typ\">Platform</span><span class=\"pun\">.</span><span class=\"pln\">isAndroid</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">)</span><span class=\"pln\">  </span><span class=\"pun\">{</span><span class=\"pln\"> \n   admobid </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"com\">// for Android</span><span class=\"pln\">\n      banner</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'ca-app-pub-xxx/xxx'</span><span class=\"pln\"> </span><span class=\"com\">// Change this to your Ad Unit Id for banner...</span><span class=\"pln\">\n   </span><span class=\"pun\">};</span><span class=\"pln\">\n\n   </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"typ\">AdMob</span><span class=\"pun\">)</span><span class=\"pln\"> \n      </span><span class=\"typ\">AdMob</span><span class=\"pun\">.</span><span class=\"pln\">createBanner</span><span class=\"pun\">(</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         adId</span><span class=\"pun\">:</span><span class=\"pln\">admobid</span><span class=\"pun\">.</span><span class=\"pln\">banner</span><span class=\"pun\">,</span><span class=\"pln\"> \n         position</span><span class=\"pun\">:</span><span class=\"typ\">AdMob</span><span class=\"pun\">.</span><span class=\"pln\">AD_POSITION</span><span class=\"pun\">.</span><span class=\"pln\">BOTTOM_CENTER</span><span class=\"pun\">,</span><span class=\"pln\"> \n         autoShow</span><span class=\"pun\">:</span><span class=\"kwd\">true</span><span class=\"pln\">\n      </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"pun\">);</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>"
          ]
        },
        {
          "tag_line": "Ionic - Cordova Camera (Auf Englisch)" ,
          "details": [
            "<p>The Cordova camera plugin uses the <b>native camera</b> for taking pictures or getting images from the image gallery.</p>\n<h2>Using Camera</h2>\n<p>Open your project root folder in command prompt, then download and install the Cordova camera plugin with the following command.</p>\n<pre class=\"result notranslate\">C:\\Users\\Username\\Desktop\\MyApp&gt; cordova plugin add org.apache.cordova.camera\n</pre>\n<p>Now, we will create a service for using a camera plugin. We will use the <b>AngularJS factory</b> and promise object <b>$q</b> that needs to be injected to the factory.</p>\n<h3>services.js Code</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pun\">.</span><span class=\"pln\">factory</span><span class=\"pun\">(</span><span class=\"str\">'Camera'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">$q</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      getPicture</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">options</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         </span><span class=\"kwd\">var</span><span class=\"pln\"> q </span><span class=\"pun\">=</span><span class=\"pln\"> $q</span><span class=\"pun\">.</span><span class=\"pln\">defer</span><span class=\"pun\">();</span><span class=\"pln\">\n\n         navigator</span><span class=\"pun\">.</span><span class=\"pln\">camera</span><span class=\"pun\">.</span><span class=\"pln\">getPicture</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">result</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n            q</span><span class=\"pun\">.</span><span class=\"pln\">resolve</span><span class=\"pun\">(</span><span class=\"pln\">result</span><span class=\"pun\">);</span><span class=\"pln\">\n         </span><span class=\"pun\">},</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">err</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n            q</span><span class=\"pun\">.</span><span class=\"pln\">reject</span><span class=\"pun\">(</span><span class=\"pln\">err</span><span class=\"pun\">);</span><span class=\"pln\">\n         </span><span class=\"pun\">},</span><span class=\"pln\"> options</span><span class=\"pun\">);</span><span class=\"pln\">\n\n         </span><span class=\"kwd\">return</span><span class=\"pln\"> q</span><span class=\"pun\">.</span><span class=\"pln\">promise</span><span class=\"pun\">;</span><span class=\"pln\">\n      </span><span class=\"pun\">}</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">});</span></pre>\n<p>To use this service in the app, we need to inject it to a controller as a dependency. Cordova camera API provides the <b>getPicture</b> method, which is used for taking photos using a native camera.</p>\n<p>The native camera settings can be additionally customized by passing the <b>options</b> parameter to the <b>takePicture</b> function. Copy the above-mentioned code sample to your controller to trigger this behavior. It will open the camera application and return a success callback function with the image data or error callback function with an error message. We will also need two buttons that will call the functions we are about to create and we need to show the image on the screen.</p>\n<h3>HTML Code</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"tag\">&lt;button</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"button\"</span><span class=\"pln\"> </span><span class=\"atn\">ng-click</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"takePicture()\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">Take Picture</span><span class=\"tag\">&lt;/button&gt;</span><span class=\"pln\">\n</span><span class=\"tag\">&lt;button</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"button\"</span><span class=\"pln\"> </span><span class=\"atn\">ng-click</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"getPicture()\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">Open Gallery</span><span class=\"tag\">&lt;/button&gt;</span><span class=\"pln\">\n</span><span class=\"tag\">&lt;img</span><span class=\"pln\"> </span><span class=\"atn\">ng-src</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"{{user.picture}}\"</span><span class=\"tag\">&gt;</span></pre>\n<h3>Controller Code</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pun\">.</span><span class=\"pln\">controller</span><span class=\"pun\">(</span><span class=\"str\">'MyCtrl'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">$scope</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Camera</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   $scope</span><span class=\"pun\">.</span><span class=\"pln\">takePicture </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">options</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">var</span><span class=\"pln\"> options </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         quality </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">75</span><span class=\"pun\">,</span><span class=\"pln\">\n         targetWidth</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">200</span><span class=\"pun\">,</span><span class=\"pln\">\n         targetHeight</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">200</span><span class=\"pun\">,</span><span class=\"pln\">\n         sourceType</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pln\">\n      </span><span class=\"pun\">};</span><span class=\"pln\">\n\n      </span><span class=\"typ\">Camera</span><span class=\"pun\">.</span><span class=\"pln\">getPicture</span><span class=\"pun\">(</span><span class=\"pln\">options</span><span class=\"pun\">).</span><span class=\"kwd\">then</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">imageData</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         $scope</span><span class=\"pun\">.</span><span class=\"pln\">picture </span><span class=\"pun\">=</span><span class=\"pln\"> imageData</span><span class=\"pun\">;;</span><span class=\"pln\">\n      </span><span class=\"pun\">},</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">err</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">err</span><span class=\"pun\">);</span><span class=\"pln\">\n      </span><span class=\"pun\">});</span><span class=\"pln\">\n   </span><span class=\"pun\">};</span><span class=\"pln\">\n</span><span class=\"pun\">})</span></pre>\n<p>The output will look as shown in the following screenshot.</p>\n<img src=\"/ionic/images/ionic-cordova-camera-js.jpg\" alt=\"Ionic Cordova Camera\">\n<p>If you want to use images from your gallery, the only thing you need to change is the <b>sourceType</b> method from your options parameter. This change will open a dialog popup instead of camera and allow you to choose the image you want from the device.</p>\n<p>You can see the following code, where the <b>sourceType</b> option is changed to <b>0</b>. Now, when you tap the second button, it will open the file menu from the device.</p>\n<h3>Controller Code</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pun\">.</span><span class=\"pln\">controller</span><span class=\"pun\">(</span><span class=\"str\">'MyCtrl'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">$scope</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Camera</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   $scope</span><span class=\"pun\">.</span><span class=\"pln\">getPicture </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">options</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n\t   </span><span class=\"kwd\">var</span><span class=\"pln\"> options </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         quality </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">75</span><span class=\"pun\">,</span><span class=\"pln\">\n         targetWidth</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">200</span><span class=\"pun\">,</span><span class=\"pln\">\n         targetHeight</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">200</span><span class=\"pun\">,</span><span class=\"pln\">\n         sourceType</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pln\">\n      </span><span class=\"pun\">};</span><span class=\"pln\">\n\n      </span><span class=\"typ\">Camera</span><span class=\"pun\">.</span><span class=\"pln\">getPicture</span><span class=\"pun\">(</span><span class=\"pln\">options</span><span class=\"pun\">).</span><span class=\"kwd\">then</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">imageData</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         $scope</span><span class=\"pun\">.</span><span class=\"pln\">picture </span><span class=\"pun\">=</span><span class=\"pln\"> imageData</span><span class=\"pun\">;;</span><span class=\"pln\">\n      </span><span class=\"pun\">},</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">err</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">err</span><span class=\"pun\">);</span><span class=\"pln\">\n      </span><span class=\"pun\">});</span><span class=\"pln\">\n   </span><span class=\"pun\">};</span><span class=\"pln\">  \n</span><span class=\"pun\">})</span></pre>\n<p>The output will look as shown in the following screenshot.</p>\n<img src=\"/ionic/images/ionic-cordova-camera-gallery-js.jpg\" alt=\"Ionic Cordova Camera Gallery\">\n<p>When you save the image you took, it will appear on the screen. You can style it the way you want.</p>\n<img src=\"/ionic/images/ionic-cordova-camera-image-js.jpg\" alt=\"Ionic Cordova Camera Image\">\n<p>Several other options can be used as well, some of which are given in the following table.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Parameter</th>\n<th style=\"text-align:center;\">Type</th>\n<th style=\"text-align:center;\">Details</th>     \n</tr>\n<tr>\n<td style=\"text-align:center;\">quality\n</td><td style=\"text-align:center;\">Number</td>\n<td>The quality of the image, range 0-100</td>\n</tr>\n<tr>\n<td style=\"text-align:center;\">destinationType\n</td><td style=\"text-align:center;\">Number</td>\n<td>Format of the image.</td>\n</tr>\n<tr>\n<td style=\"text-align:center;\">sourceType\n</td><td style=\"text-align:center;\">Number</td>\n<td>Used for setting the source of the picture.</td>\n</tr>\n<tr>\n<td style=\"text-align:center;\">allowEdit\n</td><td style=\"text-align:center;\">boolean</td>\n<td>Used for allowing editing of the image.</td>\n</tr>\n<tr>\n<td style=\"text-align:center;\">encodingType\n</td><td style=\"text-align:center;\">Number</td>\n<td>Value 0 will set JPEG, and value 1 will set PNG.</td>\n</tr>\n<tr>\n<td style=\"text-align:center;\">targetWidth\n</td><td style=\"text-align:center;\">Number</td>\n<td>Used for scaling image width.</td>\n</tr>\n<tr>\n<td style=\"text-align:center;\">targetHeight\n</td><td style=\"text-align:center;\">Number</td>\n<td>Used for scaling image height.</td>\n</tr>\n<tr>\n<td style=\"text-align:center;\">mediaType\n</td><td style=\"text-align:center;\">string</td>\n<td>Used for setting the media type.</td>\n</tr>\n<tr>\n<td class=\"ts\">cameraDirection\n</td><td class=\"ts\">Number</td>\n<td>Value 0 will set the back camera, and value 1 will set the front camera.</td>\n</tr>\n<tr>\n<td class=\"ts\">popoverOptions\n</td><td class=\"ts\">string</td>\n<td>IOS-only options that specify popover location in iPad.</td>\n</tr>\n<tr>\n<td style=\"text-align:center;\">saveToPhotoAlbum\n</td><td style=\"text-align:center;\">boolean</td>\n<td>Used for saving image to photo album.</td>\n</tr>\n<tr>\n<td class=\"ts\">correctOrientation\n</td><td class=\"ts\">boolean</td>\n<td>Used for correcting orientation of the captured images.</td></tr></tbody></table>"
          ]
        },
        {
          "tag_line": "Ionic - Cordova Facebook (Auf Englisch)",
          "details": [
            "<p>This plugin is used for connecting to Facebook API. Before you start integrating Facebook, you need to create a Facebook app <a rel=\"nofollow\" href=\"https://developers.facebook.com/\" target=\"_blank\">here</a>. You will create a web app and then skip the quick start screen. Then, you need to add the website platform on the <b>settings</b> page. You can use the following code snippet for the site URL while in development.</p>\n<pre class=\"result notranslate\">http://localhost:8100/\n</pre>\n<p>After that, you need to add <b>Valid OAuth redirect URIs</b> on the <b>settings/advanced</b> page. Just copy the following two URLs.</p>\n<pre class=\"result notranslate\">https://www.facebook.com/connect/login_success.html\nhttp://localhost:8100/oauthcallback.html\n</pre>\n<h2>Installing Facebook Plugin</h2>\n<p>We did all the steps above to tackle some issues that often appear when using this plugin. This plugin is hard to set up because there are a lot of steps involved and documentation doesn't cover all of them. There are also some known compatibility issues with other Cordova plugins, so we will use <b>Teleric verified plugin</b> version in our app. We will start by installing browser platform to our app from the command prompt.</p>\n<pre class=\"result notranslate\">C:\\Users\\Username\\Desktop\\MyApp&gt;ionic platform add browser\n</pre>\n<p>Next, what we need to do is to add the <b>root</b> element on top of the <b>body</b> tag in <b>index.html</b>.</p>\n<h3>index.html</h3>\n<pre class=\"result notranslate\">&lt;div id = \"fb-root\"&gt;&lt;/div&gt;\n</pre>\n<p>Now we will add Cordova Facebook plugin to our app. You need to change <b>APP_ID</b> and <b>APP_NAME</b> to match the Facebook app you created before.</p>\n<pre class=\"result notranslate\">C:\\Users\\Username\\Desktop\\MyApp&gt;cordova -d plugin add \n   https://github.com/Telerik-Verified-Plugins/Facebook/ \n   --variable APP_ID = \"123456789\" --variable APP_NAME = \"FbAppName\"\n</pre>\n<p>Now open <b>index.html</b> and add the following code after your <b>body</b> tag. Again you need to make sure that the <b>appId</b> and <b>version</b> are matching the Facebook app you created. This will ensure that Facebook SDK is loaded asynchronously without blocking the rest of the app.</p>\n<h3>index.html</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"tag\">&lt;script&gt;</span><span class=\"pln\">\n   window</span><span class=\"pun\">.</span><span class=\"pln\">fbAsyncInit </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      FB</span><span class=\"pun\">.</span><span class=\"pln\">init</span><span class=\"pun\">({</span><span class=\"pln\">\n         appId      </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'123456789'</span><span class=\"pun\">,</span><span class=\"pln\">\n         xfbml      </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pun\">,</span><span class=\"pln\">\n         version    </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'v2.4'</span><span class=\"pln\">\n      </span><span class=\"pun\">});</span><span class=\"pln\">\n   </span><span class=\"pun\">};</span><span class=\"pln\">\n\n   </span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">d</span><span class=\"pun\">,</span><span class=\"pln\"> s</span><span class=\"pun\">,</span><span class=\"pln\"> id</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">var</span><span class=\"pln\"> js</span><span class=\"pun\">,</span><span class=\"pln\"> fjs </span><span class=\"pun\">=</span><span class=\"pln\"> d</span><span class=\"pun\">.</span><span class=\"pln\">getElementsByTagName</span><span class=\"pun\">(</span><span class=\"pln\">s</span><span class=\"pun\">)[</span><span class=\"lit\">0</span><span class=\"pun\">];</span><span class=\"pln\">\n      </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">d</span><span class=\"pun\">.</span><span class=\"pln\">getElementById</span><span class=\"pun\">(</span><span class=\"pln\">id</span><span class=\"pun\">))</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"kwd\">return</span><span class=\"pun\">;}</span><span class=\"pln\">\n      js </span><span class=\"pun\">=</span><span class=\"pln\"> d</span><span class=\"pun\">.</span><span class=\"pln\">createElement</span><span class=\"pun\">(</span><span class=\"pln\">s</span><span class=\"pun\">);</span><span class=\"pln\"> js</span><span class=\"pun\">.</span><span class=\"pln\">id </span><span class=\"pun\">=</span><span class=\"pln\"> id</span><span class=\"pun\">;</span><span class=\"pln\">\n      js</span><span class=\"pun\">.</span><span class=\"pln\">src </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"//connect.facebook.net/en_US/sdk.js\"</span><span class=\"pun\">;</span><span class=\"pln\">\n      fjs</span><span class=\"pun\">.</span><span class=\"pln\">parentNode</span><span class=\"pun\">.</span><span class=\"pln\">insertBefore</span><span class=\"pun\">(</span><span class=\"pln\">js</span><span class=\"pun\">,</span><span class=\"pln\"> fjs</span><span class=\"pun\">);</span><span class=\"pln\">\n   </span><span class=\"pun\">}(</span><span class=\"pln\">document</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">'script'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">'facebook-jssdk'</span><span class=\"pun\">));</span><span class=\"pln\">\n</span><span class=\"tag\">&lt;/script&gt;</span></pre>\n<h2>Angular Service</h2>\n<p>Since we installed everything, we need to create service that will be our connection to the Facebook. These things can be done with less code inside the <b>controller</b>, but we try to follow the best practices, so we will use Angular service. The following code shows the entire service. We will explain it later.</p>\n<h3>services.js</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pun\">.</span><span class=\"pln\">service</span><span class=\"pun\">(</span><span class=\"str\">'Auth'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">$q</span><span class=\"pun\">,</span><span class=\"pln\"> $ionicLoading</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">getLoginStatus </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">var</span><span class=\"pln\"> defer </span><span class=\"pun\">=</span><span class=\"pln\"> $q</span><span class=\"pun\">.</span><span class=\"pln\">defer</span><span class=\"pun\">();</span><span class=\"pln\">\n      \n      FB</span><span class=\"pun\">.</span><span class=\"pln\">getLoginStatus</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">response</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n\t\t   </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">response</span><span class=\"pun\">.</span><span class=\"pln\">status </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"str\">\"connected\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n            console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">JSON</span><span class=\"pun\">.</span><span class=\"pln\">stringify</span><span class=\"pun\">(</span><span class=\"pln\">response</span><span class=\"pun\">));</span><span class=\"pln\">\n         </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n            console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\"Not logged in\"</span><span class=\"pun\">);</span><span class=\"pln\">\n         </span><span class=\"pun\">}</span><span class=\"pln\">\n      </span><span class=\"pun\">});</span><span class=\"pln\">\n\n      </span><span class=\"kwd\">return</span><span class=\"pln\"> defer</span><span class=\"pun\">.</span><span class=\"pln\">promise</span><span class=\"pun\">;</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n   </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">loginFacebook </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">var</span><span class=\"pln\"> defer </span><span class=\"pun\">=</span><span class=\"pln\"> $q</span><span class=\"pun\">.</span><span class=\"pln\">defer</span><span class=\"pun\">();</span><span class=\"pln\">\n\n      FB</span><span class=\"pun\">.</span><span class=\"pln\">login</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">response</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n\t\t   </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">response</span><span class=\"pun\">.</span><span class=\"pln\">status </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"str\">\"connected\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n            console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">JSON</span><span class=\"pun\">.</span><span class=\"pln\">stringify</span><span class=\"pun\">(</span><span class=\"pln\">response</span><span class=\"pun\">));</span><span class=\"pln\">\n         </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n            console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">\"Not logged in!\"</span><span class=\"pun\">);</span><span class=\"pln\">\n         </span><span class=\"pun\">}</span><span class=\"pln\">\n      </span><span class=\"pun\">});</span><span class=\"pln\">\n\n      </span><span class=\"kwd\">return</span><span class=\"pln\"> defer</span><span class=\"pun\">.</span><span class=\"pln\">promise</span><span class=\"pun\">;</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n   </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">logoutFacebook </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">var</span><span class=\"pln\"> defer </span><span class=\"pun\">=</span><span class=\"pln\"> $q</span><span class=\"pun\">.</span><span class=\"pln\">defer</span><span class=\"pun\">();</span><span class=\"pln\">\n\n      FB</span><span class=\"pun\">.</span><span class=\"pln\">logout</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">response</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"str\">'You are logged out!'</span><span class=\"pun\">);</span><span class=\"pln\">\n      </span><span class=\"pun\">});</span><span class=\"pln\">\n\n      </span><span class=\"kwd\">return</span><span class=\"pln\"> defer</span><span class=\"pun\">.</span><span class=\"pln\">promise</span><span class=\"pun\">;</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n   </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">getFacebookApi </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">var</span><span class=\"pln\"> defer </span><span class=\"pun\">=</span><span class=\"pln\"> $q</span><span class=\"pun\">.</span><span class=\"pln\">defer</span><span class=\"pun\">();</span><span class=\"pln\">\n\n      FB</span><span class=\"pun\">.</span><span class=\"pln\">api</span><span class=\"pun\">(</span><span class=\"str\">\"me/?fields = id,email\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[],</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">response</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n\t\t\n         </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">response</span><span class=\"pun\">.</span><span class=\"pln\">error</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n            console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">JSON</span><span class=\"pun\">.</span><span class=\"pln\">stringify</span><span class=\"pun\">(</span><span class=\"pln\">response</span><span class=\"pun\">.</span><span class=\"pln\">error</span><span class=\"pun\">));</span><span class=\"pln\">\n         </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n            console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">JSON</span><span class=\"pun\">.</span><span class=\"pln\">stringify</span><span class=\"pun\">(</span><span class=\"pln\">response</span><span class=\"pun\">));</span><span class=\"pln\">\n         </span><span class=\"pun\">}</span><span class=\"pln\">\n      </span><span class=\"pun\">});</span><span class=\"pln\">\n\n      </span><span class=\"kwd\">return</span><span class=\"pln\"> defer</span><span class=\"pun\">.</span><span class=\"pln\">promise</span><span class=\"pun\">;</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">});</span></pre>\n<p>In the above service, we are creating four functions. First three are self-explanatory. The fourth function is used for connecting to Facebook graph API. It will return the <b>id</b> and <b>email</b> from the Facebook user.</p>\n<p>We are creating <b>promise objects</b> to handle asynchronic JavaScript functions. Now we need to write our controller that will call those functions. We will call each function separately for better understanding, but you will probably need to mix some of them together to get the desired effect.</p>\n<h3>Controller Code</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pun\">.</span><span class=\"pln\">controller</span><span class=\"pun\">(</span><span class=\"str\">'MyCtrl'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">$scope</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Auth</span><span class=\"pun\">,</span><span class=\"pln\"> $ionicLoading</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   \n   $scope</span><span class=\"pun\">.</span><span class=\"pln\">checkLoginStatus </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      getLoginUserStatus</span><span class=\"pun\">();</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n\n   $scope</span><span class=\"pun\">.</span><span class=\"pln\">loginFacebook </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">userData</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      loginFacebookUser</span><span class=\"pun\">();</span><span class=\"pln\">\n   </span><span class=\"pun\">};</span><span class=\"pln\">\n\n   $scope</span><span class=\"pun\">.</span><span class=\"pln\">facebookAPI </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      getFacebookUserApi</span><span class=\"pun\">();</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n\n   $scope</span><span class=\"pun\">.</span><span class=\"pln\">logoutFacebook </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      logoutFacebookUser</span><span class=\"pun\">();</span><span class=\"pln\">\n   </span><span class=\"pun\">};</span><span class=\"pln\">\n\n   </span><span class=\"kwd\">function</span><span class=\"pln\"> loginFacebookUser</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"typ\">Auth</span><span class=\"pun\">.</span><span class=\"pln\">loginFacebook</span><span class=\"pun\">();</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n\n   </span><span class=\"kwd\">function</span><span class=\"pln\"> logoutFacebookUser</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"typ\">Auth</span><span class=\"pun\">.</span><span class=\"pln\">logoutFacebook</span><span class=\"pun\">();</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n\n   </span><span class=\"kwd\">function</span><span class=\"pln\"> getFacebookUserApi</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"typ\">Auth</span><span class=\"pun\">.</span><span class=\"pln\">getFacebookApi</span><span class=\"pun\">();</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n\n   </span><span class=\"kwd\">function</span><span class=\"pln\"> getLoginUserStatus</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"typ\">Auth</span><span class=\"pun\">.</span><span class=\"pln\">getLoginStatus</span><span class=\"pun\">();</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">})</span></pre>\n<p>You are probably wondering why didn't we returned <b>Auth</b> service directly from the function expressions (first four functions). The reason for this is that you will probably want to add some more behavior after the <b>Auth</b> function is returned. You might send some data to your database, change the route after login, etc. This can be easily done by using JavaScript <b>then()</b> method to handle all the asynchronous operations instead of callbacks.</p>\n<p>Now we need to allow users to interact with the app. Our HTML will contain four buttons for calling the four functions we created.</p>\n<h3>HTML Code</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"tag\">&lt;button</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"button\"</span><span class=\"pln\"> </span><span class=\"atn\">ng-click</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"loginFacebook()\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">LOG IN</span><span class=\"tag\">&lt;/button&gt;</span><span class=\"pln\">\n</span><span class=\"tag\">&lt;button</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"button\"</span><span class=\"pln\"> </span><span class=\"atn\">ng-click</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"logoutFacebook()\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">LOG OUT</span><span class=\"tag\">&lt;/button&gt;</span><span class=\"pln\">\n</span><span class=\"tag\">&lt;button</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"button\"</span><span class=\"pln\"> </span><span class=\"atn\">ng-click</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"checkLoginStatus()\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">CHECK</span><span class=\"tag\">&lt;/button&gt;</span><span class=\"pln\">\n</span><span class=\"tag\">&lt;button</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"button\"</span><span class=\"pln\"> </span><span class=\"atn\">ng-click</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"facebookAPI()\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">API</span><span class=\"tag\">&lt;/button&gt;</span></pre>\n<p>When the user taps the <b>LOG IN</b> button, the Facebook screen will appear. The user will be redirected to the app after the login is successful.</p>"
          ]
        },
        {
          "tag_line": "Ionic - Cordova InAppBrowser (Auf Englisch)",
          "details": [
            "<p>The Cordova InAppBrowser plugin is used to open external links from your app inside a web browser view. </p>\n<h2>Using Browser</h2>\n<p>It is very easy to start working with this plugin. All you need to do is to open the command prompt window and install the Cordova plugin.</p>\n<pre class=\"result notranslate\">C:\\Users\\Username\\Desktop\\MyApp&gt;cordova plugin add org.apache.cordova.inappbrowser\n</pre>\n<p>This step allows us to start using the <b>inAppBrowser</b>. We can now create a button that will lead us to some external link, and add a simple function for triggering the plugin.</p>\n<h3>HTML Code</h3>\n<pre class=\"result notranslate\">&lt;button class = \"button\" ng-click = \"openBrowser()\"&gt;OPEN BROWSER&lt;/button&gt;\n</pre>\n<h3>Controller Code</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pun\">.</span><span class=\"pln\">controller</span><span class=\"pun\">(</span><span class=\"str\">'MyCtrl'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">$scope</span><span class=\"pun\">,</span><span class=\"pln\"> $cordovaInAppBrowser</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\"> options </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      location</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'yes'</span><span class=\"pun\">,</span><span class=\"pln\">\n      clearcache</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'yes'</span><span class=\"pun\">,</span><span class=\"pln\">\n      toolbar</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">'no'</span><span class=\"pln\">\n   </span><span class=\"pun\">};</span><span class=\"pln\">\n   \n   $scope</span><span class=\"pun\">.</span><span class=\"pln\">openBrowser </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      $cordovaInAppBrowser</span><span class=\"pun\">.</span><span class=\"pln\">open</span><span class=\"pun\">(</span><span class=\"str\">'http://ngcordova.com'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">'_blank'</span><span class=\"pun\">,</span><span class=\"pln\"> options</span><span class=\"pun\">)</span><span class=\"pln\">\n\t\t\n      </span><span class=\"pun\">.</span><span class=\"kwd\">then</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"kwd\">event</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         </span><span class=\"com\">// success</span><span class=\"pln\">\n      </span><span class=\"pun\">})</span><span class=\"pln\">\n\t\t\n      </span><span class=\"pun\">.</span><span class=\"kwd\">catch</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"kwd\">event</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         </span><span class=\"com\">// error</span><span class=\"pln\">\n      </span><span class=\"pun\">});</span><span class=\"pln\">\n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">})</span></pre>\n<p>When the user taps the button the InAppBrowser will open the URL we provided.</p>\n<img src=\"/ionic/images/ionic-cordova-inappbrowser.jpg\" alt=\"Ionic Cordova InAppBrowser\">\n<p>Several other methods can be used with this plugin, some of which are in the following table.</p>\n<h3>Cordova $inAppBrowser Methods</h3>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Method</th>\n<th style=\"text-align:center;\">Parameters</th>\n<th style=\"text-align:center;\">Type</th>\n<th style=\"text-align:center;\">Details</th>     \n</tr>\n<tr>\n<td class=\"ts\">setDefaultOptions(parameter1)\n</td><td class=\"ts\">options</td>\n<td class=\"ts\">object</td>\n<td>Used to set global options for all InAppBrowsers.</td>\n</tr>\n<tr>\n<td class=\"ts\">open(parameter1, parameter2, parameter3)\n</td><td class=\"ts\">URL, target, options</td>\n<td class=\"ts\">string, string, object</td>\n<td>There are three targets available. <b>_blank</b> will open new inAppBrowser instance. <b>_system</b> will open system browser and <b>_self</b> will use current browser instance.</td>\n</tr>\n<tr>\n<td class=\"ts\">close\n</td><td class=\"ts\">/</td>\n<td class=\"ts\">/</td>\n<td>Used to close InAppBrowser.</td>\n</tr>\n</tbody></table>\n<h3>Cordova InAppBrowser Events</h3>\n<p>This plugin also offers events that can be combined with <b>$rootScope</b>.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Example</th>\n<th style=\"text-align:center;\">Details</th>     \n</tr>\n<tr>\n<td class=\"ts\">$rootScope.$on('$cordovaInAppBrowser:loadstart', function(e, event));\n</td><td>Called when inAppBrowser start loading the page.</td>\n</tr>\n<tr>\n<td class=\"ts\">$rootScope.$on('$cordovaInAppBrowser:loadstop', function(e, event));\n</td><td>Called when inAppBrowser has finished loading the page.</td>\n</tr>\n<tr>\n<td class=\"ts\">$rootScope.$on('$cordovaInAppBrowser:loaderror', function(e, event));\n</td><td>Called when inAppBrowser has encountered error.</td>\n</tr>\n<tr>\n<td class=\"ts\">$rootScope.$on('$cordovaInAppBrowser:exit', function(e, event));\n</td><td>Called when inAppBrowser window is closed.</td></tr></tbody></table>"
          ]
        },
        {
          "tag_line": "Ionic - Cordova Native Audio (Auf Englisch) ",
          "details": [
            "<p>This plugin is used for adding native audio sounds to the Ionic app.</p>\n<h2>Using Native Audio</h2>\n<p>To be able to use this plugin, we first need to install it. Open the command prompt window and add the Cordova plugin.</p>\n<pre class=\"result notranslate\">C:\\Users\\Username\\Desktop\\MyApp&gt;cordova plugin add cordova-plugin-nativeaudio\n</pre>\n<p>Before we start using this plugin, we will need audio file. For simplicity, we will save our <b>click.mp3</b> file inside the <b>js</b> folder, but you can place it wherever you want.</p>\n<p>The next step is to preload the audio file. There are two options available, which are −</p>\n<ul class=\"list\">\n<li><p><b>preloadSimple</b> − It is used for simple sounds that will be played once.</p></li>\n<li><p><b>preloadComplex</b> − It is for sounds that will be played as looping sounds or background audio.</p></li>\n</ul>\n<p>Add the following code to your controller to preload an audio file. We need to be sure that the Ionic platform is loaded before we can preload the audio file.</p>\n<h3>Controller Code</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">$ionicPlatform</span><span class=\"pun\">.</span><span class=\"pln\">ready</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   $cordovaNativeAudio\n   </span><span class=\"pun\">.</span><span class=\"pln\">preloadSimple</span><span class=\"pun\">(</span><span class=\"str\">'click'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">'js/click.mp3'</span><span class=\"pun\">)</span><span class=\"pln\">\n\t\n   </span><span class=\"pun\">.</span><span class=\"kwd\">then</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">msg</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">msg</span><span class=\"pun\">);</span><span class=\"pln\">\n   </span><span class=\"pun\">},</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">error</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">error</span><span class=\"pun\">);</span><span class=\"pln\">\n   </span><span class=\"pun\">});</span><span class=\"pln\">\n\n   $cordovaNativeAudio</span><span class=\"pun\">.</span><span class=\"pln\">preloadComplex</span><span class=\"pun\">(</span><span class=\"str\">'click'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">'js/click.mp3'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">)</span><span class=\"pln\">\n\t</span><span class=\"pun\">.</span><span class=\"kwd\">then</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">msg</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">msg</span><span class=\"pun\">);</span><span class=\"pln\">\n   </span><span class=\"pun\">},</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">error</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      console</span><span class=\"pun\">.</span><span class=\"pln\">error</span><span class=\"pun\">(</span><span class=\"pln\">error</span><span class=\"pun\">);</span><span class=\"pln\">\n   </span><span class=\"pun\">});</span><span class=\"pln\">\n</span><span class=\"pun\">});</span></pre>\n<p>In the same controller, we will add code for playing audio. Our <b>$timeout</b> function will stop and unload looping audio after five seconds.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pln\">$scope</span><span class=\"pun\">.</span><span class=\"pln\">playAudio </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   $cordovaNativeAudio</span><span class=\"pun\">.</span><span class=\"pln\">play</span><span class=\"pun\">(</span><span class=\"str\">'click'</span><span class=\"pun\">);</span><span class=\"pln\">\n</span><span class=\"pun\">};</span><span class=\"pln\">\n\n$scope</span><span class=\"pun\">.</span><span class=\"pln\">loopAudio </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   $cordovaNativeAudio</span><span class=\"pun\">.</span><span class=\"pln\">loop</span><span class=\"pun\">(</span><span class=\"str\">'click'</span><span class=\"pun\">);</span><span class=\"pln\">\n\n   $timeout</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      $cordovaNativeAudio</span><span class=\"pun\">.</span><span class=\"pln\">stop</span><span class=\"pun\">(</span><span class=\"str\">'click'</span><span class=\"pun\">);</span><span class=\"pln\">\n      $cordovaNativeAudio</span><span class=\"pun\">.</span><span class=\"pln\">unload</span><span class=\"pun\">(</span><span class=\"str\">'click'</span><span class=\"pun\">);</span><span class=\"pln\">\n   </span><span class=\"pun\">},</span><span class=\"pln\"> </span><span class=\"lit\">5000</span><span class=\"pun\">);</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>The last thing we need is to create buttons for playing and looping audio.</p>\n<h2>HTML Code</h2>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"tag\">&lt;button</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"button\"</span><span class=\"pln\"> </span><span class=\"atn\">ng-click</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"playAudio()\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">PLAY</span><span class=\"tag\">&lt;/button&gt;</span><span class=\"pln\">\n\n</span><span class=\"tag\">&lt;button</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"button\"</span><span class=\"pln\"> </span><span class=\"atn\">ng-click</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"loopAudio()\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">LOOP</span><span class=\"tag\">&lt;/button&gt;</span></pre>\n<p>When we tap on play button, we will hear the sound once and when we tap on the loop button, the sound will loop for five seconds and then stop. This plugin works only on an emulator or a mobile device.</p>"
          ]
        },
        {
          "tag_line": "Ionic - Cordova Geolocation (Auf Englisch)",
          "details": [
            "<p>This plugin is used for adding a geolocation plugin to the Ionic app.</p>\n<h2>Using Geolocation</h2>\n<p>There is a simple way to use the geolocation plugin. We need to install this plugin from the command prompt window.</p>\n<pre class=\"result notranslate\">C:\\Users\\Username\\Desktop\\MyApp&gt;cordova plugin add cordova-plugin-geolocation\n</pre>\n<p>The following controller code is using two methods. The first one is the <b>getCurrentPosition</b> method and it will show us the current latitude and longitude of the user’s device. The second one is the <b>watchCurrentPosition</b> method that will return the current position of the device when the position is changed.</p>\n<h3>Controller Code</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pun\">.</span><span class=\"pln\">controller</span><span class=\"pun\">(</span><span class=\"str\">'MyCtrl'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">$scope</span><span class=\"pun\">,</span><span class=\"pln\"> $cordovaGeolocation</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\"> posOptions </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">timeout</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">10000</span><span class=\"pun\">,</span><span class=\"pln\"> enableHighAccuracy</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">};</span><span class=\"pln\">\n   $cordovaGeolocation\n   </span><span class=\"pun\">.</span><span class=\"pln\">getCurrentPosition</span><span class=\"pun\">(</span><span class=\"pln\">posOptions</span><span class=\"pun\">)</span><span class=\"pln\">\n\t\n   </span><span class=\"pun\">.</span><span class=\"kwd\">then</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">position</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">var</span><span class=\"pln\"> lat  </span><span class=\"pun\">=</span><span class=\"pln\"> position</span><span class=\"pun\">.</span><span class=\"pln\">coords</span><span class=\"pun\">.</span><span class=\"pln\">latitude\n      </span><span class=\"kwd\">var</span><span class=\"pln\"> </span><span class=\"kwd\">long</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> position</span><span class=\"pun\">.</span><span class=\"pln\">coords</span><span class=\"pun\">.</span><span class=\"pln\">longitude\n      console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">lat </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">'   '</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"kwd\">long</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">},</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">err</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">err</span><span class=\"pun\">)</span><span class=\"pln\">\n   </span><span class=\"pun\">});</span><span class=\"pln\">\n\n   </span><span class=\"kwd\">var</span><span class=\"pln\"> watchOptions </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">timeout </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"lit\">3000</span><span class=\"pun\">,</span><span class=\"pln\"> enableHighAccuracy</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">};</span><span class=\"pln\">\n   </span><span class=\"kwd\">var</span><span class=\"pln\"> watch </span><span class=\"pun\">=</span><span class=\"pln\"> $cordovaGeolocation</span><span class=\"pun\">.</span><span class=\"pln\">watchPosition</span><span class=\"pun\">(</span><span class=\"pln\">watchOptions</span><span class=\"pun\">);</span><span class=\"pln\">\n\t\n   watch</span><span class=\"pun\">.</span><span class=\"kwd\">then</span><span class=\"pun\">(</span><span class=\"pln\">\n      </span><span class=\"kwd\">null</span><span class=\"pun\">,</span><span class=\"pln\">\n\t\t\n      </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">err</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">err</span><span class=\"pun\">)</span><span class=\"pln\">\n      </span><span class=\"pun\">},</span><span class=\"pln\">\n\t   </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">position</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         </span><span class=\"kwd\">var</span><span class=\"pln\"> lat  </span><span class=\"pun\">=</span><span class=\"pln\"> position</span><span class=\"pun\">.</span><span class=\"pln\">coords</span><span class=\"pun\">.</span><span class=\"pln\">latitude\n         </span><span class=\"kwd\">var</span><span class=\"pln\"> </span><span class=\"kwd\">long</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> position</span><span class=\"pun\">.</span><span class=\"pln\">coords</span><span class=\"pun\">.</span><span class=\"pln\">longitude\n         console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">lat </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">''</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"kwd\">long</span><span class=\"pun\">)</span><span class=\"pln\">\n      </span><span class=\"pun\">}</span><span class=\"pln\">\n   </span><span class=\"pun\">);</span><span class=\"pln\">\n\n   watch</span><span class=\"pun\">.</span><span class=\"pln\">clearWatch</span><span class=\"pun\">();</span><span class=\"pln\">\n</span><span class=\"pun\">})</span></pre>\n<p>You might have also noticed the <b>posOptions</b> and <b>watchOptions</b> objects. We are using <b>timeout</b> to adjust maximum length of time that is allowed to pass in milliseconds and <b>enableHighAccuracy</b> is set to false. It can be set to <b>true</b> to get the best possible results, but sometimes it can lead to some errors. There is also a <b>maximumAge</b> option that can be used to show how an old position is accepted. It is using milliseconds, the same as timeout option.</p>\n<p>When we start our app and open the console, it will log the latitude and longitude of the device. When our position is changed, the <b>lat</b> and <b>long</b> values will change.</p>"
          ]
        },
        {
          "tag_line": "Ionic - Cordova Media (Auf Englisch)",
          "details": [
            "<p>This plugin allows us to record and playback audio files on a device.</p>\n<h2>Using Media</h2>\n<p>As with all the other Cordova plugins, the first thing we need to do is to install it from the command prompt window.</p>\n<pre class=\"result notranslate\">C:\\Users\\Username\\Desktop\\MyApp&gt;cordova plugin add cordova-plugin-media\n</pre>\n<p>Now, we are ready to use the plugin. In the following code sample, <b>src</b> is the source mp3 file that we will use for this tutorial. It is placed in <b>js</b> folder, but we need to add <b>/android_asset/www/</b> before it, so it can be used on android devices.</p>\n<p>The complete functionality is wrapped inside the <b>$ionicPlatform.ready()</b> function to assure that everything is loaded before the plugin is used. After that, we are creating the <b>media</b> object by using the <b>newMedia(src)</b> method. The <b>media</b> object is used for adding play, pause, stop and release functionalities.</p>\n<h3>Controller Code</h3>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pun\">.</span><span class=\"pln\">controller</span><span class=\"pun\">(</span><span class=\"str\">'MyCtrl'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">(</span><span class=\"pln\">$scope</span><span class=\"pun\">,</span><span class=\"pln\"> $ionicPlatform</span><span class=\"pun\">,</span><span class=\"pln\"> $cordovaMedia</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n   $ionicPlatform</span><span class=\"pun\">.</span><span class=\"pln\">ready</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n      </span><span class=\"kwd\">var</span><span class=\"pln\"> src </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"/android_asset/www/js/song.mp3\"</span><span class=\"pun\">;</span><span class=\"pln\">\n      </span><span class=\"kwd\">var</span><span class=\"pln\"> media </span><span class=\"pun\">=</span><span class=\"pln\"> $cordovaMedia</span><span class=\"pun\">.</span><span class=\"pln\">newMedia</span><span class=\"pun\">(</span><span class=\"pln\">src</span><span class=\"pun\">);</span><span class=\"pln\">\n\n      $scope</span><span class=\"pun\">.</span><span class=\"pln\">playMedia </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         media</span><span class=\"pun\">.</span><span class=\"pln\">play</span><span class=\"pun\">();</span><span class=\"pln\">\n      </span><span class=\"pun\">};</span><span class=\"pln\">\n\n      $scope</span><span class=\"pun\">.</span><span class=\"pln\">pauseMedia </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         media</span><span class=\"pun\">.</span><span class=\"pln\">pause</span><span class=\"pun\">();</span><span class=\"pln\">\n      </span><span class=\"pun\">};</span><span class=\"pln\">\n\n      $scope</span><span class=\"pun\">.</span><span class=\"pln\">stopMedia </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         media</span><span class=\"pun\">.</span><span class=\"pln\">stop</span><span class=\"pun\">();</span><span class=\"pln\">\n      </span><span class=\"pun\">};</span><span class=\"pln\">\n\n      $scope</span><span class=\"pun\">.</span><span class=\"pln\">$on</span><span class=\"pun\">(</span><span class=\"str\">'destroy'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">\n         media</span><span class=\"pun\">.</span><span class=\"pln\">release</span><span class=\"pun\">();</span><span class=\"pln\">\n      </span><span class=\"pun\">});</span><span class=\"pln\">\n   </span><span class=\"pun\">});</span><span class=\"pln\">\n</span><span class=\"pun\">}</span></pre>\n<p>We will also create three buttons for calling play, pause and stop functions.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"tag\">&lt;button</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"button\"</span><span class=\"pln\"> </span><span class=\"atn\">ng-click</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"playMedia()\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">PLAY</span><span class=\"tag\">&lt;/button&gt;</span><span class=\"pln\">\n\n</span><span class=\"tag\">&lt;button</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"button\"</span><span class=\"pln\"> </span><span class=\"atn\">ng-click</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"pauseMedia()\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">PAUSE</span><span class=\"tag\">&lt;/button&gt;</span><span class=\"pln\">\n\n</span><span class=\"tag\">&lt;button</span><span class=\"pln\"> </span><span class=\"atn\">class</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"button\"</span><span class=\"pln\"> </span><span class=\"atn\">ng-click</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"stopMedia()\"</span><span class=\"tag\">&gt;</span><span class=\"pln\">STOP</span><span class=\"tag\">&lt;/button&gt;</span></pre>\n<p>We need to run it on an emulator or a mobile device for this plugin to work. When the user’s tap on the play button, the <b>song.mp3</b> will start playing.</p>\n<p>You can see in the above example that we use <b>src</b> as an option parameter. There are other optional parameters that can be used for the <b>newMedia</b> method.</p>\n<h3>Optional Parameters</h3>\n<p>The following table will show all the optional parameters available.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Parameter</th>\n<th style=\"text-align:center;\">Type</th>\n<th style=\"text-align:center;\">Details</th>     \n</tr>\n<tr>\n<td class=\"ts\">mediaSuccess\n</td><td class=\"ts\">function</td>\n<td>Called after current play/record or stop action has completed.</td>\n</tr>\n<tr>\n<td style=\"text-align:center;\">mediaError\n</td><td>function</td>\n<td>Invoked when there is an error.</td>\n</tr>\n<tr>\n<td style=\"text-align:center;\">mediaStatus\n</td><td>function</td>\n<td>Invoked to show status changes.</td>\n</tr>\n</tbody></table>\n<p>The next table will show all the methods available.</p>\n<h3>Available Methods</h3>\n<p>The following table will show all the methods available.</p>\n<table class=\"table table-bordered\">\n<tbody><tr>\n<th style=\"text-align:center;\">Method</th>\n<th style=\"text-align:center;\">Parameters</th>\n<th style=\"text-align:center;\">Details</th>     \n</tr>\n<tr>\n<td class=\"ts\">newMedia(parameter1)\n</td><td class=\"ts\">src</td>\n<td>Returns media object that will be used for future methods. <b>src</b> is an URI of the audio content.</td>\n</tr>\n<tr>\n<td class=\"ts\">getCurrentPosition\n</td><td class=\"ts\">/</td>\n<td>Returns the current position within an audio file.</td>\n</tr>\n<tr>\n<td style=\"text-align:center;\">getDuration\n</td><td style=\"text-align:center;\">/</td>\n<td>Returns the duration of an audio file.</td>\n</tr>\n<tr>\n<td style=\"text-align:center;\">play\n</td><td style=\"text-align:center;\">/</td>\n<td>Used to start or resume playing.</td>\n</tr>\n<tr>\n<td style=\"text-align:center;\">pause\n</td><td style=\"text-align:center;\">/</td>\n<td>Used to pause playback.</td>\n</tr>\n<tr>\n<td style=\"text-align:center;\">stop\n</td><td style=\"text-align:center;\">/</td>\n<td>Used to stop playing.</td>\n</tr>\n<tr>\n<td style=\"text-align:center;\">release\n</td><td style=\"text-align:center;\">/</td>\n<td>Used to release audio resources.</td>\n</tr>\n<tr>\n<td class=\"ts\">seekTo(parameter1)\n</td><td class=\"ts\">milliseconds</td>\n<td>Used to set the playback position in milliseconds.</td>\n</tr>\n<tr>\n<td class=\"ts\">setVolume(parameter1)\n</td><td class=\"ts\">volume</td>\n<td>Used to change volume. Range is from 0 to 1</td>\n</tr>\n<tr>\n<td style=\"text-align:center;\">startRecord()\n</td><td style=\"text-align:center;\">/</td>\n<td>Used to start recording.</td>\n</tr>\n<tr>\n<td style=\"text-align:center;\">stopRecord\n</td><td style=\"text-align:center;\">/</td>\n<td>Used to stop recording.</td></tr></tbody></table>"
          ]
        },
        {
          "tag_line": "Ionic - Cordova Icon and Splash Screen (Auf Englisch)",
          "details": [
            "<p>Every mobile app needs an icon and splash screen. Ionic provides excellent solution for adding it and requires minimum work for the developers. Cropping and resizing is automated on the Ionic server.</p>\n<h2>Adding Splash Screen and Icon</h2>\n<p>In the earlier chapters, we have discussed how to add different platforms for the Ionic app. By adding a platform, Ionic will install Cordova splash screen plugin for that platform so we do not need to install anything afterwards. All we need to do is to find two images.</p>\n<p>The images should be <b>png</b>, <b>psd</b> or <b>ai</b> files. The minimum dimension should be 192x192 for icon image and 2208×2208 for the splash screen image. This dimensions will cover all the devices. In our example, we will use the same image for both. The images need to be saved to <b>resources</b> folder instead of the default ones. After we are done with it, all we need is to run the following in the command prompt window.</p>\n<pre class=\"result notranslate\">C:\\Users\\Username\\Desktop\\MyApp&gt;ionic resources\n</pre>\n<p>Now, if you check <b>resources/android</b> or <b>resources/ios</b> folders, you will see that the images we added before are resized and cropped to accommodate different screen sizes. When we run our app on the device, we will see a splash screen before the app is started and we will see that a default Ionic icon is changed.</p>\n<img src=\"/ionic/images/ionic-cordova-splash-screen.jpg\" alt=\"Ionic Cordova Splash Screen\">\n<p></p>\n<img src=\"/ionic/images/ionic-cordova-icon.jpg\" alt=\"Ionic Cordova Icon\">\n<p><b>NOTE</b> − If you want to use different images for Android and iOS, you can add it to <b>resources/android</b> and <b>resources/ios</b> instead of the <b>resources</b> folder.</p>"
          ]
        }
      ]
    },
    {
      "title": "Xamarin",
      "content": [
        {
          "tag_line": "Xamarin - Application Manifest (Auf Englisch)",
          "details": [
            "<p>All Android Apps have a <b>manifest file</b> commonly referred to as <b>AndroidManifest.xml</b>. The manifest file contains everything about the Android platform that an App needs in order to run successfully.</p>\n<p>Here, we have listed down some of the important functions of a manifest file −</p>\n<ul class=\"list\">\n<li><p>It declares the <b>minimum API level</b> required by the application.</p></li>\n<li><p>It declares the permissions required by the application, e.g., camera, location, etc.</p></li>\n<li><p>It gives permissions to hardware and software features used or required by the application.</p></li>\n<li><p>It lists the libraries that the application must be linked.</p></li>\n</ul>\n<p>The following screenshot shows a Manifest file.</p>\n<img src=\"/xamarin/images/andriod_manifest.jpg\" alt=\"Andriod Manifest\">\n<p><b>Application name</b> − It refers to the title of your App</p>\n<p><b>Package name</b> − It is an unique name used to identify your App.</p>\n<p><b>Application Icon</b> − It is the icon displayed on the Android home screen for your App.</p>\n<p><b>Version Number</b> − It is a single number that is used to show one version of your App is more recent than another.</p>\n<pre class=\"result notranslate\">&lt;manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" \n   android:versionCode=\"1\" &gt; \n</pre>\n<p><b>Version Name</b> − It is a user-friendly version string for your App that users will see on your App settings and on the Google PlayStore. The following code shows an example of a version name.</p>\n<pre class=\"result notranslate\">&lt;manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"     \n   android:versionName=\"1.0.0\"&gt; \n</pre>\n<p><b>Minimum Android Version</b> − It is the lowest Android version platform which your application supports.</p>\n<pre class=\"result notranslate\">&lt;uses-sdk android:minSdkVersion=\"16\" /&gt; \n</pre>\n<p>In the above example, our minimum Android version is API Level 16, commonly referred to as <b>JELLY BEAN</b>.</p>\n<p><b>Target Android Version</b> − It is the Android version on which your App is compiled against.</p>"
          ]
        },
        {
          "tag_line": "Xamarin - Android Resources (Auf Englisch)",
          "details": [
            "\n<header id=\"header\" class=\"fixed\">\n<!-- Top sub-menu Starts Here -->\n<div class=\"mui-appbar mui-container-fulid top-menu\">\n<div class=\"mui-container\">\n<div class=\"top-menu-item home\">\n<a href=\"https://www.tutorialspoint.com/index.htm\" target=\"_blank\" title=\"TutorialsPoint - Home\"><i class=\"fal fa-home\"></i> <span>Home</span></a>\n</div>\n<div class=\"top-menu-item qa\">\n<a href=\"https://www.tutorialspoint.com/about/about_careers.htm\" target=\"_blank\" title=\"Job @ Tutorials Point\"><i class=\"fa fa-suitcase\"></i> <span>Jobs</span></a>\n</div>\n<div class=\"top-menu-item tools\">\n<a href=\"https://www.tutorialspoint.com/online_dev_tools.htm\" target=\"_blank\" title=\"Tools - Online Development and Testing Tools\"><i class=\"fal fa-cogs\"></i> <span>Tools</span></a>\n</div>\n<div class=\"top-menu-item coding-ground\">\n<a href=\"https://www.tutorialspoint.com/codingground.htm\" target=\"_blank\" title=\"Coding Ground - Free Online IDE and Terminal\"><i class=\"fal fa-code\"></i> <span>Coding Ground </span></a> \n</div>\n<div class=\"top-menu-item current-affairs\">\n<a href=\"https://www.tutorialspoint.com/current_affairs.htm\" target=\"_blank\" title=\"Daily Current Affairs\"><i class=\"fal fa-layer-plus\"></i> <span>Current Affairs</span></a>\n</div>\n<div class=\"top-menu-item upsc-notes\">\n<a href=\"https://www.tutorialspoint.com/upsc_ias_exams.htm\" target=\"_blank\" title=\"UPSC IAS Exams Notes - TutorialsPoint\"><i class=\"fal fa-user-tie\"></i> <span>UPSC Notes</span></a>\n</div>      \n<div class=\"top-menu-item online-tutoris\">\n<a href=\"https://www.tutorialspoint.com/tutor_connect/index.php\" target=\"_blank\" title=\"Top Online Tutors - Tutor Connect\"><i class=\"fal fa-user\"></i> <span>Online Tutors</span></a>\n</div>\n<div class=\"top-menu-item whiteboard\">\n<a href=\"https://www.tutorialspoint.com/whiteboard.htm\" target=\"_blank\" title=\"Free Online Whiteboard\"><i class=\"fal fa-chalkboard\"></i> <span>Whiteboard</span></a>\n</div>\n<div class=\"top-menu-item net-meeting\">\n<a href=\"https://www.tutorialspoint.com/netmeeting.php\" target=\"_blank\" title=\"A free tool for online video conferencing\"><i class=\"fal fa-chalkboard-teacher\"></i> <span>Net Meeting</span></a> \n</div>\n<div class=\"top-menu-item articles\">\n<a href=\"https://www.tutorix.com\" target=\"_blank\" title=\"Tutorx - The Best Learning App\" rel=\"nofollow\"><i class=\"fal fa-video\"></i> <span>Tutorix</span></a> \n</div>        \n<div class=\"social-menu-item\">\n<a href=\"https://www.facebook.com/tutorialspointindia\" target=\"_blank\" rel=\"nofollow\" data-placement=\"bottom\" title=\"tutorialspoint @ Facebook\"><i class=\"fab fa-facebook-f\"></i></a> \n<a href=\"https://www.twitter.com/tutorialspoint\" target=\"_blank\" rel=\"nofollow\" data-placement=\"bottom\" title=\"tutorialspoint @ Twitter\"><i class=\"fab fa-twitter\"></i></a>\n<a href=\"https://www.linkedin.com/company/tutorialspoint\" target=\"_blank\" rel=\"nofollow\" data-placement=\"bottom\" title=\"tutorialspoint @ Linkedin\"><i class=\"fab fa-linkedin-in\"></i></a>\n<a href=\"https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg\" target=\"_blank\" rel=\"nofollow\" data-placement=\"bottom\" title=\"tutorialspoint YouTube\"><i class=\"fab fa-youtube\"></i></a>\n</div>        \n</div>\n</div>\n<!-- Top sub-menu Ends Here -->\n<!-- Top main-menu Starts Here -->\n<div class=\"mui-appbar mui-container-fulid mui--appbar-line-height mui--z1 sticky\" id=\"logo-menu\">\n<div class=\"mui-container\">\n<div class=\"left-menu\">\n<a href=\"https://www.tutorialspoint.com/index.htm\" title=\"Tutorialspoint\">\n<img class=\"tp-logo\" alt=\"tutorialspoint\" src=\"/xamarin/images/logo.png\">\n</a>\n<div class=\"mui-dropdown\">\n<a class=\"mui-btn mui-btn--primary categories\" data-mui-toggle=\"dropdown\"><i class=\"fa fa-th-large\"></i> \n<span>Categories <span class=\"mui-caret\"></span></span></a>            \n<ul class=\"mui-dropdown__menu cat-menu\">\n<li>\n<ul>\n<li><a href=\"/academic_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Academic Tutorials</a></li>\n<li><a href=\"/big_data_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Big Data &amp; Analytics </a></li>\n<li><a href=\"/computer_programming_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Computer Programming </a></li>\n<li><a href=\"/computer_science_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Computer Science </a></li>\n<li><a href=\"/database_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Databases </a></li>\n<li><a href=\"/devops_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> DevOps </a></li>\n<li><a href=\"/digital_marketing_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Digital Marketing </a></li>\n<li><a href=\"/engineering_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Engineering Tutorials </a></li>\n<li><a href=\"/upsc_ias_exams.htm\"><i class=\"fa fa-caret-right\"></i> Exams Syllabus </a></li>\n<li><a href=\"/famous_monuments.htm\"><i class=\"fa fa-caret-right\"></i> Famous Monuments </a></li>\n<li><a href=\"/gate_exams_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> GATE Exams Tutorials</a></li>\n<li><a href=\"/latest_technologies.htm\"><i class=\"fa fa-caret-right\"></i> Latest Technologies </a></li>\n<li><a href=\"/machine_learning_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Machine Learning </a></li>\n<li><a href=\"/mainframe_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Mainframe Development </a></li>\n<li><a href=\"/management_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Management Tutorials </a></li>\n<li><a href=\"/maths_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Mathematics Tutorials</a></li>\n<li><a href=\"/microsoft_technologies_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Microsoft Technologies </a></li>\n<li><a href=\"/misc_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Misc tutorials </a></li>\n<li><a href=\"/mobile_development_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Mobile Development </a></li>\n<li><a href=\"/java_technology_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Java Technologies </a></li>\n<li><a href=\"/python_technologies_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Python Technologies </a></li>\n<li><a href=\"/sap_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> SAP Tutorials </a></li>\n<li><a href=\"/scripting_lnaguage_tutorials.htm\"><i class=\"fa fa-caret-right\"></i>Programming Scripts </a></li>\n<li><a href=\"/selected_reading.htm\"><i class=\"fa fa-caret-right\"></i> Selected Reading </a></li>\n<li><a href=\"/software_quality_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Software Quality </a></li>\n<li><a href=\"/soft_skill_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Soft Skills </a></li>\n<li><a href=\"/telecom_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Telecom Tutorials </a></li>\n<li><a href=\"/upsc_ias_exams.htm\"><i class=\"fa fa-caret-right\"></i> UPSC IAS Exams </a></li>\n<li><a href=\"/web_development_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Web Development </a></li>\n<li><a href=\"/sports_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Sports Tutorials </a></li>\n<li><a href=\"/xml_technologies_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> XML Technologies </a></li>\n<li><a href=\"/multi_language_tutorials.htm\"><i class=\"fa fa-caret-right\"></i> Multi-Language</a></li>\n<li><a href=\"/questions_and_answers.htm\"><i class=\"fa fa-caret-right\"></i> Interview Questions</a></li>\n</ul>\n</li>\n</ul>\n<div class=\"clear\"></div>\n</div> \n</div>\n<div class=\"right-menu\">\n<div class=\"toc-toggle\">\n<a href=\"javascript:void(0);\"><i class=\"fa fa-bars\"></i></a>\n</div>\n<div class=\"mobile-search-btn\">\n<a href=\"https://www.tutorialspoint.com/search.htm\"><i class=\"fal fa-search\"></i></a>\n</div>\n<div class=\"search-box\">\n<form method=\"get\" class=\"\" name=\"searchform\" action=\"https://www.google.com/search\" target=\"_blank\" novalidate=\"\">\n<input type=\"hidden\" name=\"sitesearch\" value=\"www.tutorialspoint.com\" class=\"user-valid valid\">\n<input class=\"header-search-box\" type=\"text\" id=\"search-string\" name=\"q\" placeholder=\"Search your favorite tutorials...\" onfocus=\"if (this.value == 'Search your favorite tutorials...') {this.value = '';}\" onblur=\"if (this.value == '') {this.value = 'Search your favorite tutorials...';}\" autocomplete=\"off\">\n<button><i class=\"fal fa-search\"></i></button>\n</form>\n</div>\n<div class=\"menu-btn library-btn\">\n<a href=\"https://www.tutorialspoint.com/tutorialslibrary.htm\"><i class=\"fal fa-cubes\"></i> <span>Library</span></a>\n</div>\n<div class=\"menu-btn videos-btn\">\n<a href=\"https://www.tutorialspoint.com/videotutorials/index.php\"><i class=\"fal fa-video\"></i> <span>Videos</span></a> \n</div>\n<div class=\"menu-btn videos-btn\">\n<a href=\"https://www.tutorialspoint.com/questions/index.php\"><i class=\"fa fa-location-arrow\"></i> <span>Q/A</span></a>\n</div>\n<div class=\"menu-btn ebooks-btn\">\n<a href=\"https://store.tutorialspoint.com\"><i class=\"fal fa-book\"></i> <span>eBooks</span></a>\n</div>\n<div class=\"mui-dropdown\">\n<button class=\"mui-btn mui-btn--primary\" data-mui-toggle=\"dropdown\" type=\"button\">\n<span class=\"mui-caret\"></span>\n</button>\n<ul class=\"mui-dropdown__menu\">\n<li><a href=\"https://www.tutorialspoint.com/tutorialslibrary.htm\"><i class=\"fal fa-cubes\"></i> <span>Library</span></a></li>\n<li><a href=\"https://www.tutorialspoint.com/videotutorials/index.php\"><i class=\"fal fa-video\"></i> <span>Videos</span></a></li>\n<li><a href=\"https://store.tutorialspoint.com\"><i class=\"fal fa-book\"></i> <span>eBooks</span></a></li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<!-- Top main-menu Ends Here -->\n</header>\n<div class=\"mui-container-fluid content\">\n<div class=\"mui-container\">\n<!-- Tutorial ToC Starts Here -->\n<div class=\"mui-col-md-3 tutorial-toc\">\n<div class=\"mini-logo\">\n<img src=\"/xamarin/images/xamarin-mini-logo.jpg\" alt=\"Xamarin Tutorial\">\n</div>\n<ul class=\"toc chapters\">\n<li class=\"heading\">Xamarin Tutorial</li>\n<li><a href=\"/xamarin/index.htm\">Xamarin - Home</a></li>\n<li><a href=\"/xamarin/xamarin_installation.htm\">Xamarin - Installation</a></li>\n<li><a href=\"/xamarin/xamarin_first_application.htm\">Xamarin - First Application</a></li>\n<li><a href=\"/xamarin/xamarin_application_manifest.htm\">Xamarin - Application Manifest</a></li>\n<li style=\"background-color: rgb(214, 214, 214);\"><a href=\"/xamarin/xamarin_android_resources.htm\">Xamarin - Android Resources</a></li>\n<li><a href=\"/xamarin/xamarin_android_activity_lifecycle.htm\">Xamarin - Android Activity Lifecycle</a></li>\n<li><a href=\"/xamarin/xamarin_permissions.htm\">Xamarin - Permissions</a></li>\n<li><a href=\"/xamarin/xamarin_building_the_app_gui.htm\">Xamarin - Building the App GUI</a></li>\n<li><a href=\"/xamarin/xamarin_menus.htm\">Xamarin - Menus</a></li>\n<li><a href=\"/xamarin/xamarin_layouts.htm\">Xamarin - Layouts</a></li>\n<li><a href=\"/xamarin/xamarin_andriod_widgets.htm\">Xamarin - Android Widgets</a></li>\n<li><a href=\"/xamarin/xamarin_andriod_dialogs.htm\">Xamarin - Android Dialogs</a></li>\n<li><a href=\"/xamarin/xamarin_gallery.htm\">Xamarin - Gallery</a></li>\n<li><a href=\"/xamarin/xamarin_andriod_views.htm\">Xamarin - Andriod Views</a></li>\n<li><a href=\"/xamarin/xamarin_multiscreen_app.htm\">Xamarin - Multiscreen App</a></li>\n<li><a href=\"/xamarin/xamarin_deploying_your_app.htm\">Xamarin - Deploying Your App</a></li>\n</ul>\n<ul class=\"toc chapters\">\n<li class=\"heading\">Xamarin Useful Resources</li>\n<li><a href=\"/xamarin/xamarin_quick_guide.htm\">Xamarin - Quick Guide</a></li>\n<li><a href=\"/xamarin/xamarin_useful_resources.htm\">Xamarin - Useful Resources</a></li>\n<li><a href=\"/xamarin/xamarin_discussion.htm\">Xamarin - Discussion</a></li>\n</ul>\n<ul class=\"toc reading\">\n<li class=\"sreading\">Selected Reading</li>\n<li><a target=\"_top\" href=\"/upsc_ias_exams.htm\">UPSC IAS Exams Notes</a></li>\n<li><a target=\"_top\" href=\"/developers_best_practices/index.htm\">Developer's Best Practices</a></li>\n<li><a target=\"_top\" href=\"/questions_and_answers.htm\">Questions and Answers</a></li>\n<li><a target=\"_top\" href=\"/effective_resume_writing.htm\">Effective Resume Writing</a></li>\n<li><a target=\"_top\" href=\"/hr_interview_questions/index.htm\">HR Interview Questions</a></li>\n<li><a target=\"_top\" href=\"/computer_glossary.htm\">Computer Glossary</a></li>\n<li><a target=\"_top\" href=\"/computer_whoiswho.htm\">Who is Who</a></li>\n</ul>\n</div>\n<!-- Tutorial ToC Ends Here -->\n<!-- Tutorial Content Starts Here -->\n<div class=\"mui-col-md-6 tutorial-content\">\n<h1>Xamarin - Android Resources</h1>\n<hr>\n<div class=\"top-ad-heading\">Advertisements</div>\n<div style=\"text-align:center;\" class=\"google-top-ads\">\n<script><!--\ngoogle_ad_client = \"pub-7133395778201029\";\nvar width = document.getElementsByClassName(\"tutorial-content\")[0].clientWidth - 40;\ngoogle_ad_width = width;\ngoogle_ad_height = 150;\ngoogle_ad_format = width + \"x150_as\";\ngoogle_ad_type = \"image\";\ngoogle_ad_channel = \"\";\n//--></script>\n<script src=\"https://pagead2.googlesyndication.com/pagead/show_ads.js\">\n</script>\n</div>\n<div class=\"mui-container-fluid button-borders\">\n<div class=\"pre-btn\">\n<a href=\"/xamarin/xamarin_application_manifest.htm\"><i class=\"fal fa-chevron-circle-left\"></i> Previous Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/xamarin/xamarin_android_activity_lifecycle.htm\">Next Page <i class=\"fal fa-chevron-circle-right\"></i>&nbsp;</a>\n</div>\n</div>\n<div class=\"clearer\"></div>\n<p>When a new Android project is created, there are some files that are added to the project, by default. We call these default project files and folders as <b>Android Resources</b>. Take a look at the following screenshot.</p>\n<img src=\"/xamarin/images/andriod_resources.jpg\" alt=\"Android Resources\">\n<p>The default Android resources include the following −</p>\n<ul class=\"list\">\n<li><p><b>AndroidManifest.xml file</b> − It contains information about your Android applications, e.g., the application name, permissions, etc.</p></li>\n<li><p><b>Resources folder</b> − Resources can be images, layouts, strings, etc. that can be loaded via Android’s resource system.</p></li>\n<li><p><b>Resources/drawable folder</b> − It stores all the images that you are going to use in your application.</p></li>\n<li><p><b>Resources/layout folder</b> − It contains all the Android XML files (.axml) that Android uses to build user interfaces.</p></li>\n<li><p><b>The Resources/values folder</b> − It contains XML files to declare key-value pairs for strings (and other types) throughout an application. This is how localization for multiple languages is normally set up on Android.</p></li>\n<li><p><b>Resources.designer.cs</b> − This file is created automatically when the Android projected is created and it contains unique identifiers that reference the Android resources.</p></li>\n<li><p><b>MainActivity.cs file</b> − This is the first activity of your Android application and from where the main application actions are launched from.</p></li>\n</ul>\n<p>Resource files can be accessed programmatically through a <b>unique ID</b> which is stored in the <b>resources.designer.cs</b> file. The ID is contained under a class called <b>Resource</b>. Any resource added to the project is automatically generated inside the <b>resource class</b>.</p>\n<p>The following code shows how to create a gridview project containing seven images −</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">namespace</span><span class=\"pln\"> </span><span class=\"typ\">HelloGridView</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n   </span><span class=\"pun\">[</span><span class=\"typ\">System</span><span class=\"pun\">.</span><span class=\"typ\">CodeDom</span><span class=\"pun\">.</span><span class=\"typ\">Compiler</span><span class=\"pun\">.</span><span class=\"typ\">GeneratedCodeAttribute</span><span class=\"pln\">\n      </span><span class=\"pun\">(</span><span class=\"str\">\"Xamarin.Android.Build.Tas ks\"</span><span class=\"pun\">,</span><span class=\"pln\"> \n      </span><span class=\"str\">\"1.0.0.0\"</span><span class=\"pun\">)]</span><span class=\"pln\"> \n   </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">partial</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Resource</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n      </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">Resource</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\">     \n         </span><span class=\"kwd\">global</span><span class=\"pun\">::</span><span class=\"typ\">Android</span><span class=\"pun\">.</span><span class=\"typ\">Runtime</span><span class=\"pun\">.</span><span class=\"typ\">ResourceIdManager</span><span class=\"pun\">.</span><span class=\"typ\">UpdateIdValues</span><span class=\"pun\">();</span><span class=\"pln\"> \n      </span><span class=\"pun\">}</span><span class=\"pln\"> \n   \n      </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> </span><span class=\"typ\">UpdateIdValues</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{}</span><span class=\"pln\"> \n      </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">partial</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Attribute</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n         </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">Attribute</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n            </span><span class=\"kwd\">global</span><span class=\"pun\">::</span><span class=\"typ\">Android</span><span class=\"pun\">.</span><span class=\"typ\">Runtime</span><span class=\"pun\">.</span><span class=\"typ\">ResourceIdManager</span><span class=\"pun\">.</span><span class=\"typ\">UpdateIdValues</span><span class=\"pun\">();</span><span class=\"pln\"> \n         </span><span class=\"pun\">}</span><span class=\"pln\"> \n   \n         </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">Attribute</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{}</span><span class=\"pln\"> \n      </span><span class=\"pun\">}</span><span class=\"pln\"> \n      \n      </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">partial</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Drawable</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n         </span><span class=\"com\">// aapt resource value: 0x7f020000 </span><span class=\"pln\">\n         </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> </span><span class=\"typ\">Icon</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">2130837504</span><span class=\"pun\">;</span><span class=\"pln\"> \n    \n         </span><span class=\"com\">// aapt resource value: 0x7f020001 </span><span class=\"pln\">\n         </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> img1 </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">2130837505</span><span class=\"pun\">;</span><span class=\"pln\"> \n    \n         </span><span class=\"com\">// aapt resource value: 0x7f020002 </span><span class=\"pln\">\n         </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> img2 </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">2130837506</span><span class=\"pun\">;</span><span class=\"pln\">\n         \n         </span><span class=\"com\">// aapt resource value: 0x7f020003 </span><span class=\"pln\">\n         </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> img3 </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">2130837507</span><span class=\"pun\">;</span><span class=\"pln\"> \n    \n         </span><span class=\"com\">// aapt resource value: 0x7f020004 </span><span class=\"pln\">\n         </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> img4 </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">2130837508</span><span class=\"pun\">;</span><span class=\"pln\"> \n    \n         </span><span class=\"com\">// aapt resource value: 0x7f020005 </span><span class=\"pln\">\n         </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> img5 </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">2130837509</span><span class=\"pun\">;</span><span class=\"pln\"> \n    \n         </span><span class=\"com\">// aapt resource value: 0x7f020006 </span><span class=\"pln\">\n         </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> img6 </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">2130837510</span><span class=\"pun\">;</span><span class=\"pln\"> \n    \n         </span><span class=\"com\">// aapt resource value: 0x7f020007 </span><span class=\"pln\">\n         </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> img7 </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">2130837511</span><span class=\"pun\">;</span><span class=\"pln\"> \n    \n         </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">Drawable</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n            </span><span class=\"kwd\">global</span><span class=\"pun\">::</span><span class=\"typ\">Android</span><span class=\"pun\">.</span><span class=\"typ\">Runtime</span><span class=\"pun\">.</span><span class=\"typ\">ResourceIdManager</span><span class=\"pun\">.</span><span class=\"typ\">UpdateIdValues</span><span class=\"pun\">();</span><span class=\"pln\"> \n         </span><span class=\"pun\">}</span><span class=\"pln\"> \n   \n         </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">Drawable</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{}</span><span class=\"pln\"> \n      </span><span class=\"pun\">}</span><span class=\"pln\"> \n   \n      </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">partial</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Id</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n         </span><span class=\"com\">// aapt resource value: 0x7f050000 </span><span class=\"pln\">\n         </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> gridview </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">2131034112</span><span class=\"pun\">;</span><span class=\"pln\"> \n    \n         </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">Id</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n            </span><span class=\"kwd\">global</span><span class=\"pun\">::</span><span class=\"typ\">Android</span><span class=\"pun\">.</span><span class=\"typ\">Runtime</span><span class=\"pun\">.</span><span class=\"typ\">ResourceIdManager</span><span class=\"pun\">.</span><span class=\"typ\">UpdateIdValues</span><span class=\"pun\">();</span><span class=\"pln\"> \n         </span><span class=\"pun\">}</span><span class=\"pln\"> \n   \n         </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">Id</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{}</span><span class=\"pln\"> \n      </span><span class=\"pun\">}</span><span class=\"pln\"> \n   \n      </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">partial</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">Layout</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n         </span><span class=\"com\">// aapt resource value: 0x7f030000 </span><span class=\"pln\">\n         </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> </span><span class=\"typ\">Main</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">2130903040</span><span class=\"pun\">;</span><span class=\"pln\">\n         </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">Layout</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n            </span><span class=\"kwd\">global</span><span class=\"pun\">::</span><span class=\"typ\">Android</span><span class=\"pun\">.</span><span class=\"typ\">Runtime</span><span class=\"pun\">.</span><span class=\"typ\">ResourceIdManager</span><span class=\"pun\">.</span><span class=\"typ\">UpdateIdValues</span><span class=\"pun\">();</span><span class=\"pln\"> \n         </span><span class=\"pun\">}</span><span class=\"pln\"> \n         </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">Layout</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{}</span><span class=\"pln\"> \n      </span><span class=\"pun\">}</span><span class=\"pln\"> \n   \n      </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">partial</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n         </span><span class=\"com\">// aapt resource value: 0x7f040001 </span><span class=\"pln\">\n         </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> </span><span class=\"typ\">ApplicationName</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">2130968577</span><span class=\"pun\">;</span><span class=\"pln\"> \n    \n         </span><span class=\"com\">// aapt resource value: 0x7f040000 </span><span class=\"pln\">\n         </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> </span><span class=\"typ\">Hello</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">2130968576</span><span class=\"pun\">;</span><span class=\"pln\"> \n    \n         </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n            </span><span class=\"kwd\">global</span><span class=\"pun\">::</span><span class=\"typ\">Android</span><span class=\"pun\">.</span><span class=\"typ\">Runtime</span><span class=\"pun\">.</span><span class=\"typ\">ResourceIdManager</span><span class=\"pun\">.</span><span class=\"typ\">UpdateIdValues</span><span class=\"pun\">();</span><span class=\"pln\"> \n         </span><span class=\"pun\">}</span><span class=\"pln\"> \n         </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{}</span><span class=\"pln\"> \n      </span><span class=\"pun\">}</span><span class=\"pln\"> \n   </span><span class=\"pun\">}</span><span class=\"pln\"> \n</span><span class=\"pun\">}</span><span class=\"pln\">   </span></pre>\n<p>From the above code, the seven images are referenced in a class called <b>drawable</b>. These images are added programmatically. If a user adds another image to the project, it will also be added to the <b>drawable</b> class. The <b>gridview</b> contained in the project is also added and stored in a class on its own. Each item contained in the <b>resources folder</b> is automatically generated and stored in a class. </p>\n<div class=\"mui-container-fluid button-borders show\">\n<div class=\"pre-btn\">\n<a href=\"/xamarin/xamarin_application_manifest.htm\"><i class=\"fal fa-chevron-circle-left\"></i> Previous Page</a>\n<a class=\"hide-on-mobile\" href=\"javascript:printPage();\"><i class=\"fa fa-print\"></i> Print Page</a>\n</div>\n<div class=\"nxt-btn\">\n<a href=\"/xamarin/xamarin_android_activity_lifecycle.htm\">Next Page <i class=\"fal fa-chevron-circle-right\"></i>&nbsp;</a>\n</div>\n</div>\n<div class=\"google-bottom-ads\">\n<div>Advertisements</div>\n<div>\n   <div id=\"vi_bottom_ads\"><div class=\"adsbyvli\" data-ad-slot=\"vi_9013190\"></div></div>\n   <script>\n     (function() {\n     var adPos = document.getElementById('vi_bottom_ads');\n     var mobile_ad_id = \"vi_9012177\";\n     var desktop_ad_id = \"vi_9013190\";\n     var ad_id = window.innerWidth <= 768 ? mobile_ad_id : desktop_ad_id;\n     adPos.innerHTML = '<div class=\"adsbyvli\" data-ad-slot=\"' + ad_id + '\"></div>';\n     (vitag.displayInit = window.vitag.displayInit || []).push(function () {\n         viAPItag.display(ad_id);\n     });\n     }())\n   </script>\n</div>\n<div class=\"space-bottom\"></div>\n</div>\n</div>\n<!-- Tutorial Content Ends Here -->\n<!-- Right Column Starts Here -->\n<div class=\"mui-col-md-2 google-right-ads\">\n<div class=\"space-top\"></div>\n<div class=\"google-right-ad\" style=\"margin: 0px auto !important;margin-top:5px;\">\n<div class=\"adsbyvli\" data-ad-slot=\"vi_9012177\"></div>\n<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display(\"vi_9012177\")})</script>\n</div>\n<div class=\"google-right-ad\" style=\"margin-top:5px;\">\n<div class=\"adsbyvli\" data-ad-slot=\"vi_9012177\"></div>\n<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display(\"vi_9012177\")})</script>\n</div>\n<div class=\"google-right-ad\" style=\"margin-top:5px;\">\n<div class=\"adsbyvli\" data-ad-slot=\"vi_9013289\"></div>\n<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display(\"vi_9013289\")})</script>\n</div>\n<div class=\"space-bottom\" style=\"margin-bottom:15px;\"></div>\n</div>\n<!-- Right Column Ends Here -->\n</div>\n</div>\n<div class=\"clear\"></div>\n<footer id=\"footer\">\n<div class=\"mui--text-center\">\n<div class=\"mui--text-caption mui--text-light\">\n<a href=\"/index.htm\" class=\"logo\"><img class=\"img-responsive\" src=\"/images/logo-black.png\" alt=\"Tutorials Point\" title=\"Tutorials Point\"></a>\n</div>\n<ul class=\"mui-list--inline mui--text-body2 mui--text-light\">\n<li><a href=\"/about/index.htm\"><i class=\"fal fa-globe\"></i> About us</a></li>\n<li><a href=\"/about/about_terms_of_use.htm\"><i class=\"fal fa-asterisk\"></i> Terms of use</a></li>\n<li><a href=\"/about/about_privacy.htm#cookies\"> <i class=\"fal fa-shield-check\"></i> Cookies Policy</a></li>\n<li><a href=\"/about/faq.htm\"><i class=\"fal fa-question-circle\"></i> FAQ's</a></li>\n<li><a href=\"/about/about_helping.htm\"><i class=\"fal fa-hands-helping\"></i> Helping</a></li>\n<li><a href=\"/about/contact_us.htm\"><i class=\"fal fa-map-marker-alt\"></i> Contact</a></li>\n</ul>\n<div class=\"mui--text-caption mui--text-light bottom-copyright-text\">© Copyright 2019. All Rights Reserved.</div>\n</div>\n<script async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=UA-232293-17\"></script>\n<script>\nwindow.dataLayer = window.dataLayer || [];\nfunction gtag(){dataLayer.push(arguments);}\ngtag('js', new Date());\ngtag('config', 'UA-232293-6');\n</script>\n</footer>\n\n\n"
          ]
        },
        {
          "tag_line": "Xamarin - Permissions (Auf Englisch)",
          "details": [
            "<p>In Android, by default, no application has permissions to perform any operations that would have an effect on the user or the operating system. In order for an App to perform a task, it must declare the permissions. The App cannot perform the task until the permission are granted by the Android system. This mechanism of permissions stops applications from doing as they wish without the user’s consent.</p>\n<p>Permissions are to be recorded in <b>AndroidManifest.xml</b> file. To add permissions, we double-click on properties, then go to Android Man<b>Required permissions</b> will appear. Check the appropriate permissions you wish to add.</p>\n<img src=\"/xamarin/images/access_checkin_properties.jpg\" alt=\"Access Checkin Properties\">\n<p></p>\n<p><b>Camera</b> − It provides permission to access the device’s camera.</p>\n<pre class=\"result notranslate\">&lt;uses-permission android:name=\"android.permission.CAMERA\" /&gt;\n</pre>\n<p></p>\n<p><b>Internet</b> − It provides access to network resources.</p>\n<pre class=\"result notranslate\">&lt;uses-permission android:name=\"android.permission.INTERNET\" /&gt; \n</pre>\n<p></p>\n<p><b>ReadContacts</b> − It provides access to read the contacts on your device.</p>\n<pre class=\"result notranslate\">&lt;uses-permission android:name=\"android.permission.READ_CONTACTS\" /&gt; \n</pre>\n<p></p>\n<p><b>ReadExternalStorage</b> − It provides access to read and store data on an external storage.</p>\n<pre class=\"result notranslate\">&lt;uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" /&gt; \n</pre>\n<p></p>\n<p><b>Calendars</b> − It allows an app access to the calendar on the user device and events. This permission can be dangerous, as it grants an app the ability to send emails to guests without the owner’s awareness. The syntax for adding this permission is as shown below −</p>\n<pre class=\"result notranslate\">&lt;uses-permission android:name=\"android.permission-group.CALENADAR\" /&gt; \n</pre>\n<p></p>\n<p><b>SMS</b> − An app with this permission has the ability to use the devices messaging services. It includes reading, writing, and editing SMS and MMS messages. Its syntax is as shown below.</p>\n<pre class=\"result notranslate\">&lt;uses-permission android:name=\"android.permission-group.SMS\" /&gt;\n</pre>\n<p></p>\n<p><b>Location</b> − An app with this permission can access the device’s location using the GPS network.</p>\n<pre class=\"result notranslate\">&lt;uses-permission android:name=\"android.permission-group.LOCATION\" /&gt; \n</pre>\n<p></p>\n<p><b>Bluetooth</b> − An app with this permission can exchange data files with other Bluetooth enabled devices wirelessly.</p>\n<pre class=\"result notranslate\">&lt;uses-permission android:name=\"android.permission.BLUETOOTH\" /&gt;</pre>"
          ]
        },
        {
          "tag_line": "Xamarin - Multiscreen App (Auf Englisch)",
          "details": [
            "<p>In this chapter, we are going to create a login system that enables a user to register. Then, we will take the registered user to the home screen of our App upon successful login.</p>\n<p>First of all, create a new project and call it <b>Login System</b>. On your new project, go to <b>main.axml</b> and add two buttons and a progress bar as shown below.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pun\">&lt;?</span><span class=\"pln\">xml version </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"1.0\"</span><span class=\"pln\"> encoding </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"utf-8\"</span><span class=\"pun\">?&gt;</span><span class=\"pln\"> \n</span><span class=\"tag\">&lt;LinearLayout</span><span class=\"pln\"> </span><span class=\"atn\">xmlns:android</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"http://schemas.android.com/apk/res/android\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:orientation</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"vertical\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"fill_parent\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"fill_parent\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:background</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@android:color/background_light\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:weightSum</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"100\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:minWidth</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"25px\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:minHeight</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"25px\"</span><span class=\"tag\">&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;TextView</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:text</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"Login App\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:textAppearance</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"?android:attr/textAppearanceMedium\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"match_parent\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_weight</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"20\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"0dp\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:textColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"#368DEB\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:id</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@+id/txtCreatAccount\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:gravity</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"center\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:textStyle</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"bold\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:textSize</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"25sp\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;Button</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:text</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"Sign In\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"match_parent\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_weight</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"15\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"0dp\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:background</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@drawable/btnSignInStyle\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:id</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@+id/btnSignIn\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_marginLeft</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"20dp\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_marginRight</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"20dp\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:textSize</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"15sp\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;Button</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:text</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"Sign Up\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"match_parent\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_weight</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"15\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"0dp\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:background</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@drawable/btnSignUpStyle\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:id</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@+id/btnSignUp\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_marginLeft</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"20dp\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_marginRight</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"20dp\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:textSize</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"15sp\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;RelativeLayout</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"match_parent\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"0dp\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_weight</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"50\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:minWidth</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"25px\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:minHeight</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"25px\"</span><span class=\"tag\">&gt;</span><span class=\"pln\"> \n      </span><span class=\"tag\">&lt;ProgressBar</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:id</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@+id/progressBar1\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:background</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@drawable/progressBarStyle\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_centerInParent</span><span class=\"pun\">=</span><span class=\"atv\">\"true\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:indeterminate</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"true\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">xmlns:tools</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"\n            http://schemas.android.com/tools\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">tools:visibility</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"invisible\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;/RelativeLayout&gt;</span><span class=\"pln\"> \n</span><span class=\"tag\">&lt;/LinearLayout&gt;</span></pre>\n<p>After creating the user interface, it’s important to style the buttons to make them look more attractive. To do this, create a new XML file under <b>drawable folder</b> and name the file as <b>btnSignInStyle.xml</b>.</p>\n<p>In the XML file, add the following lines of code −</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"tag\">&lt;selector</span><span class=\"pln\"> </span><span class=\"atn\">xmlns:android</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"http://schemas.android.com/apk/res/android\"</span><span class=\"tag\">&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;item</span><span class=\"pln\"> </span><span class=\"atn\">android:state_pressed</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"false\"</span><span class=\"tag\">&gt;</span><span class=\"pln\"> \n      </span><span class=\"tag\">&lt;layer-list&gt;</span><span class=\"pln\"> \n         </span><span class=\"tag\">&lt;item</span><span class=\"pln\"> </span><span class=\"atn\">android:right</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"5dp\"</span><span class=\"pln\"> </span><span class=\"atn\">android:top</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"5dp\"</span><span class=\"tag\">&gt;</span><span class=\"pln\"> \n            </span><span class=\"tag\">&lt;shape&gt;</span><span class=\"pln\"> \n               </span><span class=\"tag\">&lt;corners</span><span class=\"pln\"> </span><span class=\"atn\">android:radius</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"2dp\"</span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n               </span><span class=\"tag\">&lt;solid</span><span class=\"pln\"> </span><span class=\"atn\">android:color</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"#D6D6D6\"</span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n            </span><span class=\"tag\">&lt;/shape&gt;</span><span class=\"pln\"> \n         </span><span class=\"tag\">&lt;/item&gt;</span><span class=\"pln\">  \n         </span><span class=\"tag\">&lt;item</span><span class=\"pln\"> </span><span class=\"atn\">android:left</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"2dp\"</span><span class=\"pln\"> </span><span class=\"atn\">android:bottom</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"2dp\"</span><span class=\"tag\">&gt;</span><span class=\"pln\"> \n            </span><span class=\"tag\">&lt;shape&gt;</span><span class=\"pln\"> \n               </span><span class=\"tag\">&lt;corners</span><span class=\"pln\"> </span><span class=\"atn\">android:radius</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"4dp\"</span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n               </span><span class=\"tag\">&lt;gradient</span><span class=\"pln\"> </span><span class=\"atn\">android:angle</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"270\"</span><span class=\"pln\"> \n                  </span><span class=\"atn\">android:endColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"#486EA9\"</span><span class=\"pln\"> </span><span class=\"atn\">android:startColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"#486EA9\"</span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n               </span><span class=\"tag\">&lt;stroke</span><span class=\"pln\"> </span><span class=\"atn\">android:width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"1dp\"</span><span class=\"pln\"> </span><span class=\"atn\">android:color</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"#BABABA\"</span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n               </span><span class=\"tag\">&lt;padding</span><span class=\"pln\"> </span><span class=\"atn\">android:bottom</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"10dp\"</span><span class=\"pln\"> \n                  </span><span class=\"atn\">android:right</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"10dp\"</span><span class=\"pln\"> </span><span class=\"atn\">android:left</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"10dp\"</span><span class=\"pln\"> </span><span class=\"atn\">android:top</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"10dp\"</span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n            </span><span class=\"tag\">&lt;/shape&gt;</span><span class=\"pln\">  \n         </span><span class=\"tag\">&lt;/item&gt;</span><span class=\"pln\"> \n      </span><span class=\"tag\">&lt;/layer-list&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;/item&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;item</span><span class=\"pln\"> </span><span class=\"atn\">android:state_pressed</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"true\"</span><span class=\"tag\">&gt;</span><span class=\"pln\"> \n      </span><span class=\"tag\">&lt;layer-list&gt;</span><span class=\"pln\"> \n         </span><span class=\"tag\">&lt;item</span><span class=\"pln\"> </span><span class=\"atn\">android:right</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"5dp\"</span><span class=\"pln\"> </span><span class=\"atn\">android:top</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"5dp\"</span><span class=\"tag\">&gt;</span><span class=\"pln\"> \n            </span><span class=\"tag\">&lt;shape&gt;</span><span class=\"pln\"> \n               </span><span class=\"tag\">&lt;corners</span><span class=\"pln\"> </span><span class=\"atn\">android:radius</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"2dp\"</span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n               </span><span class=\"tag\">&lt;solid</span><span class=\"pln\"> </span><span class=\"atn\">android:color</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"#D6D6D6\"</span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n            </span><span class=\"tag\">&lt;/shape&gt;</span><span class=\"pln\"> \n         </span><span class=\"tag\">&lt;/item&gt;</span><span class=\"pln\">  \n         </span><span class=\"tag\">&lt;item</span><span class=\"pln\"> </span><span class=\"atn\">android:left</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"2dp\"</span><span class=\"pln\"> </span><span class=\"atn\">android:bottom</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"2dp\"</span><span class=\"tag\">&gt;</span><span class=\"pln\"> \n            </span><span class=\"tag\">&lt;shape&gt;</span><span class=\"pln\"> \n               </span><span class=\"tag\">&lt;corners</span><span class=\"pln\"> </span><span class=\"atn\">android:radius</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"4dp\"</span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n               </span><span class=\"tag\">&lt;gradient</span><span class=\"pln\"> </span><span class=\"atn\">android:angle</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"270\"</span><span class=\"pln\"> \n                  </span><span class=\"atn\">android:endColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"#79C791\"</span><span class=\"pln\"> </span><span class=\"atn\">android:startColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"#486EA9\"</span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n               </span><span class=\"tag\">&lt;stroke</span><span class=\"pln\"> </span><span class=\"atn\">android:radius</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"4dp\"</span><span class=\"pln\"> </span><span class=\"atn\">android:color</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"#BABABA\"</span><span class=\"tag\">/&gt;</span><span class=\"pln\">\n               </span><span class=\"tag\">&lt;padding</span><span class=\"pln\"> </span><span class=\"atn\">android:bottom</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"10dp\"</span><span class=\"pln\"> \n                  </span><span class=\"atn\">android:right</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"10dp\"</span><span class=\"pln\"> </span><span class=\"atn\">android:left</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"10dp\"</span><span class=\"pln\"> </span><span class=\"atn\">android:top</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"10dp\"</span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n            </span><span class=\"tag\">&lt;/shape&gt;</span><span class=\"pln\"> \n         </span><span class=\"tag\">&lt;/item&gt;</span><span class=\"pln\"> \n      </span><span class=\"tag\">&lt;/layer-list&gt;</span><span class=\"pln\"> \n  </span><span class=\"tag\">&lt;/item&gt;</span><span class=\"pln\"> \n</span><span class=\"tag\">&lt;/selector&gt;</span><span class=\"pln\">          </span></pre>\n<p>The above code sets the colors of the button on load and on click, it also sets the border radius of the button.</p>\n<p>Next, we create a similar styling XML as above for the <b>signup</b> button. To do this, create another XML under <b>drawable</b> folder and call it <b>btnSignUpStyle.xml</b>. It will inherit everything from <b>btnSignInStyle.xml</b>. The only difference will be the buttons’ gradient start and end color.</p>\n<p>Change the <b>startColor</b> and <b>endColor</b> in <b>btnSignUpStyle.xml</b> to</p>\n<pre class=\"result notranslate\">&lt;gradient android:angle=\"270\" \n   android:endColor=\"#008000\" android:startColor=\"#008000\"/&gt;\n</pre>\n<p>Go to <b>layout folder</b> and create a new AXML file and call it registerDailog.axml. This file will contain registration details for new users in our app. The page will contain three <b>EditTexts</b> and a button to submit the data. Add the following code inside your linear layout code.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"tag\">&lt;EditText</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"match_parent\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_marginBottom</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"10dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_marginTop</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"25dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_marginRight</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"25dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_marginLeft</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"25dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"35dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:paddingLeft</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"10dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:id</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@+id/txtUsername\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:hint</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"Username\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:textColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"#000\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n</span><span class=\"tag\">&lt;EditText</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"match_parent\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"35dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:id</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@+id/txtEmail\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_marginBottom</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"10dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_marginTop</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"25dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_marginRight</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"25dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_marginLeft</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"25dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:paddingLeft</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"10dp\"</span><span class=\"pln\">\n   </span><span class=\"atn\">android:textColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"#000\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:hint</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"Email\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n</span><span class=\"tag\">&lt;EditText</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"match_parent\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"35dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_marginBottom</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"10dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_marginTop</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"25dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_marginRight</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"25dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_marginLeft</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"25dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:paddingLeft</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"10dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:textColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"#000\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:id</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@+id/txtPassword\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:hint</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"Password\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\">\n</span><span class=\"tag\">&lt;Button</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:text</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"Sign Up\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"match_parent\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:id</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@+id/btnSave\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:textSize</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"20dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:textColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"#fff\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:textStyle</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"bold\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"70dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:background</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@drawable/btnSignUpStyle\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:paddingLeft</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"5dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:paddingRight</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"5dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:paddingTop</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"5dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:paddingBottom</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"5dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_marginLeft</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"25dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_marginRight</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"25dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_centerHorizontal</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"true\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> </span></pre>\n<p>Next, add a new class called <b>signUpDialog.cs</b>. This class will contain the code required to create a dialog box. The following example shows the code.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">OnSignUpEvent</span><span class=\"pun\">:</span><span class=\"typ\">EventArgs</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n   </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">string</span><span class=\"pln\"> myUserName</span><span class=\"pun\">;</span><span class=\"pln\"> \n   </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">string</span><span class=\"pln\"> myEmail</span><span class=\"pun\">;</span><span class=\"pln\"> \n   </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">string</span><span class=\"pln\"> myPassword</span><span class=\"pun\">;</span><span class=\"pln\"> \n   </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">string</span><span class=\"pln\"> </span><span class=\"typ\">UserName</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n      </span><span class=\"kwd\">get</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n         </span><span class=\"kwd\">return</span><span class=\"pln\"> myUserName</span><span class=\"pun\">;</span><span class=\"pln\"> \n      </span><span class=\"pun\">}</span><span class=\"pln\"> \n      </span><span class=\"kwd\">set</span><span class=\"pun\">{</span><span class=\"pln\"> \n         myUserName </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">value</span><span class=\"pun\">;</span><span class=\"pln\">\n      </span><span class=\"pun\">}</span><span class=\"pln\"> \n   </span><span class=\"pun\">}</span><span class=\"pln\"> \n      \n   </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">string</span><span class=\"pln\"> </span><span class=\"typ\">Email</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n      </span><span class=\"kwd\">get</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n         </span><span class=\"kwd\">return</span><span class=\"pln\"> myEmail</span><span class=\"pun\">;</span><span class=\"pln\"> \n      </span><span class=\"pun\">}</span><span class=\"pln\"> \n      </span><span class=\"kwd\">set</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n         myEmail </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">value</span><span class=\"pun\">;</span><span class=\"pln\"> \n      </span><span class=\"pun\">}</span><span class=\"pln\"> \n   </span><span class=\"pun\">}</span><span class=\"pln\"> \n      \n   </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">string</span><span class=\"pln\"> </span><span class=\"typ\">Password</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n      </span><span class=\"kwd\">get</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n         </span><span class=\"kwd\">return</span><span class=\"pln\"> myPassword</span><span class=\"pun\">;</span><span class=\"pln\"> \n      </span><span class=\"pun\">}</span><span class=\"pln\"> \n      </span><span class=\"kwd\">set</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n         myPassword </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">value</span><span class=\"pun\">;</span><span class=\"pln\"> \n      </span><span class=\"pun\">}</span><span class=\"pln\"> \n   </span><span class=\"pun\">}</span><span class=\"pln\">  \n   </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">OnSignUpEvent</span><span class=\"pun\">(</span><span class=\"kwd\">string</span><span class=\"pln\"> username</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">string</span><span class=\"pln\"> \n      email</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">string</span><span class=\"pln\"> password</span><span class=\"pun\">):</span><span class=\"kwd\">base</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n      </span><span class=\"typ\">UserName</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> username</span><span class=\"pun\">;</span><span class=\"pln\"> \n      </span><span class=\"typ\">Email</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> email</span><span class=\"pun\">;</span><span class=\"pln\"> \n      </span><span class=\"typ\">Password</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> password</span><span class=\"pun\">;</span><span class=\"pln\"> \n   </span><span class=\"pun\">}</span><span class=\"pln\"> \n     \n   </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">SignUpDialog</span><span class=\"pun\">:</span><span class=\"typ\">DialogFragment</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n      </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">EditText</span><span class=\"pln\"> txtUsername</span><span class=\"pun\">;</span><span class=\"pln\"> \n      </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">EditText</span><span class=\"pln\"> txtEmail</span><span class=\"pun\">;</span><span class=\"pln\"> \n      </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">EditText</span><span class=\"pln\"> txtPassword</span><span class=\"pun\">;</span><span class=\"pln\"> \n      </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">Button</span><span class=\"pln\"> btnSaveSignUp</span><span class=\"pun\">;</span><span class=\"pln\"> \n      </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">event</span><span class=\"pln\"> </span><span class=\"typ\">EventHandler</span><span class=\"pun\">&lt;</span><span class=\"typ\">OnSignUpEvent</span><span class=\"pun\">&gt;</span><span class=\"pln\"> onSignUpComplete</span><span class=\"pun\">;</span><span class=\"pln\"> \n      </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">override</span><span class=\"pln\"> </span><span class=\"typ\">View</span><span class=\"pln\"> </span><span class=\"typ\">OnCreateView</span><span class=\"pun\">(</span><span class=\"typ\">LayoutInflater</span><span class=\"pln\"> inflater</span><span class=\"pun\">,</span><span class=\"pln\"> \n         </span><span class=\"typ\">ViewGroup</span><span class=\"pln\"> container</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Bundle</span><span class=\"pln\"> savedInstanceState</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n         </span><span class=\"kwd\">base</span><span class=\"pun\">.</span><span class=\"typ\">OnCreateView</span><span class=\"pun\">(</span><span class=\"pln\">inflater</span><span class=\"pun\">,</span><span class=\"pln\"> container</span><span class=\"pun\">,</span><span class=\"pln\"> savedInstanceState</span><span class=\"pun\">);</span><span class=\"pln\">       \n         </span><span class=\"kwd\">var</span><span class=\"pln\"> view </span><span class=\"pun\">=</span><span class=\"pln\"> inflater</span><span class=\"pun\">.</span><span class=\"typ\">Inflate</span><span class=\"pun\">(</span><span class=\"typ\">Resource</span><span class=\"pun\">.</span><span class=\"typ\">Layout</span><span class=\"pun\">.</span><span class=\"pln\">registerDialog</span><span class=\"pun\">,</span><span class=\"pln\"> container</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">);</span><span class=\"pln\"> \n         txtUsername </span><span class=\"pun\">=</span><span class=\"pln\"> view</span><span class=\"pun\">.</span><span class=\"typ\">FindViewById</span><span class=\"pun\">&lt;</span><span class=\"typ\">EditText</span><span class=\"pun\">&gt;(</span><span class=\"typ\">Resource</span><span class=\"pun\">.</span><span class=\"typ\">Id</span><span class=\"pun\">.</span><span class=\"pln\">txtUsername</span><span class=\"pun\">);</span><span class=\"pln\"> \n         txtEmail </span><span class=\"pun\">=</span><span class=\"pln\"> view</span><span class=\"pun\">.</span><span class=\"typ\">FindViewById</span><span class=\"pun\">&lt;</span><span class=\"typ\">EditText</span><span class=\"pun\">&gt;(</span><span class=\"typ\">Resource</span><span class=\"pun\">.</span><span class=\"typ\">Id</span><span class=\"pun\">.</span><span class=\"pln\">txtEmail</span><span class=\"pun\">);</span><span class=\"pln\"> \n         txtPassword </span><span class=\"pun\">=</span><span class=\"pln\"> view</span><span class=\"pun\">.</span><span class=\"typ\">FindViewById</span><span class=\"pun\">&lt;</span><span class=\"typ\">EditText</span><span class=\"pun\">&gt;(</span><span class=\"typ\">Resource</span><span class=\"pun\">.</span><span class=\"typ\">Id</span><span class=\"pun\">.</span><span class=\"pln\">txtPassword</span><span class=\"pun\">);</span><span class=\"pln\">\n         btnSaveSignUp </span><span class=\"pun\">=</span><span class=\"pln\"> view</span><span class=\"pun\">.</span><span class=\"typ\">FindViewById</span><span class=\"pun\">&lt;</span><span class=\"typ\">Button</span><span class=\"pun\">&gt;(</span><span class=\"typ\">Resource</span><span class=\"pun\">.</span><span class=\"typ\">Id</span><span class=\"pun\">.</span><span class=\"pln\">btnSave</span><span class=\"pun\">);</span><span class=\"pln\"> \n         btnSaveSignUp</span><span class=\"pun\">.</span><span class=\"typ\">Click</span><span class=\"pln\"> </span><span class=\"pun\">+=</span><span class=\"pln\"> btnSaveSignUp_Click</span><span class=\"pun\">;</span><span class=\"pln\">   \n         </span><span class=\"kwd\">return</span><span class=\"pln\"> view</span><span class=\"pun\">;</span><span class=\"pln\"> \n      </span><span class=\"pun\">}</span><span class=\"pln\">  \n      </span><span class=\"kwd\">void</span><span class=\"pln\"> btnSaveSignUp_Click</span><span class=\"pun\">(</span><span class=\"kwd\">object</span><span class=\"pln\"> sender</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">EventArgs</span><span class=\"pln\"> e</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n         onSignUpComplete</span><span class=\"pun\">.</span><span class=\"typ\">Invoke</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">OnSignUpEvent</span><span class=\"pun\">(</span><span class=\"pln\">txtUsername</span><span class=\"pun\">.</span><span class=\"typ\">Text</span><span class=\"pun\">,</span><span class=\"pln\"> \n         \n            txtEmail</span><span class=\"pun\">.</span><span class=\"typ\">Text</span><span class=\"pun\">,</span><span class=\"pln\"> txtPassword</span><span class=\"pun\">.</span><span class=\"typ\">Text</span><span class=\"pun\">));</span><span class=\"pln\"> \n         </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"typ\">Dismiss</span><span class=\"pun\">();</span><span class=\"pln\"> \n      </span><span class=\"pun\">}</span><span class=\"pln\"> \n   </span><span class=\"pun\">}</span><span class=\"pln\">\n</span><span class=\"pun\">}</span><span class=\"pln\">   </span></pre>\n<p>In the above code, we have used the <b>get</b> and <b>set</b> properties. The <b>get</b> method returns a variable, while the <b>set</b> method assigns a value to the returned variable. Here is an example −</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">string</span><span class=\"pln\"> </span><span class=\"typ\">Color</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n   </span><span class=\"kwd\">get</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n      </span><span class=\"kwd\">return</span><span class=\"pln\"> color</span><span class=\"pun\">;</span><span class=\"pln\">  \n   </span><span class=\"pun\">}</span><span class=\"pln\"> \n   </span><span class=\"kwd\">set</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n      color </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">value</span><span class=\"pun\">;</span><span class=\"pln\">  \n   </span><span class=\"pun\">}</span><span class=\"pln\"> \n</span><span class=\"pun\">}</span></pre>\n<p>In our previous example, we created a method that overrides a view. Inside the method, we created a <b>var</b> called <b>view</b> which referenced to a <b>registerDialog.axml</b> contained in the layout folder.</p>\n<p>Next, go to <b>mainActivity.cs</b> to create the dialog fragment.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">Button</span><span class=\"pln\"> signUp</span><span class=\"pun\">;</span><span class=\"pln\"> \n</span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">Button</span><span class=\"pln\"> submitNewUser</span><span class=\"pun\">;</span><span class=\"pln\"> \n</span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">EditText</span><span class=\"pln\"> txtUsername</span><span class=\"pun\">;</span><span class=\"pln\"> \n</span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">EditText</span><span class=\"pln\"> txtEmail</span><span class=\"pun\">;</span><span class=\"pln\"> \n</span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">EditText</span><span class=\"pln\"> txtPassword</span><span class=\"pun\">;</span><span class=\"pln\"> \n\n</span><span class=\"kwd\">protected</span><span class=\"pln\"> </span><span class=\"kwd\">override</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> </span><span class=\"typ\">OnCreate</span><span class=\"pun\">(</span><span class=\"typ\">Bundle</span><span class=\"pln\"> bundle</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n   </span><span class=\"kwd\">base</span><span class=\"pun\">.</span><span class=\"typ\">OnCreate</span><span class=\"pun\">(</span><span class=\"pln\">bundle</span><span class=\"pun\">);</span><span class=\"pln\">  \n   </span><span class=\"typ\">SetContentView</span><span class=\"pun\">(</span><span class=\"typ\">Resource</span><span class=\"pun\">.</span><span class=\"typ\">Layout</span><span class=\"pun\">.</span><span class=\"typ\">Main</span><span class=\"pun\">);</span><span class=\"pln\">\n   signUp </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">FindViewById</span><span class=\"pun\">&lt;</span><span class=\"typ\">Button</span><span class=\"pun\">&gt;(</span><span class=\"typ\">Resource</span><span class=\"pun\">.</span><span class=\"typ\">Id</span><span class=\"pun\">.</span><span class=\"pln\">btnSignUp</span><span class=\"pun\">);</span><span class=\"pln\"> \n   submitNewUser </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">FindViewById</span><span class=\"pun\">&lt;</span><span class=\"typ\">Button</span><span class=\"pun\">&gt;(</span><span class=\"typ\">Resource</span><span class=\"pun\">.</span><span class=\"typ\">Id</span><span class=\"pun\">.</span><span class=\"pln\">btnSave</span><span class=\"pun\">);</span><span class=\"pln\"> \n   txtUsername </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">FindViewById</span><span class=\"pun\">&lt;</span><span class=\"typ\">EditText</span><span class=\"pun\">&gt;(</span><span class=\"typ\">Resource</span><span class=\"pun\">.</span><span class=\"typ\">Id</span><span class=\"pun\">.</span><span class=\"pln\">txtUsername</span><span class=\"pun\">);</span><span class=\"pln\"> \n   txtEmail </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">FindViewById</span><span class=\"pun\">&lt;</span><span class=\"typ\">EditText</span><span class=\"pun\">&gt;(</span><span class=\"typ\">Resource</span><span class=\"pun\">.</span><span class=\"typ\">Id</span><span class=\"pun\">.</span><span class=\"pln\">txtEmail</span><span class=\"pun\">);</span><span class=\"pln\"> \n   txtPassword </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">FindViewById</span><span class=\"pun\">&lt;</span><span class=\"typ\">EditText</span><span class=\"pun\">&gt;(</span><span class=\"typ\">Resource</span><span class=\"pun\">.</span><span class=\"typ\">Id</span><span class=\"pun\">.</span><span class=\"pln\">txtPassword</span><span class=\"pun\">);</span><span class=\"pln\"> \n            \n   signUp</span><span class=\"pun\">.</span><span class=\"typ\">Click</span><span class=\"pln\"> </span><span class=\"pun\">+=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">object</span><span class=\"pln\"> sender</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">EventArgs</span><span class=\"pln\"> args</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n      </span><span class=\"typ\">FragmentTransaction</span><span class=\"pln\"> transFrag </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">FragmentManager</span><span class=\"pun\">.</span><span class=\"typ\">BeginTransaction</span><span class=\"pun\">();</span><span class=\"pln\"> \n      </span><span class=\"typ\">SignUpDialog</span><span class=\"pln\"> diagSignUp </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">SignUpDialog</span><span class=\"pun\">();</span><span class=\"pln\"> \n      diagSignUp</span><span class=\"pun\">.</span><span class=\"typ\">Show</span><span class=\"pun\">(</span><span class=\"pln\">transFrag</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"Fragment Dialog\"</span><span class=\"pun\">);</span><span class=\"pln\"> \n      diagSignUp</span><span class=\"pun\">.</span><span class=\"pln\">onSignUpComplete </span><span class=\"pun\">+=</span><span class=\"pln\"> diagSignUp_onSignUpComplete</span><span class=\"pun\">;</span><span class=\"pln\"> \n   </span><span class=\"pun\">};</span><span class=\"pln\"> \n</span><span class=\"pun\">}</span><span class=\"pln\">  \n</span><span class=\"kwd\">void</span><span class=\"pln\"> diagSignUp_onSignUpComplete</span><span class=\"pun\">(</span><span class=\"kwd\">object</span><span class=\"pln\"> sender</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">OnSignUpEvent</span><span class=\"pln\"> e</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> \n   </span><span class=\"typ\">StartActivity</span><span class=\"pun\">(</span><span class=\"kwd\">typeof</span><span class=\"pun\">(</span><span class=\"typ\">Activity2</span><span class=\"pun\">));</span><span class=\"pln\"> \n</span><span class=\"pun\">}</span><span class=\"pln\">             </span></pre>\n<p>The above code contains a button click event which when clicked loads the signUp dialog. Inside the button click, we created a <b>SignUpDialog</b> class which loads the <b>registerDialog.axml</b> file.</p>\n<p>We then used <b>FragmentTransaction transFrag</b> = <b>FragmentManager.BeginTransaction();</b> to show our <b>registerDialog</b> page as an Android Dialog Fragment.</p>\n<p>We are going to add another <b>.axml</b> file called <b>home.axml</b>. This layout will be the landing screen once a user successfully logs into the system. Inside this layout, we are going to add a textview as shown in the following code.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"tag\">&lt;TextView</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:text</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"You have been succesfully registered. Welcome!\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:textAppearance</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"?android:attr/textAppearanceLarge\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"match_parent\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:id</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@+id/textView1\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> </span></pre>"
          ]
        },
        {
          "tag_line": "Xamarin - Layouts (Auf Englisch)" ,
          "details": [
            "<h2>Linear Layout</h2>\n<p>In linear layout, the contents are arranged in either horizontal or vertical manner.</p>\n<h3>Linear Layout ─ Horizontal</h3>\n<p>The contents of this layout are arranged horizontally. For this demo, we are going to create 3 buttons and arrange them horizontally in a linear layout.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pun\">&lt;?</span><span class=\"pln\">xml version </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"1.0\"</span><span class=\"pln\"> encoding </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"utf-8\"</span><span class=\"pun\">?&gt;</span><span class=\"pln\"> \n</span><span class=\"tag\">&lt;LinearLayout</span><span class=\"pln\"> </span><span class=\"atn\">xmlns:android</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"http://schemas.android.com/apk/res/android\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:orientation</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"horizontal\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"fill_parent\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"fill_parent\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:background</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"#d3d3d3\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:minWidth</span><span class=\"pun\">=</span><span class=\"atv\">\"25px\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:minHeight</span><span class=\"pun\">=</span><span class=\"atv\">\"25px\"</span><span class=\"tag\">&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;Button</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:id</span><span class=\"pun\">=</span><span class=\"atv\">\"@+id/MyButton1\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_width</span><span class=\"pun\">=</span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_margin</span><span class=\"pun\">=</span><span class=\"atv\">\"10dp\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_height</span><span class=\"pun\">=</span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:text</span><span class=\"pun\">=</span><span class=\"atv\">\"Button 1\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:background</span><span class=\"pun\">=</span><span class=\"atv\">\"@android:color/holo_green_dark\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;Button</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:id</span><span class=\"pun\">=</span><span class=\"atv\">\"@+id/MyButton2\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_width</span><span class=\"pun\">=</span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_margin</span><span class=\"pun\">=</span><span class=\"atv\">\"10dp\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_height</span><span class=\"pun\">=</span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:text</span><span class=\"pun\">=</span><span class=\"atv\">\"Button 2\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:background</span><span class=\"pun\">=</span><span class=\"atv\">\"@android:color/holo_green_dark\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;Button</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:id</span><span class=\"pun\">=</span><span class=\"atv\">\"@+id/MyButton3\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_width</span><span class=\"pun\">=</span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_margin</span><span class=\"pun\">=</span><span class=\"atv\">\"10dp\"</span><span class=\"pln\">\n      </span><span class=\"atn\">android:layout_height</span><span class=\"pun\">=</span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:text</span><span class=\"pun\">=</span><span class=\"atv\">\"Button 3\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:background</span><span class=\"pun\">=</span><span class=\"atv\">\"@android:color/holo_green_dark\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n</span><span class=\"tag\">&lt;/LinearLayout&gt;</span><span class=\"pln\">         </span></pre>\n<p>The resulting output is as shown below −</p>\n<img src=\"/xamarin/images/linear_layout_horizontal.jpg\" alt=\"Linear Layout Horizontal\">\n<h3>Linear Layout ─ Vertical</h3>\n<p>This type of layout places the child view in a vertical manner.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pun\">&lt;?</span><span class=\"pln\">xml version </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"1.0\"</span><span class=\"pln\"> encoding </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"utf-8\"</span><span class=\"pun\">?&gt;</span><span class=\"pln\"> \n</span><span class=\"tag\">&lt;LinearLayout</span><span class=\"pln\"> </span><span class=\"atn\">xmlns:android</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"http://schemas.android.com/apk/res/android\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:orientation</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"vertical\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"fill_parent\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"fill_parent\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:background</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"#d3d3d3\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:minWidth</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"25px\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:minHeight</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"25px\"</span><span class=\"tag\">&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;Button</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:id</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@+id/MyButton1\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"fill_parent\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_margin</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"10dp\"</span><span class=\"pln\">\n      </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:text</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"Button 1\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:background</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@android:color/holo_green_dark\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;Button</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:id</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@+id/MyButton2\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"fill_parent\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_margin</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"10dp\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:text</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"Button 2\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:background</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@android:color/holo_green_dark\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;Button</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:id</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@+id/MyButton3\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"fill_parent\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_margin</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"10dp\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:text</span><span class=\"pun\">=</span><span class=\"atv\">\"Button 3\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:background</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@android:color/holo_green_dark\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n</span><span class=\"tag\">&lt;/LinearLayout&gt;</span><span class=\"pln\"> </span></pre>\n<p>Its resulting output is as follows −</p>\n<img src=\"/xamarin/images/linear_layout_vertical.jpg\" alt=\"Linear layout Vertical\">\n<h2>Relative Layout</h2>\n<p>In this view, the position of the child view is relative to its parent or to its sibling view. In the following example, we are going to create 3 EditText views and a button and then, align them relatively.</p>\n<p>Create a new project and call it <b>relative layout app</b>. Open <b>main.axml</b> and add the following code.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pun\">&lt;?</span><span class=\"pln\">xml version </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"1.0\"</span><span class=\"pln\"> encoding </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"utf-8\"</span><span class=\"pun\">?&gt;</span><span class=\"pln\"> \n</span><span class=\"tag\">&lt;RelativeLayout</span><span class=\"pln\"> </span><span class=\"atn\">xmlns:android</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"http://schemas.android.com/apk/res/android\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"match_parent\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"match_parent\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:paddingLeft</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"16dp\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:background</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"#d3d3d3\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:paddingRight</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"16dp\"</span><span class=\"tag\">&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;EditText</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:id</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@+id/name\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"match_parent\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:hint</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"First Name\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:textColorHint</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@android:color/background_dark\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:textColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@android:color/background_dark\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;EditText</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:id</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@+id/lastName\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"0dp\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:hint</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"Last Name\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_below</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@id/name\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:textColorHint</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@android:color/background_dark\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:textColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@android:color/background_dark\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_alignParentLeft</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"true\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_toLeftOf</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@+id/age\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;EditText</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:id</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@id/age\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"80dp\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_below</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@id/name\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:hint</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"Age\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:textColorHint</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@android:color/background_dark\"</span><span class=\"pln\">\n      </span><span class=\"atn\">android:textColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@android:color/background_dark\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_alignParentRight</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"true\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;Button</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"85dp\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_below</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@id/age\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_alignParentRight</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"true\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:text</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"Submit\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:background</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@android:color/holo_green_dark\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n</span><span class=\"tag\">&lt;/RelativeLayout&gt;</span><span class=\"pln\"> </span></pre>\n<p>The important parameters that we have used in this code are −</p>\n<ul class=\"list\">\n<li><p><b>android:layout_below</b> − It aligns the child view element below its parent.</p></li>\n<li><p><b>android:layout_alignParentLeft</b> − It aligns the parent element to the left.</p></li>\n<li><p><b>android:layout_toLeftOf</b> − This property aligns an element to the left of another element.</p></li>\n<li><p><b>android:layout_alignParentRight</b> − It aligns the parent to the right.</p></li>\n</ul>\n<p>When you build and run the App now, it would produce the following output screen −</p>\n<img src=\"/xamarin/images/relative_layout.jpg\" alt=\"Relative Layout\">\n<h2>Frame Layout</h2>\n<p>The frame layout is used to display only one item. It’s difficult to arrange multiple items in this layout without having them overlap each other.</p>\n<p>Start a new project and call it <b>frameLayoutApp</b>. Create a new Frame Layout as shown below.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pun\">&lt;?</span><span class=\"pln\">xml version </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"1.0\"</span><span class=\"pln\"> encoding </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"utf-8\"</span><span class=\"pun\">?&gt;</span><span class=\"pln\"> \n</span><span class=\"tag\">&lt;FrameLayout</span><span class=\"pln\"> </span><span class=\"atn\">xmlns:android</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"http://schemas.android.com/apk/res/android\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"fill_parent\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"fill_parent\"</span><span class=\"tag\">&gt;</span><span class=\"pln\"> \n  </span><span class=\"tag\">&lt;ImageView</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:id</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@+id/ImageView1\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:scaleType</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"matrix\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"fill_parent\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"fill_parent\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:src</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@drawable/img1\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;TextView</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"fill_parent\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:textSize</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"50dp\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:textColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"#000\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:text</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"This is a Lake\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;TextView</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:gravity</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"right\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"fill_parent\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:textSize</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"50dp\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:text</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"A very Deep Lake\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:layout_gravity</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"bottom\"</span><span class=\"pln\"> \n      </span><span class=\"atn\">android:textColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"#fff\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n</span><span class=\"tag\">&lt;/FrameLayout&gt;</span></pre>\n<p>The above code creates an <b>imageView</b> which fills the entire screen. Two textviews then float above the <b>imageView</b>.</p>\n<p>Now, build and run your application. It will display the following output −</p>\n<img src=\"/xamarin/images/frame_layout.jpg\" alt=\"Frame layout\">\n<h2>Table Layout</h2>\n<p>In this layout, the view is arranged into <b>rows</b> and <b>columns</b>. Let’s see how it works.</p>\n<pre class=\"prettyprint notranslate prettyprinted\" style=\"\"><span class=\"pun\">&lt;?</span><span class=\"pln\">xml version </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"1.0\"</span><span class=\"pln\"> encoding </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">\"utf-8\"</span><span class=\"pun\">?&gt;</span><span class=\"pln\"> \n</span><span class=\"tag\">&lt;TableLayout</span><span class=\"pln\"> </span><span class=\"atn\">xmlns:android</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"http://schemas.android.com/apk/res/android\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"fill_parent\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:background</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"#d3d3d3\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"fill_parent\"</span><span class=\"pln\"> \n   </span><span class=\"atn\">android:stretchColumns</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"1\"</span><span class=\"tag\">&gt;</span><span class=\"pln\"> \n   \n   </span><span class=\"tag\">&lt;TableRow&gt;</span><span class=\"pln\"> \n      </span><span class=\"tag\">&lt;TextView</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:text</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"First Name:\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:textColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@android:color/black\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n      </span><span class=\"tag\">&lt;EditText</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"100px\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"fill_parent\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"30dp\"</span><span class=\"pln\">\n         </span><span class=\"atn\">android:textColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@android:color/black\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;/TableRow&gt;</span><span class=\"pln\"> \n   \n   </span><span class=\"tag\">&lt;TableRow&gt;</span><span class=\"pln\"> \n      </span><span class=\"tag\">&lt;TextView</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:text</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"Last Name:\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:textColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@android:color/black\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n      </span><span class=\"tag\">&lt;EditText</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"50px\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"fill_parent\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"30dp\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:textColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@android:color/black\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;/TableRow&gt;</span><span class=\"pln\"> \n   \n   </span><span class=\"tag\">&lt;TableRow&gt;</span><span class=\"pln\"> \n      </span><span class=\"tag\">&lt;TextView</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:text</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"Residence:\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:textColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@android:color/black\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n      </span><span class=\"tag\">&lt;EditText</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"100px\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"fill_parent\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"30dp\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:textColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@android:color/black\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;/TableRow&gt;</span><span class=\"pln\"> \n   \n   </span><span class=\"tag\">&lt;TableRow&gt;</span><span class=\"pln\"> \n      </span><span class=\"tag\">&lt;TextView</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:text</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"Occupation:\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:textColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@android:color/black\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n      </span><span class=\"tag\">&lt;EditText</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"100px\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"fill_parent\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"30dp\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:textColor</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@android:color/black\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;/TableRow&gt;</span><span class=\"pln\"> \n   \n   </span><span class=\"tag\">&lt;TableRow&gt;</span><span class=\"pln\">\n      </span><span class=\"tag\">&lt;Button</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:text</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"Cancel\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_margin</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"10dp\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:background</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@android:color/holo_green_dark\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n      </span><span class=\"tag\">&lt;Button</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:text</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"Submit\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"100px\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_margin</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"10dp\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_width</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:layout_height</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"wrap_content\"</span><span class=\"pln\"> \n         </span><span class=\"atn\">android:background</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"atv\">\"@android:color/holo_green_dark\"</span><span class=\"pln\"> </span><span class=\"tag\">/&gt;</span><span class=\"pln\"> \n   </span><span class=\"tag\">&lt;/TableRow&gt;</span><span class=\"pln\"> \n</span><span class=\"tag\">&lt;/TableLayout&gt;</span><span class=\"pln\">     </span></pre>"
          ]
        }
      ]
    }
  ]
}