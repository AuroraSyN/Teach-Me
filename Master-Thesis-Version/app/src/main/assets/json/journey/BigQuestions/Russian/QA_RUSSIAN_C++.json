{
  "questionnaires": [
    {
      "question": "Триграф начинается с",
      "answers": [
        "#",
        "##",
        "?",
        "??"
      ],
      "correct_answer": 2
    },
    {
      "question": "Каков вывод следующей программы? <p>#include&lt;iostream&gt;<br />\nusing namespace std;<br />\nclass abc {</p>\n\n<p>&nbsp;&nbsp; public:<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i;</p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; abc(int i) {<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i = i;<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\n};</p>\n\n<p>main() {<br />\n&nbsp;&nbsp; abc m(5);<br />\n&nbsp; &nbsp;<br />\n&nbsp;&nbsp; cout&lt;&lt;m.i;<br />\n}</p>\n",
      "answers": [
        "5",
        "Garbage",
        "Error at the statement i=i;",
        "Compile error: ‘i’ declared twice."
      ],
      "correct_answer": 1
    },
    {
      "question": "С каким спецификатором памяти изменяется переменная-член, даже если объект класса является постоянным объектом?",
      "answers": [
        "auto",
        "register",
        "static",
        "mutable"
      ],
      "correct_answer": 3
    },
    {
      "question": "Мы можем использовать указатели в статической функции-члене класса.",
      "answers": [
        "true",
        "false"
      ],
      "correct_answer": 1
    },
    {
      "question": "Объекты, созданные с новым оператором, хранятся в __ памяти.",
      "answers": [
        "Cache",
        "Heap",
        "Stack",
        "None of the above."
      ],
      "correct_answer": 1
    },
    {
      "question": "Для каждого потока >> (оператор) называется как",
      "answers": [
        "Insertion operator",
        "Extraction operator",
        "Right shift operator",
        "Left shift operator"
      ],
      "correct_answer": 1
    },
    {
      "question": "i) Технически обработка исключений предлагает множественное ветвление.\n\n  ii) Обработка исключений может быть смоделирована с помощью конструкции goto.",
      "answers": [
        "Only (i) is true",
        "Only (ii) is true",
        "Both (i) & (ii) are true",
        "Both (i) && (ii) are false"
      ],
      "correct_answer": 0
    },
    {
      "question": "Каков вывод следующей программы? <p>#include&lt;iostream&gt;</p>\n\n<p>using namespace std;<br />\nvoid swap(int m, int n) {<br />\n&nbsp;&nbsp; int x = m;<br />\n&nbsp;&nbsp; m = n;<br />\n&nbsp;&nbsp; n = x;<br />\n}<br />\nmain() {<br />\n&nbsp;&nbsp; int x = 5, y = 3; &nbsp;<br />\n&nbsp;&nbsp; swap(x,y);<br />\n&nbsp;&nbsp; cout&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;y;<br />\n}</p>\n ",
      "answers": [
        "3 5",
        "5 3",
        "5 5",
        "Compile error"
      ],
      "correct_answer": 1
    },
    {
      "question": "Определите компилятор C ++ для Linux",
      "answers": [
        "cpp",
        "g++",
        "Borland",
        "vc++"
      ],
      "correct_answer": 1
    },
    {
      "question": "Что такое встроенная функция библиотеки для сравнения двух строк?",
      "answers": [
        "string_cmp()",
        "strcmp()",
        "equals()",
        "str_compare()"
      ],
      "correct_answer": 1
    },
    {
      "question": "Каков вывод следующей программы? <p>#include&lt;iostream&gt;</p>\n\n<p>using namespace std;<br />\nmain() {<br />\n&nbsp;&nbsp; int i = 13, j = 60;<br />\n&nbsp;&nbsp; i^=j;<br />\n&nbsp;&nbsp; j^=i;<br />\n&nbsp;&nbsp; i^=j;<br />\n&nbsp;&nbsp; cout&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;j;<br />\n}</p>\n",
      "answers": [
        "73 73",
        "60 13",
        "13 60",
        "60 60"
      ],
      "correct_answer": 1
    },
    {
      "question": "Что такое универсальный класс?",
      "answers": [
        "Function template",
        "Class template",
        "Inherited class",
        "None of the above."
      ],
      "correct_answer": 1
    },
    {
      "question": "Каков вывод следующей программы? <p>#include&lt;iostream&gt;</p>\n\n<p>using namespace std;<br />\nvoid f() {<br />\n&nbsp;&nbsp; cout&lt;&lt;&quot;Hello&quot;&lt;&lt;endl;<br />\n}<br />\nmain() {<br />\n}</p>\n",
      "answers": [
        "No output",
        "Error, as the function is not called.",
        "Error, as the function is defined without its declaration",
        "Error, as the main() function is left empty"
      ],
      "correct_answer": 0
    },
    {
      "question": "Объекты, созданные с новым оператором, хранятся в __ памяти",
      "answers": [
        "Cache",
        "Heap",
        "Stack",
        "None of the above"
      ],
      "correct_answer": 1
    },
    {
      "question": "Функция класса, которая вызывается автоматически при создании объекта, называется __",
      "answers": [
        "Constructor",
        "Destructor",
        "Friend function",
        "Inline function"
      ],
      "correct_answer": 0
    },
    {
      "question": "Каков вывод следующей программы? <p>#include&lt;iostream&gt;</p>\n\n<p>using namespace std;<br />\nmain() {<br />\n&nbsp;&nbsp; char s[] = &quot;Fine&quot;;<br />\n&nbsp;&nbsp; &nbsp;*s = &#39;N&#39;;<br />\n&nbsp; &nbsp;<br />\n&nbsp;&nbsp; cout&lt;&lt;s&lt;&lt;endl;<br />\n}</p>\n",
      "answers": [
        "a) Fine",
        "b) Nine",
        "c) Compile error",
        "d) Runtime error"
      ],
      "correct_answer": 1
    },
    {
      "question": "Как класс может действовать как интерфейс в C ++?",
      "answers": [
        "By only providing all the functions as virtual functions in the class.",
        "Defining the class following with the keyword virtual",
        "Defining the class following with the keyword interface",
        "Defining the class following with the keyword abstract"
      ],
      "correct_answer": 0
    },
    {
      "question": "Одно из следующих утверждений относится к встроенной функции.",
      "answers": [
        "It executes faster as it is treated as a macro internally",
        "It executes faster because it priority is more than normal function",
        "It doesn’t executes faster compared to a normal function",
        "None of the above holds true for an inline function"
      ],
      "correct_answer": 0
    },
    {
      "question": "Символ escape-последовательности '\\ 0' занимает ____ пробел.",
      "answers": [
        "0",
        "1",
        "2",
        "4"
      ],
      "correct_answer": 1
    },
    {
      "question": "'cin' является __",
      "answers": [
        "Class",
        "Object",
        "Package",
        "Namespace"
      ],
      "correct_answer": 1
    },
    {
      "question": "Каков вывод следующей программы? <p>#include&lt;iostream&gt;</p>\n\n<p>using namespace std;<br />\nmain() {<br />\n&nbsp;&nbsp; short unsigned int i = 0;<br />\n&nbsp;&nbsp; cout&lt;&lt;i--;<br />\n}</p>\n",
      "answers": [
        "0",
        "Compile error",
        "65535",
        "32767"
      ],
      "correct_answer": 0
    },
    {
      "question": "Каков вывод следующей программы? <p>#include&lt;iostream&gt;</p>\n\n<p>using namespace std;<br />\nmain() {<br />\n&nbsp;&nbsp; class student {<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int rno = 10;<br />\n&nbsp;&nbsp; } v;<br />\n&nbsp;<br />\n&nbsp;&nbsp; cout&lt;&lt;v.rno;<br />\n}</p>\n",
      "answers": [
        "10",
        "Garbage",
        "Runtime error",
        "Compile error"
      ],
      "correct_answer": 3
    },
    {
      "question": "i) Один файл может быть открыт несколькими потоками одновременно.\n\n   II) Несколько файлов могут быть открыты одновременно одним потоком",
      "answers": [
        "(i) and (ii) are true",
        "(i) and (ii) are false",
        "Only (i) is true",
        "Only (ii) is true"
      ],
      "correct_answer": 2
    },
    {
      "question": "Выберите чисто виртуальное определение функции из следующих параметров.",
      "answers": [
        "virtual void f()=0 { }",
        "void virtual f()=0 { }",
        "virtual void f() {} = 0;",
        "None of the above."
      ],
      "correct_answer": 3
    },
    {
      "question": "Выберите оператора, который не может быть перегружен.",
      "answers": [
        "/",
        "()",
        "::",
        "%"
      ],
      "correct_answer": 2
    },
    {
      "question": "i) Технически обработка исключений предлагает множественное ветвление.\n\n   ii) Обработка исключений может быть смоделирована с помощью конструкции goto.",
      "answers": [
        "Only (i) is true",
        "Only (ii) is true",
        "Both (i) & (ii) are true",
        "Both (i) && (ii) are false"
      ],
      "correct_answer": 0
    },
    {
      "question": "Оператор программы C ++ может быть прокомментирован",
      "answers": [
        "Single line comment",
        "Multi line comment",
        "Multi line commentEither (a) or (b)",
        "Both (a) and (b)"
      ],
      "correct_answer": 3
    },
    {
      "question": "С каким спецификатором памяти изменяется переменная-член, даже если объект класса является постоянным объектом?",
      "answers": [
        "auto",
        "register",
        "static",
        "mutable"
      ],
      "correct_answer": 3
    }
  ]
}
