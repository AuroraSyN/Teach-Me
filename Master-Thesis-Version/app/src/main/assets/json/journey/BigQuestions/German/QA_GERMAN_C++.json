{
  "questionnaires": [
    {
      "question": "Ein Trigraph beginnt mit",
      "answers": [
        "#",
        "##",
        "?",
        "??"
      ],
      "correct_answer": 2
    },
    {
      "question": "Was ist die Ausgabe des folgenden Programms? <p>#include&lt;iostream&gt;<br />\nusing namespace std;<br />\nclass abc {</p>\n\n<p>&nbsp;&nbsp; public:<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i;</p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; abc(int i) {<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i = i;<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\n};</p>\n\n<p>main() {<br />\n&nbsp;&nbsp; abc m(5);<br />\n&nbsp; &nbsp;<br />\n&nbsp;&nbsp; cout&lt;&lt;m.i;<br />\n}</p>\n",
      "answers": [
        "5",
        "Garbage",
        "Error at the statement i=i;",
        "Compile error: ‘i’ declared twice."
      ],
      "correct_answer": 1
    },
    {
      "question": "Mit welchem Speicherspezifizierer wird die Membervariable geändert, obwohl das Klassenobjekt ein konstantes Objekt ist?",
      "answers": [
        "auto",
        "register",
        "static",
        "mutable"
      ],
      "correct_answer": 3
    },
    {
      "question": "Wir können Zeiger in der statischen Elementfunktion der Klasse verwenden.",
      "answers": [
        "true",
        "false"
      ],
      "correct_answer": 1
    },
    {
      "question": "Objekte, die mit einem neuen Operator erstellt wurden, werden im __ Speicher abgelegt.",
      "answers": [
        "Cache",
        "Heap",
        "Stack",
        "None of the above."
      ],
      "correct_answer": 1
    },
    {
      "question": "Bei den jeweiligen Streams wird >> (Operator) bezeichnet als",
      "answers": [
        "Insertion operator",
        "Extraction operator",
        "Right shift operator",
        "Left shift operator"
      ],
      "correct_answer": 1
    },
    {
      "question": "i) Die Ausnahmebehandlung bietet technisch eine Mehrfachverzweigung.\n\n ii) Die Ausnahmebehandlung kann mit dem 'goto'-Konstrukt nachgebildet werden.",
      "answers": [
        "Only (i) is true",
        "Only (ii) is true",
        "Both (i) & (ii) are true",
        "Both (i) && (ii) are false"
      ],
      "correct_answer": 0
    },
    {
      "question": "Was ist die Ausgabe des folgenden Programms? <p>#include&lt;iostream&gt;</p>\n\n<p>using namespace std;<br />\nvoid swap(int m, int n) {<br />\n&nbsp;&nbsp; int x = m;<br />\n&nbsp;&nbsp; m = n;<br />\n&nbsp;&nbsp; n = x;<br />\n}<br />\nmain() {<br />\n&nbsp;&nbsp; int x = 5, y = 3; &nbsp;<br />\n&nbsp;&nbsp; swap(x,y);<br />\n&nbsp;&nbsp; cout&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;y;<br />\n}</p>\n ",
      "answers": [
        "3 5",
        "5 3",
        "5 5",
        "Compile error"
      ],
      "correct_answer": 1
    },
    {
      "question": "Identifizierung den C ++ - Compiler für Linux",
      "answers": [
        "cpp",
        "g++",
        "Borland",
        "vc++"
      ],
      "correct_answer": 1
    },
    {
      "question": "Was ist die eingebaute Bibliotheksfunktion, um zwei Zeichenfolgen zu vergleichen?",
      "answers": [
        "string_cmp()",
        "strcmp()",
        "equals()",
        "str_compare()"
      ],
      "correct_answer": 1
    },
    {
      "question": "Was ist die Ausgabe des folgenden Programms? <p>#include&lt;iostream&gt;</p>\n\n<p>using namespace std;<br />\nmain() {<br />\n&nbsp;&nbsp; int i = 13, j = 60;<br />\n&nbsp;&nbsp; i^=j;<br />\n&nbsp;&nbsp; j^=i;<br />\n&nbsp;&nbsp; i^=j;<br />\n&nbsp;&nbsp; cout&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;j;<br />\n}</p>\n",
      "answers": [
        "73 73",
        "60 13",
        "13 60",
        "60 60"
      ],
      "correct_answer": 1
    },
    {
      "question": "Was ist eine generische Klasse?",
      "answers": [
        "Function template",
        "Class template",
        "Inherited class",
        "None of the above."
      ],
      "correct_answer": 1
    },
    {
      "question": "Was ist die Ausgabe des folgenden Programms? <p>#include&lt;iostream&gt;</p>\n\n<p>using namespace std;<br />\nvoid f() {<br />\n&nbsp;&nbsp; cout&lt;&lt;&quot;Hello&quot;&lt;&lt;endl;<br />\n}<br />\nmain() {<br />\n}</p>\n",
      "answers": [
        "No output",
        "Error, as the function is not called.",
        "Error, as the function is defined without its declaration",
        "Error, as the main() function is left empty"
      ],
      "correct_answer": 0
    },
    {
      "question": "Objekte, die mit einem neuen Operator erstellt wurden, werden im __ Speicher abgelegt",
      "answers": [
        "Cache",
        "Heap",
        "Stack",
        "None of the above"
      ],
      "correct_answer": 1
    },
    {
      "question": "Klassenfunktion, die beim Anlegen des Objekts automatisch aufgerufen wird, heißt __",
      "answers": [
        "Constructor",
        "Destructor",
        "Friend function",
        "Inline function"
      ],
      "correct_answer": 0
    },
    {
      "question": "Was ist die Ausgabe des folgenden Programms? <p>#include&lt;iostream&gt;</p>\n\n<p>using namespace std;<br />\nmain() {<br />\n&nbsp;&nbsp; char s[] = &quot;Fine&quot;;<br />\n&nbsp;&nbsp; &nbsp;*s = &#39;N&#39;;<br />\n&nbsp; &nbsp;<br />\n&nbsp;&nbsp; cout&lt;&lt;s&lt;&lt;endl;<br />\n}</p>\n",
      "answers": [
        "a) Fine",
        "b) Nine",
        "c) Compile error",
        "d) Runtime error"
      ],
      "correct_answer": 1
    },
    {
      "question": "Wie kann eine Klasse in C ++ als Schnittstelle fungieren?",
      "answers": [
        "By only providing all the functions as virtual functions in the class.",
        "Defining the class following with the keyword virtual",
        "Defining the class following with the keyword interface",
        "Defining the class following with the keyword abstract"
      ],
      "correct_answer": 0
    },
    {
      "question": "Eine der folgenden Aussagen gilt für eine Inline-Funktion.",
      "answers": [
        "It executes faster as it is treated as a macro internally",
        "It executes faster because it priority is more than normal function",
        "It doesn’t executes faster compared to a normal function",
        "None of the above holds true for an inline function"
      ],
      "correct_answer": 0
    },
    {
      "question": "Das Escape-Sequenzzeichen '\\ 0' belegt ____ Speicherplatz.",
      "answers": [
        "0",
        "1",
        "2",
        "4"
      ],
      "correct_answer": 1
    },
    {
      "question": "'cin' ist ein __",
      "answers": [
        "Class",
        "Object",
        "Package",
        "Namespace"
      ],
      "correct_answer": 1
    },
    {
      "question": "Was ist die Ausgabe des folgenden Programms? <p>#include&lt;iostream&gt;</p>\n\n<p>using namespace std;<br />\nmain() {<br />\n&nbsp;&nbsp; short unsigned int i = 0;<br />\n&nbsp;&nbsp; cout&lt;&lt;i--;<br />\n}</p>\n",
      "answers": [
        "0",
        "Compile error",
        "65535",
        "32767"
      ],
      "correct_answer": 0
    },
    {
      "question": "Was ist die Ausgabe des folgenden Programms? <p>#include&lt;iostream&gt;</p>\n\n<p>using namespace std;<br />\nmain() {<br />\n&nbsp;&nbsp; class student {<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int rno = 10;<br />\n&nbsp;&nbsp; } v;<br />\n&nbsp;<br />\n&nbsp;&nbsp; cout&lt;&lt;v.rno;<br />\n}</p>\n",
      "answers": [
        "10",
        "Garbage",
        "Runtime error",
        "Compile error"
      ],
      "correct_answer": 3
    },
    {
      "question": "i) Eine einzelne Datei kann von mehreren Streams gleichzeitig geöffnet werden.\n\n  ii) Es können mehrere Dateien gleichzeitig von einem Stream geöffnet werden",
      "answers": [
        "(i) and (ii) are true",
        "(i) and (ii) are false",
        "Only (i) is true",
        "Only (ii) is true"
      ],
      "correct_answer": 2
    },
    {
      "question": "Wählen Sie aus den folgenden Optionen die rein virtuelle Funktionsdefinition aus.",
      "answers": [
        "virtual void f()=0 { }",
        "void virtual f()=0 { }",
        "virtual void f() {} = 0;",
        "None of the above."
      ],
      "correct_answer": 3
    },
    {
      "question": "Wählen Sie den Operator, der nicht überladen werden kann.",
      "answers": [
        "/",
        "()",
        "::",
        "%"
      ],
      "correct_answer": 2
    },
    {
      "question": "i) Die Ausnahmebehandlung bietet technisch eine Mehrfachverzweigung.\n\n  ii) Die Ausnahmebehandlung kann mit dem 'goto'-Konstrukt nachgebildet werden.",
      "answers": [
        "Only (i) is true",
        "Only (ii) is true",
        "Both (i) & (ii) are true",
        "Both (i) && (ii) are false"
      ],
      "correct_answer": 0
    },
    {
      "question": "Eine C ++ Programmanweisung kann mit kommentiert werden",
      "answers": [
        "Single line comment",
        "Multi line comment",
        "Multi line commentEither (a) or (b)",
        "Both (a) and (b)"
      ],
      "correct_answer": 3
    },
    {
      "question": "Mit welchem Speicherspezifizierer wird die Membervariable geändert, obwohl das Klassenobjekt ein konstantes Objekt ist?",
      "answers": [
        "auto",
        "register",
        "static",
        "mutable"
      ],
      "correct_answer": 3
    }
  ]
}
